ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CyLib.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	cydelayFreqHz
  20              		.data
  21              		.align	2
  22              		.type	cydelayFreqHz, %object
  23              		.size	cydelayFreqHz, 4
  24              	cydelayFreqHz:
  25 0000 00366E01 		.word	24000000
  26              		.global	cydelayFreqKhz
  27              		.align	2
  28              		.type	cydelayFreqKhz, %object
  29              		.size	cydelayFreqKhz, 4
  30              	cydelayFreqKhz:
  31 0004 C05D0000 		.word	24000
  32              		.global	cydelayFreqMhz
  33              		.type	cydelayFreqMhz, %object
  34              		.size	cydelayFreqMhz, 1
  35              	cydelayFreqMhz:
  36 0008 18       		.byte	24
  37              		.global	cydelay32kMs
  38 0009 000000   		.align	2
  39              		.type	cydelay32kMs, %object
  40              		.size	cydelay32kMs, 4
  41              	cydelay32kMs:
  42 000c 0000E02E 		.word	786432000
  43              		.bss
  44              		.align	2
  45              	CySysTickCallbacks:
  46 0000 00000000 		.space	20
  46      00000000 
  46      00000000 
  46      00000000 
  46      00000000 
  47              		.global	CySysTickInitVar
  48              		.align	2
  49              		.type	CySysTickInitVar, %object
  50              		.size	CySysTickInitVar, 4
  51              	CySysTickInitVar:
  52 0014 00000000 		.space	4
  53              		.global	cyImoFreqMhz2Reg
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 2


  54              		.section	.rodata
  55              		.align	2
  56              		.type	cyImoFreqMhz2Reg, %object
  57              		.size	cyImoFreqMhz2Reg, 46
  58              	cyImoFreqMhz2Reg:
  59 0000 03       		.byte	3
  60 0001 04       		.byte	4
  61 0002 05       		.byte	5
  62 0003 06       		.byte	6
  63 0004 07       		.byte	7
  64 0005 08       		.byte	8
  65 0006 09       		.byte	9
  66 0007 0A       		.byte	10
  67 0008 0B       		.byte	11
  68 0009 0C       		.byte	12
  69 000a 0E       		.byte	14
  70 000b 0F       		.byte	15
  71 000c 10       		.byte	16
  72 000d 11       		.byte	17
  73 000e 12       		.byte	18
  74 000f 13       		.byte	19
  75 0010 14       		.byte	20
  76 0011 15       		.byte	21
  77 0012 16       		.byte	22
  78 0013 17       		.byte	23
  79 0014 18       		.byte	24
  80 0015 19       		.byte	25
  81 0016 1B       		.byte	27
  82 0017 1C       		.byte	28
  83 0018 1D       		.byte	29
  84 0019 1E       		.byte	30
  85 001a 1F       		.byte	31
  86 001b 20       		.byte	32
  87 001c 21       		.byte	33
  88 001d 22       		.byte	34
  89 001e 23       		.byte	35
  90 001f 25       		.byte	37
  91 0020 26       		.byte	38
  92 0021 27       		.byte	39
  93 0022 28       		.byte	40
  94 0023 29       		.byte	41
  95 0024 2A       		.byte	42
  96 0025 2B       		.byte	43
  97 0026 2E       		.byte	46
  98 0027 2F       		.byte	47
  99 0028 30       		.byte	48
 100 0029 31       		.byte	49
 101 002a 32       		.byte	50
 102 002b 33       		.byte	51
 103 002c 34       		.byte	52
 104 002d 35       		.byte	53
 105              		.section	.text.CySysClkImoStart,"ax",%progbits
 106              		.align	2
 107              		.global	CySysClkImoStart
 108              		.code	16
 109              		.thumb_func
 110              		.type	CySysClkImoStart, %function
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 3


 111              	CySysClkImoStart:
 112              	.LFB0:
 113              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/CyLib.c **** * File Name: CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * Version 5.30
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** *  Description:
   6:Generated_Source\PSoC4/CyLib.c **** *   Provides a system API for the Clocking, Interrupts, SysTick, and Voltage
   7:Generated_Source\PSoC4/CyLib.c **** *   Detect.
   8:Generated_Source\PSoC4/CyLib.c **** *
   9:Generated_Source\PSoC4/CyLib.c **** *  Note:
  10:Generated_Source\PSoC4/CyLib.c **** *   Documentation of the API's in this file is located in the PSoC 4 System
  11:Generated_Source\PSoC4/CyLib.c **** *   Reference Guide provided with PSoC Creator.
  12:Generated_Source\PSoC4/CyLib.c **** *
  13:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  14:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2015, Cypress Semiconductor Corporation.  All rights reserved.
  15:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  16:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  17:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  18:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  19:Generated_Source\PSoC4/CyLib.c **** 
  20:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  21:Generated_Source\PSoC4/CyLib.c **** 
  22:Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  23:Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  24:Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  25:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  26:Generated_Source\PSoC4/CyLib.c **** 
  27:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  28:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  29:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  30:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  31:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
  32:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  33:Generated_Source\PSoC4/CyLib.c **** 
  34:Generated_Source\PSoC4/CyLib.c **** 
  35:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  36:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  37:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
  38:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  39:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  40:Generated_Source\PSoC4/CyLib.c **** #endif /* #if (CY_IP_SRSSV2 && CY_IP_PLL) */
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c **** 
  43:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  44:Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  45:Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  46:Generated_Source\PSoC4/CyLib.c **** *
  47:Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  48:Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  49:Generated_Source\PSoC4/CyLib.c **** *
  50:Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  51:Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  52:Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  53:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  54:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 4


  55:Generated_Source\PSoC4/CyLib.c **** 
  56:Generated_Source\PSoC4/CyLib.c **** 
  57:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  58:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  59:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  60:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  61:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  64:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  70:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  71:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  72:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  73:Generated_Source\PSoC4/CyLib.c **** 
  74:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  75:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between IMO frequency and WCO DPLL max offset steps */
  76:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2DpllOffset[CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_SIZE] = {
  77:Generated_Source\PSoC4/CyLib.c ****             /* 26 MHz */  238u, /* 27 MHz */  219u, /* 28 MHz */  201u, /* 29 MHz */  185u,
  78:Generated_Source\PSoC4/CyLib.c ****             /* 30 MHz */  170u, /* 31 MHz */  155u, /* 32 MHz */  142u, /* 33 MHz */  130u,
  79:Generated_Source\PSoC4/CyLib.c ****             /* 34 MHz */  118u, /* 35 MHz */  107u, /* 36 MHz */   96u, /* 37 MHz */  86u,
  80:Generated_Source\PSoC4/CyLib.c ****             /* 38 MHz */   77u, /* 39 MHz */   68u, /* 40 MHz */   59u, /* 41 MHz */  51u,
  81:Generated_Source\PSoC4/CyLib.c ****             /* 42 MHz */   44u, /* 43 MHz */   36u, /* 44 MHz */   29u, /* 45 MHz */  23u,
  82:Generated_Source\PSoC4/CyLib.c ****             /* 46 MHz */   16u, /* 47 MHz */   10u, /* 48 MHz */   4u };
  83:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
  84:Generated_Source\PSoC4/CyLib.c **** 
  85:Generated_Source\PSoC4/CyLib.c **** /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  86:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
  87:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkImoTrim4 = 0u;
  88:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
  89:Generated_Source\PSoC4/CyLib.c **** 
  90:Generated_Source\PSoC4/CyLib.c **** 
  91:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  92:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  93:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  94:Generated_Source\PSoC4/CyLib.c **** *
  95:Generated_Source\PSoC4/CyLib.c **** * Summary:
  96:Generated_Source\PSoC4/CyLib.c **** *  Enables the IMO.
  97:Generated_Source\PSoC4/CyLib.c **** *
  98:Generated_Source\PSoC4/CyLib.c **** *  For PSoC 4100M / PSoC 4200M devices, this function will also enable WCO lock
  99:Generated_Source\PSoC4/CyLib.c **** *  if selected in the Design Wide Resources tab.
 100:Generated_Source\PSoC4/CyLib.c **** *
 101:Generated_Source\PSoC4/CyLib.c **** *  For PSoC 4200L devices, this function will also enable USB lock if selected
 102:Generated_Source\PSoC4/CyLib.c **** *  in the Design Wide Resources tab.
 103:Generated_Source\PSoC4/CyLib.c **** *
 104:Generated_Source\PSoC4/CyLib.c **** * Parameters:
 105:Generated_Source\PSoC4/CyLib.c **** *  None
 106:Generated_Source\PSoC4/CyLib.c **** *
 107:Generated_Source\PSoC4/CyLib.c **** * Return:
 108:Generated_Source\PSoC4/CyLib.c **** *  None
 109:Generated_Source\PSoC4/CyLib.c **** *
 110:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 111:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 5


 112:Generated_Source\PSoC4/CyLib.c **** {
 114              		.loc 1 112 0
 115              		.cfi_startproc
 116              		@ args = 0, pretend = 0, frame = 0
 117              		@ frame_needed = 1, uses_anonymous_args = 0
 118 0000 80B5     		push	{r7, lr}
 119              		.cfi_def_cfa_offset 8
 120              		.cfi_offset 7, -8
 121              		.cfi_offset 14, -4
 122 0002 00AF     		add	r7, sp, #0
 123              		.cfi_def_cfa_register 7
 113:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
 124              		.loc 1 113 0
 125 0004 044B     		ldr	r3, .L2
 126 0006 044A     		ldr	r2, .L2
 127 0008 1268     		ldr	r2, [r2]
 128 000a 8021     		movs	r1, #128
 129 000c 0906     		lsls	r1, r1, #24
 130 000e 0A43     		orrs	r2, r1
 131 0010 1A60     		str	r2, [r3]
 114:Generated_Source\PSoC4/CyLib.c **** 
 115:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 116:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 117:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 118:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 119:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 120:Generated_Source\PSoC4/CyLib.c **** 
 121:Generated_Source\PSoC4/CyLib.c **** 
 122:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 123:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 124:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 125:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 126:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 127:Generated_Source\PSoC4/CyLib.c **** 
 128:Generated_Source\PSoC4/CyLib.c **** }
 132              		.loc 1 128 0
 133 0012 C046     		nop
 134 0014 BD46     		mov	sp, r7
 135              		@ sp needed
 136 0016 80BD     		pop	{r7, pc}
 137              	.L3:
 138              		.align	2
 139              	.L2:
 140 0018 08010B40 		.word	1074462984
 141              		.cfi_endproc
 142              	.LFE0:
 143              		.size	CySysClkImoStart, .-CySysClkImoStart
 144              		.section	.text.CySysClkImoStop,"ax",%progbits
 145              		.align	2
 146              		.global	CySysClkImoStop
 147              		.code	16
 148              		.thumb_func
 149              		.type	CySysClkImoStop, %function
 150              	CySysClkImoStop:
 151              	.LFB1:
 129:Generated_Source\PSoC4/CyLib.c **** 
 130:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 6


 131:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 132:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 133:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 134:Generated_Source\PSoC4/CyLib.c **** *
 135:Generated_Source\PSoC4/CyLib.c **** * Summary:
 136:Generated_Source\PSoC4/CyLib.c **** *  Disables the IMO.
 137:Generated_Source\PSoC4/CyLib.c **** *
 138:Generated_Source\PSoC4/CyLib.c **** *  For PSoC 4100M/PSoC 4200M devices, this function will also disable WCO lock.
 139:Generated_Source\PSoC4/CyLib.c **** *
 140:Generated_Source\PSoC4/CyLib.c **** *  For PSoC PSoC 4200L devices, this function will also disable USB lock.
 141:Generated_Source\PSoC4/CyLib.c **** *
 142:Generated_Source\PSoC4/CyLib.c **** * Parameters:
 143:Generated_Source\PSoC4/CyLib.c **** *  None
 144:Generated_Source\PSoC4/CyLib.c **** *
 145:Generated_Source\PSoC4/CyLib.c **** * Return:
 146:Generated_Source\PSoC4/CyLib.c **** *  None
 147:Generated_Source\PSoC4/CyLib.c **** *
 148:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 149:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 150:Generated_Source\PSoC4/CyLib.c **** {
 152              		.loc 1 150 0
 153              		.cfi_startproc
 154              		@ args = 0, pretend = 0, frame = 0
 155              		@ frame_needed = 1, uses_anonymous_args = 0
 156 0000 80B5     		push	{r7, lr}
 157              		.cfi_def_cfa_offset 8
 158              		.cfi_offset 7, -8
 159              		.cfi_offset 14, -4
 160 0002 00AF     		add	r7, sp, #0
 161              		.cfi_def_cfa_register 7
 151:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 152:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 153:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 154:Generated_Source\PSoC4/CyLib.c **** 
 155:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 156:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 157:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 158:Generated_Source\PSoC4/CyLib.c **** 
 159:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
 162              		.loc 1 159 0
 163 0004 044B     		ldr	r3, .L5
 164 0006 044A     		ldr	r2, .L5
 165 0008 1268     		ldr	r2, [r2]
 166 000a 5200     		lsls	r2, r2, #1
 167 000c 5208     		lsrs	r2, r2, #1
 168 000e 1A60     		str	r2, [r3]
 160:Generated_Source\PSoC4/CyLib.c **** }
 169              		.loc 1 160 0
 170 0010 C046     		nop
 171 0012 BD46     		mov	sp, r7
 172              		@ sp needed
 173 0014 80BD     		pop	{r7, pc}
 174              	.L6:
 175 0016 C046     		.align	2
 176              	.L5:
 177 0018 08010B40 		.word	1074462984
 178              		.cfi_endproc
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 7


 179              	.LFE1:
 180              		.size	CySysClkImoStop, .-CySysClkImoStop
 181              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
 182              		.align	2
 183              		.global	CySysClkWriteHfclkDirect
 184              		.code	16
 185              		.thumb_func
 186              		.type	CySysClkWriteHfclkDirect, %function
 187              	CySysClkWriteHfclkDirect:
 188              	.LFB2:
 161:Generated_Source\PSoC4/CyLib.c **** 
 162:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 163:Generated_Source\PSoC4/CyLib.c **** 
 164:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 165:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 166:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 167:Generated_Source\PSoC4/CyLib.c ****     *
 168:Generated_Source\PSoC4/CyLib.c ****     * Summary:
 169:Generated_Source\PSoC4/CyLib.c ****     *  Enables the IMO to WCO lock feature. This function works only if the WCO is
 170:Generated_Source\PSoC4/CyLib.c ****     *  already enabled. If the WCO is not enabled then this function returns
 171:Generated_Source\PSoC4/CyLib.c ****     *  without enabling the lock feature.
 172:Generated_Source\PSoC4/CyLib.c ****     *
 173:Generated_Source\PSoC4/CyLib.c ****     *  It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 174:Generated_Source\PSoC4/CyLib.c ****     *  CyDelay() function. The delay interval is measured based on the system
 175:Generated_Source\PSoC4/CyLib.c ****     *  frequency defined by PSoC Creator at build time. If System clock frequency
 176:Generated_Source\PSoC4/CyLib.c ****     *  is changed in runtime, the CyDelayFreq() with the appropriate parameter
 177:Generated_Source\PSoC4/CyLib.c ****     *  should be called.
 178:Generated_Source\PSoC4/CyLib.c ****     *
 179:Generated_Source\PSoC4/CyLib.c ****     *  For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 180:Generated_Source\PSoC4/CyLib.c ****     *  but not both.
 181:Generated_Source\PSoC4/CyLib.c ****     *
 182:Generated_Source\PSoC4/CyLib.c ****     *  This function is applicable for PSoC 4100M, PSoC 4200M and  PSoC 4200L.
 183:Generated_Source\PSoC4/CyLib.c ****     *
 184:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 185:Generated_Source\PSoC4/CyLib.c ****     *  None
 186:Generated_Source\PSoC4/CyLib.c ****     *
 187:Generated_Source\PSoC4/CyLib.c ****     * Return:
 188:Generated_Source\PSoC4/CyLib.c ****     *  None
 189:Generated_Source\PSoC4/CyLib.c ****     *
 190:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 191:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 192:Generated_Source\PSoC4/CyLib.c ****     {
 193:Generated_Source\PSoC4/CyLib.c ****         uint32 i;
 194:Generated_Source\PSoC4/CyLib.c ****         uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 195:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 196:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 197:Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 198:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 199:Generated_Source\PSoC4/CyLib.c **** 
 200:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 201:Generated_Source\PSoC4/CyLib.c ****         {
 202:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 203:Generated_Source\PSoC4/CyLib.c **** 
 204:Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 205:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 206:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 207:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 8


 208:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 209:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 210:Generated_Source\PSoC4/CyLib.c **** 
 211:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 212:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 213:Generated_Source\PSoC4/CyLib.c ****             {
 214:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 215:Generated_Source\PSoC4/CyLib.c ****                 {
 216:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 217:Generated_Source\PSoC4/CyLib.c ****                     break;
 218:Generated_Source\PSoC4/CyLib.c ****                 }
 219:Generated_Source\PSoC4/CyLib.c ****             }
 220:Generated_Source\PSoC4/CyLib.c **** 
 221:Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 222:Generated_Source\PSoC4/CyLib.c ****             if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 223:Generated_Source\PSoC4/CyLib.c ****             {
 224:Generated_Source\PSoC4/CyLib.c **** 			    CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_M
 225:Generated_Source\PSoC4/CyLib.c **** 			             				    CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 226:Generated_Source\PSoC4/CyLib.c ****             }
 227:Generated_Source\PSoC4/CyLib.c **** 
 228:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 229:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 230:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 231:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 232:Generated_Source\PSoC4/CyLib.c **** 
 233:Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 234:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 235:Generated_Source\PSoC4/CyLib.c **** 
 236:Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 237:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 238:Generated_Source\PSoC4/CyLib.c **** 
 239:Generated_Source\PSoC4/CyLib.c ****             /* Set maximum allowed IMO offset */
 240:Generated_Source\PSoC4/CyLib.c ****             if (freq < CY_SYS_CLK_IMO_FREQ_WCO_DPLL_SAFE_POINT)
 241:Generated_Source\PSoC4/CyLib.c ****             {
 242:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << CY_SYS_CLK_WCO_CONFIG_DPLL_LF
 243:Generated_Source\PSoC4/CyLib.c ****             }
 244:Generated_Source\PSoC4/CyLib.c ****             else
 245:Generated_Source\PSoC4/CyLib.c ****             {
 246:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) +
 247:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 248:Generated_Source\PSoC4/CyLib.c **** 
 249:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (lfLimit > CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX) ?
 250:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX : lfLimit;
 251:Generated_Source\PSoC4/CyLib.c **** 
 252:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT);
 253:Generated_Source\PSoC4/CyLib.c ****             }
 254:Generated_Source\PSoC4/CyLib.c **** 
 255:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 256:Generated_Source\PSoC4/CyLib.c **** 
 257:Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 258:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 259:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 260:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
 261:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 262:Generated_Source\PSoC4/CyLib.c **** 
 263:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 264:Generated_Source\PSoC4/CyLib.c ****         }
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 9


 265:Generated_Source\PSoC4/CyLib.c ****     }
 266:Generated_Source\PSoC4/CyLib.c **** 
 267:Generated_Source\PSoC4/CyLib.c **** 
 268:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 269:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 270:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 271:Generated_Source\PSoC4/CyLib.c ****     *
 272:Generated_Source\PSoC4/CyLib.c ****     * Summary:
 273:Generated_Source\PSoC4/CyLib.c ****     *  Disables the IMO to WCO lock feature.
 274:Generated_Source\PSoC4/CyLib.c ****     *
 275:Generated_Source\PSoC4/CyLib.c ****     *  This function is applicable for PSoC 4100M, PSoC 4200M and  PSoC 4200L.
 276:Generated_Source\PSoC4/CyLib.c ****     *
 277:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 278:Generated_Source\PSoC4/CyLib.c ****     *  None
 279:Generated_Source\PSoC4/CyLib.c ****     *
 280:Generated_Source\PSoC4/CyLib.c ****     * Return:
 281:Generated_Source\PSoC4/CyLib.c ****     *  None
 282:Generated_Source\PSoC4/CyLib.c ****     *
 283:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 284:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 285:Generated_Source\PSoC4/CyLib.c ****     {
 286:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 287:Generated_Source\PSoC4/CyLib.c ****     }
 288:Generated_Source\PSoC4/CyLib.c **** 
 289:Generated_Source\PSoC4/CyLib.c **** 
 290:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 291:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 292:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 293:Generated_Source\PSoC4/CyLib.c ****     *
 294:Generated_Source\PSoC4/CyLib.c ****     * Summary:
 295:Generated_Source\PSoC4/CyLib.c ****     *  Reports the IMO to WCO lock enable state.
 296:Generated_Source\PSoC4/CyLib.c ****     *
 297:Generated_Source\PSoC4/CyLib.c ****     *  This function is applicable for PSoC 4100M, PSoC 4200M and  PSoC 4200L.
 298:Generated_Source\PSoC4/CyLib.c ****     *
 299:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 300:Generated_Source\PSoC4/CyLib.c ****     *  None
 301:Generated_Source\PSoC4/CyLib.c ****     *
 302:Generated_Source\PSoC4/CyLib.c ****     * Return:
 303:Generated_Source\PSoC4/CyLib.c ****     *  1 if IMO to WCO lock is enabled, and 0 if IMO to WCO lock is disabled.
 304:Generated_Source\PSoC4/CyLib.c ****     *
 305:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 306:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 307:Generated_Source\PSoC4/CyLib.c ****     {
 308:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 309:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 310:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 311:Generated_Source\PSoC4/CyLib.c ****     }
 312:Generated_Source\PSoC4/CyLib.c **** 
 313:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 314:Generated_Source\PSoC4/CyLib.c **** 
 315:Generated_Source\PSoC4/CyLib.c **** 
 316:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 317:Generated_Source\PSoC4/CyLib.c **** 
 318:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 319:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 320:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 321:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 10


 322:Generated_Source\PSoC4/CyLib.c ****     * Summary:
 323:Generated_Source\PSoC4/CyLib.c ****     *  Enables the IMO to USB lock feature.
 324:Generated_Source\PSoC4/CyLib.c ****     *
 325:Generated_Source\PSoC4/CyLib.c ****     *  This function must be called before CySysClkWriteImoFreq().
 326:Generated_Source\PSoC4/CyLib.c ****     *
 327:Generated_Source\PSoC4/CyLib.c ****     *  This function is called from CySysClkImoStart() function if USB lock
 328:Generated_Source\PSoC4/CyLib.c ****     *  selected in the Design Wide Resources tab.
 329:Generated_Source\PSoC4/CyLib.c ****     *
 330:Generated_Source\PSoC4/CyLib.c ****     *  This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 331:Generated_Source\PSoC4/CyLib.c ****     *  devices, the IMO can lock to either WCO or USB, but not both.
 332:Generated_Source\PSoC4/CyLib.c ****     *
 333:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 334:Generated_Source\PSoC4/CyLib.c ****     *  None
 335:Generated_Source\PSoC4/CyLib.c ****     *
 336:Generated_Source\PSoC4/CyLib.c ****     * Return:
 337:Generated_Source\PSoC4/CyLib.c ****     *  None
 338:Generated_Source\PSoC4/CyLib.c ****     *
 339:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 340:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 341:Generated_Source\PSoC4/CyLib.c ****     {
 342:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 343:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 344:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 345:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 346:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 347:Generated_Source\PSoC4/CyLib.c **** 
 348:Generated_Source\PSoC4/CyLib.c ****         /* Save CY_SYS_CLK_IMO_TRIM4_REG and set IMO gain for USB lock */
 349:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_MASK;
 350:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_
 351:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 352:Generated_Source\PSoC4/CyLib.c **** 
 353:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 354:Generated_Source\PSoC4/CyLib.c ****     }
 355:Generated_Source\PSoC4/CyLib.c **** 
 356:Generated_Source\PSoC4/CyLib.c **** 
 357:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 358:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 359:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 360:Generated_Source\PSoC4/CyLib.c ****     *
 361:Generated_Source\PSoC4/CyLib.c ****     * Summary:
 362:Generated_Source\PSoC4/CyLib.c ****     *  Disables the IMO to USB lock feature.
 363:Generated_Source\PSoC4/CyLib.c ****     *
 364:Generated_Source\PSoC4/CyLib.c ****     *  This function is called from CySysClkImoStop() function if USB lock selected
 365:Generated_Source\PSoC4/CyLib.c ****     *  in the Design Wide Resources tab.
 366:Generated_Source\PSoC4/CyLib.c ****     *
 367:Generated_Source\PSoC4/CyLib.c ****     *  This is applicable for PSoC 4200L family of devices only.
 368:Generated_Source\PSoC4/CyLib.c ****     *
 369:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 370:Generated_Source\PSoC4/CyLib.c ****     *  None
 371:Generated_Source\PSoC4/CyLib.c ****     *
 372:Generated_Source\PSoC4/CyLib.c ****     * Return:
 373:Generated_Source\PSoC4/CyLib.c ****     *  None
 374:Generated_Source\PSoC4/CyLib.c ****     *
 375:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 376:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 377:Generated_Source\PSoC4/CyLib.c ****     {
 378:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 11


 379:Generated_Source\PSoC4/CyLib.c **** 
 380:Generated_Source\PSoC4/CyLib.c ****         /* Restore CY_SYS_CLK_IMO_TRIM4_REG */
 381:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_
 382:Generated_Source\PSoC4/CyLib.c ****                                     CySysClkImoTrim4;
 383:Generated_Source\PSoC4/CyLib.c ****     }
 384:Generated_Source\PSoC4/CyLib.c **** 
 385:Generated_Source\PSoC4/CyLib.c **** 
 386:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 387:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 388:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 389:Generated_Source\PSoC4/CyLib.c ****     *
 390:Generated_Source\PSoC4/CyLib.c ****     * Summary:
 391:Generated_Source\PSoC4/CyLib.c ****     *  Reports the IMO to USB lock enable state.
 392:Generated_Source\PSoC4/CyLib.c ****     *
 393:Generated_Source\PSoC4/CyLib.c ****     *  This function is applicable for PSoC 4200L devices only.
 394:Generated_Source\PSoC4/CyLib.c ****     *
 395:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 396:Generated_Source\PSoC4/CyLib.c ****     *  None
 397:Generated_Source\PSoC4/CyLib.c ****     *
 398:Generated_Source\PSoC4/CyLib.c ****     * Return:
 399:Generated_Source\PSoC4/CyLib.c ****     *  1 if IMO to USB lock is enabled, and 0 if IMO to USB lock is disabled.
 400:Generated_Source\PSoC4/CyLib.c ****     *
 401:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 402:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 403:Generated_Source\PSoC4/CyLib.c ****     {
 404:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 405:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 406:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 407:Generated_Source\PSoC4/CyLib.c ****     }
 408:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 409:Generated_Source\PSoC4/CyLib.c **** 
 410:Generated_Source\PSoC4/CyLib.c **** 
 411:Generated_Source\PSoC4/CyLib.c **** 
 412:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 413:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 414:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 415:Generated_Source\PSoC4/CyLib.c **** *
 416:Generated_Source\PSoC4/CyLib.c **** * Summary:
 417:Generated_Source\PSoC4/CyLib.c **** *  Selects the direct source for the HFCLK.
 418:Generated_Source\PSoC4/CyLib.c **** *
 419:Generated_Source\PSoC4/CyLib.c **** * Parameters:
 420:Generated_Source\PSoC4/CyLib.c **** *  clkSelect: One of the available HFCLK direct sources:
 421:Generated_Source\PSoC4/CyLib.c **** *   Define                    Source
 422:Generated_Source\PSoC4/CyLib.c **** *    CY_SYS_CLK_HFCLK_IMO     IMO
 423:Generated_Source\PSoC4/CyLib.c **** *    CY_SYS_CLK_HFCLK_EXTCLK  External clock pin
 424:Generated_Source\PSoC4/CyLib.c **** *    CY_SYS_CLK_HFCLK_ECO     External crystal oscillator
 425:Generated_Source\PSoC4/CyLib.c **** *                             (applicable only for PSoC 4100-BL / PSoC 4200-BL)
 426:Generated_Source\PSoC4/CyLib.c **** *    CY_SYS_CLK_HFCLK_PLL0    PLL#0
 427:Generated_Source\PSoC4/CyLib.c **** *                             (applicable only for PSoC 4200L)
 428:Generated_Source\PSoC4/CyLib.c **** *    CY_SYS_CLK_HFCLK_PLL1    PLL#1
 429:Generated_Source\PSoC4/CyLib.c **** *                             (applicable only for PSoC 4200L)
 430:Generated_Source\PSoC4/CyLib.c **** *
 431:Generated_Source\PSoC4/CyLib.c **** * Return:
 432:Generated_Source\PSoC4/CyLib.c **** *  None
 433:Generated_Source\PSoC4/CyLib.c **** *
 434:Generated_Source\PSoC4/CyLib.c **** * Side Effects:
 435:Generated_Source\PSoC4/CyLib.c **** *  The new source must be running and stable before calling this function.
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 12


 436:Generated_Source\PSoC4/CyLib.c **** *
 437:Generated_Source\PSoC4/CyLib.c **** *  PSoC 4000:
 438:Generated_Source\PSoC4/CyLib.c **** *  The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 439:Generated_Source\PSoC4/CyLib.c **** *  be selected in a way to not to exceed 16 MHz for the System clock.
 440:Generated_Source\PSoC4/CyLib.c **** *
 441:Generated_Source\PSoC4/CyLib.c **** *  If the SYSCLK clock frequency increases during device operation, call
 442:Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 443:Generated_Source\PSoC4/CyLib.c **** *  of clock cycles the cache will wait before sampling data comes back from
 444:Generated_Source\PSoC4/CyLib.c **** *  Flash. If the SYSCLK clock frequency decreases, you can call
 445:Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() to improve the CPU performance. See
 446:Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() description for more information.
 447:Generated_Source\PSoC4/CyLib.c **** *
 448:Generated_Source\PSoC4/CyLib.c **** *  Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 449:Generated_Source\PSoC4/CyLib.c **** *  maximum permissible value for HFCLK.
 450:Generated_Source\PSoC4/CyLib.c **** *
 451:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 452:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 453:Generated_Source\PSoC4/CyLib.c **** {
 189              		.loc 1 453 0
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 16
 192              		@ frame_needed = 1, uses_anonymous_args = 0
 193 0000 90B5     		push	{r4, r7, lr}
 194              		.cfi_def_cfa_offset 12
 195              		.cfi_offset 4, -12
 196              		.cfi_offset 7, -8
 197              		.cfi_offset 14, -4
 198 0002 85B0     		sub	sp, sp, #20
 199              		.cfi_def_cfa_offset 32
 200 0004 00AF     		add	r7, sp, #0
 201              		.cfi_def_cfa_register 7
 202 0006 7860     		str	r0, [r7, #4]
 454:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 455:Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 456:Generated_Source\PSoC4/CyLib.c **** 
 457:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 203              		.loc 1 457 0
 204 0008 0F23     		movs	r3, #15
 205 000a FC18     		adds	r4, r7, r3
 206 000c FFF7FEFF 		bl	CyEnterCriticalSection
 207 0010 0300     		movs	r3, r0
 208 0012 2370     		strb	r3, [r4]
 458:Generated_Source\PSoC4/CyLib.c **** 
 459:Generated_Source\PSoC4/CyLib.c **** 
 460:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
 209              		.loc 1 460 0
 210 0014 0B4B     		ldr	r3, .L8
 211 0016 1B68     		ldr	r3, [r3]
 212 0018 0722     		movs	r2, #7
 213 001a 9343     		bics	r3, r2
 214 001c BB60     		str	r3, [r7, #8]
 461:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 462:Generated_Source\PSoC4/CyLib.c **** 
 463:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 464:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 465:Generated_Source\PSoC4/CyLib.c ****     {
 466:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 13


 467:Generated_Source\PSoC4/CyLib.c ****     }
 468:Generated_Source\PSoC4/CyLib.c ****     else
 469:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 470:Generated_Source\PSoC4/CyLib.c ****     {
 471:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 215              		.loc 1 471 0
 216 001e 7B68     		ldr	r3, [r7, #4]
 217 0020 0722     		movs	r2, #7
 218 0022 1340     		ands	r3, r2
 219 0024 BA68     		ldr	r2, [r7, #8]
 220 0026 1343     		orrs	r3, r2
 221 0028 BB60     		str	r3, [r7, #8]
 472:Generated_Source\PSoC4/CyLib.c ****     }
 473:Generated_Source\PSoC4/CyLib.c **** 
 474:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 222              		.loc 1 474 0
 223 002a 064B     		ldr	r3, .L8
 224 002c BA68     		ldr	r2, [r7, #8]
 225 002e 1A60     		str	r2, [r3]
 475:Generated_Source\PSoC4/CyLib.c **** 
 476:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 226              		.loc 1 476 0
 227 0030 0F23     		movs	r3, #15
 228 0032 FB18     		adds	r3, r7, r3
 229 0034 1B78     		ldrb	r3, [r3]
 230 0036 1800     		movs	r0, r3
 231 0038 FFF7FEFF 		bl	CyExitCriticalSection
 477:Generated_Source\PSoC4/CyLib.c **** }
 232              		.loc 1 477 0
 233 003c C046     		nop
 234 003e BD46     		mov	sp, r7
 235 0040 05B0     		add	sp, sp, #20
 236              		@ sp needed
 237 0042 90BD     		pop	{r4, r7, pc}
 238              	.L9:
 239              		.align	2
 240              	.L8:
 241 0044 00010B40 		.word	1074462976
 242              		.cfi_endproc
 243              	.LFE2:
 244              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 245              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 246              		.align	2
 247              		.global	CySysClkGetSysclkSource
 248              		.code	16
 249              		.thumb_func
 250              		.type	CySysClkGetSysclkSource, %function
 251              	CySysClkGetSysclkSource:
 252              	.LFB3:
 478:Generated_Source\PSoC4/CyLib.c **** 
 479:Generated_Source\PSoC4/CyLib.c **** 
 480:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 481:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 482:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 483:Generated_Source\PSoC4/CyLib.c **** *
 484:Generated_Source\PSoC4/CyLib.c **** * Summary:
 485:Generated_Source\PSoC4/CyLib.c **** *  Returns the source of the System clock.
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 14


 486:Generated_Source\PSoC4/CyLib.c **** *
 487:Generated_Source\PSoC4/CyLib.c **** * Parameters:
 488:Generated_Source\PSoC4/CyLib.c **** *  None
 489:Generated_Source\PSoC4/CyLib.c **** *
 490:Generated_Source\PSoC4/CyLib.c **** * Return:
 491:Generated_Source\PSoC4/CyLib.c **** *  The same as CySysClkWriteHfclkDirect() function parameters.
 492:Generated_Source\PSoC4/CyLib.c **** *
 493:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 494:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 495:Generated_Source\PSoC4/CyLib.c **** {
 253              		.loc 1 495 0
 254              		.cfi_startproc
 255              		@ args = 0, pretend = 0, frame = 8
 256              		@ frame_needed = 1, uses_anonymous_args = 0
 257 0000 90B5     		push	{r4, r7, lr}
 258              		.cfi_def_cfa_offset 12
 259              		.cfi_offset 4, -12
 260              		.cfi_offset 7, -8
 261              		.cfi_offset 14, -4
 262 0002 83B0     		sub	sp, sp, #12
 263              		.cfi_def_cfa_offset 24
 264 0004 00AF     		add	r7, sp, #0
 265              		.cfi_def_cfa_register 7
 496:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 497:Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 498:Generated_Source\PSoC4/CyLib.c **** 
 499:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 266              		.loc 1 499 0
 267 0006 FC1D     		adds	r4, r7, #7
 268 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 269 000c 0300     		movs	r3, r0
 270 000e 2370     		strb	r3, [r4]
 500:Generated_Source\PSoC4/CyLib.c **** 
 501:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 502:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 503:Generated_Source\PSoC4/CyLib.c ****     {
 504:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 505:Generated_Source\PSoC4/CyLib.c ****     }
 506:Generated_Source\PSoC4/CyLib.c ****     else
 507:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 508:Generated_Source\PSoC4/CyLib.c ****     {
 509:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 271              		.loc 1 509 0
 272 0010 074B     		ldr	r3, .L12
 273 0012 1B68     		ldr	r3, [r3]
 274 0014 0722     		movs	r2, #7
 275 0016 1340     		ands	r3, r2
 276 0018 3B60     		str	r3, [r7]
 510:Generated_Source\PSoC4/CyLib.c ****     }
 511:Generated_Source\PSoC4/CyLib.c **** 
 512:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 277              		.loc 1 512 0
 278 001a FB1D     		adds	r3, r7, #7
 279 001c 1B78     		ldrb	r3, [r3]
 280 001e 1800     		movs	r0, r3
 281 0020 FFF7FEFF 		bl	CyExitCriticalSection
 513:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 15


 514:Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 282              		.loc 1 514 0
 283 0024 3B68     		ldr	r3, [r7]
 515:Generated_Source\PSoC4/CyLib.c **** }
 284              		.loc 1 515 0
 285 0026 1800     		movs	r0, r3
 286 0028 BD46     		mov	sp, r7
 287 002a 03B0     		add	sp, sp, #12
 288              		@ sp needed
 289 002c 90BD     		pop	{r4, r7, pc}
 290              	.L13:
 291 002e C046     		.align	2
 292              	.L12:
 293 0030 00010B40 		.word	1074462976
 294              		.cfi_endproc
 295              	.LFE3:
 296              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 297              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 298              		.align	2
 299              		.global	CySysClkWriteSysclkDiv
 300              		.code	16
 301              		.thumb_func
 302              		.type	CySysClkWriteSysclkDiv, %function
 303              	CySysClkWriteSysclkDiv:
 304              	.LFB4:
 516:Generated_Source\PSoC4/CyLib.c **** 
 517:Generated_Source\PSoC4/CyLib.c **** 
 518:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 519:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 520:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 521:Generated_Source\PSoC4/CyLib.c **** *
 522:Generated_Source\PSoC4/CyLib.c **** * Summary:
 523:Generated_Source\PSoC4/CyLib.c **** *  Selects the prescaler divide amount for SYSCLK from HFCLK.
 524:Generated_Source\PSoC4/CyLib.c **** *
 525:Generated_Source\PSoC4/CyLib.c **** * Parameters:
 526:Generated_Source\PSoC4/CyLib.c **** *  divider: Power of 2 prescaler selection
 527:Generated_Source\PSoC4/CyLib.c **** *
 528:Generated_Source\PSoC4/CyLib.c **** *   Define                        Description
 529:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 530:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 531:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 532:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 533:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 534:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 535:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 536:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 537:Generated_Source\PSoC4/CyLib.c **** *
 538:Generated_Source\PSoC4/CyLib.c **** * Return:
 539:Generated_Source\PSoC4/CyLib.c **** *  None
 540:Generated_Source\PSoC4/CyLib.c **** *
 541:Generated_Source\PSoC4/CyLib.c **** * Side Effects:
 542:Generated_Source\PSoC4/CyLib.c **** *  4000 Family:
 543:Generated_Source\PSoC4/CyLib.c **** *  The SYS_CLK has the speed of 16 MHz, so dividers HF_CLK and SYS_CLK
 544:Generated_Source\PSoC4/CyLib.c **** *  dividers should be selected in a way, not to exceed 16 MHz for SYS_CLK.
 545:Generated_Source\PSoC4/CyLib.c **** *
 546:Generated_Source\PSoC4/CyLib.c **** *  If the SYSCLK clock frequency increases during the device operation, call
 547:Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 16


 548:Generated_Source\PSoC4/CyLib.c **** *  of clock cycles the cache will wait before sampling data comes back from
 549:Generated_Source\PSoC4/CyLib.c **** *  Flash. If the SYSCLK clock frequency decreases, you can call
 550:Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() to improve the CPU performance. See
 551:Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() description for more information.
 552:Generated_Source\PSoC4/CyLib.c **** *
 553:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 554:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 555:Generated_Source\PSoC4/CyLib.c **** {
 305              		.loc 1 555 0
 306              		.cfi_startproc
 307              		@ args = 0, pretend = 0, frame = 16
 308              		@ frame_needed = 1, uses_anonymous_args = 0
 309 0000 90B5     		push	{r4, r7, lr}
 310              		.cfi_def_cfa_offset 12
 311              		.cfi_offset 4, -12
 312              		.cfi_offset 7, -8
 313              		.cfi_offset 14, -4
 314 0002 85B0     		sub	sp, sp, #20
 315              		.cfi_def_cfa_offset 32
 316 0004 00AF     		add	r7, sp, #0
 317              		.cfi_def_cfa_register 7
 318 0006 7860     		str	r0, [r7, #4]
 556:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 557:Generated_Source\PSoC4/CyLib.c **** 
 558:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 319              		.loc 1 558 0
 320 0008 0F23     		movs	r3, #15
 321 000a FC18     		adds	r4, r7, r3
 322 000c FFF7FEFF 		bl	CyEnterCriticalSection
 323 0010 0300     		movs	r3, r0
 324 0012 2370     		strb	r3, [r4]
 559:Generated_Source\PSoC4/CyLib.c **** 
 560:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 325              		.loc 1 560 0
 326 0014 0A4B     		ldr	r3, .L15
 327 0016 7A68     		ldr	r2, [r7, #4]
 328 0018 D104     		lsls	r1, r2, #19
 329 001a E022     		movs	r2, #224
 330 001c 9203     		lsls	r2, r2, #14
 331 001e 1140     		ands	r1, r2
 561:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 562:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 332              		.loc 1 562 0
 333 0020 074A     		ldr	r2, .L15
 334 0022 1268     		ldr	r2, [r2]
 335 0024 0748     		ldr	r0, .L15+4
 336 0026 0240     		ands	r2, r0
 561:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 337              		.loc 1 561 0
 338 0028 0A43     		orrs	r2, r1
 560:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 339              		.loc 1 560 0
 340 002a 1A60     		str	r2, [r3]
 563:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 564:Generated_Source\PSoC4/CyLib.c **** 
 565:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 341              		.loc 1 565 0
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 17


 342 002c 0F23     		movs	r3, #15
 343 002e FB18     		adds	r3, r7, r3
 344 0030 1B78     		ldrb	r3, [r3]
 345 0032 1800     		movs	r0, r3
 346 0034 FFF7FEFF 		bl	CyExitCriticalSection
 566:Generated_Source\PSoC4/CyLib.c **** }
 347              		.loc 1 566 0
 348 0038 C046     		nop
 349 003a BD46     		mov	sp, r7
 350 003c 05B0     		add	sp, sp, #20
 351              		@ sp needed
 352 003e 90BD     		pop	{r4, r7, pc}
 353              	.L16:
 354              		.align	2
 355              	.L15:
 356 0040 00010B40 		.word	1074462976
 357 0044 FFFFC7FF 		.word	-3670017
 358              		.cfi_endproc
 359              	.LFE4:
 360              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 361              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 362              		.align	2
 363              		.global	CySysClkWriteImoFreq
 364              		.code	16
 365              		.thumb_func
 366              		.type	CySysClkWriteImoFreq, %function
 367              	CySysClkWriteImoFreq:
 368              	.LFB5:
 567:Generated_Source\PSoC4/CyLib.c **** 
 568:Generated_Source\PSoC4/CyLib.c **** 
 569:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 570:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 571:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 572:Generated_Source\PSoC4/CyLib.c **** *
 573:Generated_Source\PSoC4/CyLib.c **** * Summary:
 574:Generated_Source\PSoC4/CyLib.c **** *  Sets the frequency of the IMO.
 575:Generated_Source\PSoC4/CyLib.c **** *
 576:Generated_Source\PSoC4/CyLib.c **** *  If IMO is currently driving the HFCLK, and if the HFCLK frequency decreases,
 577:Generated_Source\PSoC4/CyLib.c **** *  you can call CySysFlashSetWaitCycles () to improve CPU performance. See
 578:Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles () for more information.
 579:Generated_Source\PSoC4/CyLib.c **** *
 580:Generated_Source\PSoC4/CyLib.c **** *  For PSoC 4000 family of devices, maximum HFCLK frequency is 16 MHz. If IMO is
 581:Generated_Source\PSoC4/CyLib.c **** *  configured to frequencies above 16 MHz, ensure to set the appropriate HFCLK
 582:Generated_Source\PSoC4/CyLib.c **** *  predivider value first.
 583:Generated_Source\PSoC4/CyLib.c **** *
 584:Generated_Source\PSoC4/CyLib.c **** *  For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 585:Generated_Source\PSoC4/CyLib.c **** *  then this API will disable the lock, write the new IMO frequency and then
 586:Generated_Source\PSoC4/CyLib.c **** *  re-enable the lock.
 587:Generated_Source\PSoC4/CyLib.c **** *
 588:Generated_Source\PSoC4/CyLib.c **** *  For PSoC 4200L device families, this function enables the USB lock when 24 or
 589:Generated_Source\PSoC4/CyLib.c **** *  48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 590:Generated_Source\PSoC4/CyLib.c **** *  Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 591:Generated_Source\PSoC4/CyLib.c **** *  lock is disabled during IMO frequency change.
 592:Generated_Source\PSoC4/CyLib.c **** *
 593:Generated_Source\PSoC4/CyLib.c **** *  Note: The CPU is halted if new frequency is invalid and project is compiled
 594:Generated_Source\PSoC4/CyLib.c **** *  in debug mode.
 595:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 18


 596:Generated_Source\PSoC4/CyLib.c **** * Parameters:
 597:Generated_Source\PSoC4/CyLib.c **** *  All PSoC 4 families excluding PSoC 4000: Valid range [3-48] with step size
 598:Generated_Source\PSoC4/CyLib.c **** *  equals 1.
 599:Generated_Source\PSoC4/CyLib.c **** *
 600:Generated_Source\PSoC4/CyLib.c **** *  PSoC 4000: Valid range [24-48] with step size equals 4.
 601:Generated_Source\PSoC4/CyLib.c **** *
 602:Generated_Source\PSoC4/CyLib.c **** *  Note: The CPU is halted if new frequency is invalid and project is
 603:Generated_Source\PSoC4/CyLib.c **** *  compiled in debug mode.
 604:Generated_Source\PSoC4/CyLib.c **** *
 605:Generated_Source\PSoC4/CyLib.c **** * Return:
 606:Generated_Source\PSoC4/CyLib.c **** *  None
 607:Generated_Source\PSoC4/CyLib.c **** *
 608:Generated_Source\PSoC4/CyLib.c **** * Side Effects:
 609:Generated_Source\PSoC4/CyLib.c **** *  If the SYSCLK clock frequency increases during the device operation, call
 610:Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 611:Generated_Source\PSoC4/CyLib.c **** *  of clock cycles the cache will wait before sampling data comes back from
 612:Generated_Source\PSoC4/CyLib.c **** *  Flash. If the SYSCLK clock frequency decreases, you can call
 613:Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() to improve the CPU performance. See
 614:Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() description for more information.
 615:Generated_Source\PSoC4/CyLib.c **** *
 616:Generated_Source\PSoC4/CyLib.c **** *  PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 617:Generated_Source\PSoC4/CyLib.c **** *  and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 618:Generated_Source\PSoC4/CyLib.c **** *  the System clock.
 619:Generated_Source\PSoC4/CyLib.c **** *
 620:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 621:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 622:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 623:Generated_Source\PSoC4/CyLib.c ****     {
 369              		.loc 1 623 0
 370              		.cfi_startproc
 371              		@ args = 0, pretend = 0, frame = 16
 372              		@ frame_needed = 1, uses_anonymous_args = 0
 373 0000 90B5     		push	{r4, r7, lr}
 374              		.cfi_def_cfa_offset 12
 375              		.cfi_offset 4, -12
 376              		.cfi_offset 7, -8
 377              		.cfi_offset 14, -4
 378 0002 85B0     		sub	sp, sp, #20
 379              		.cfi_def_cfa_offset 32
 380 0004 00AF     		add	r7, sp, #0
 381              		.cfi_def_cfa_register 7
 382 0006 7860     		str	r0, [r7, #4]
 624:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 625:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 626:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 627:Generated_Source\PSoC4/CyLib.c ****         #else
 628:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 629:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 630:Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 631:Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 632:Generated_Source\PSoC4/CyLib.c ****             uint8  imoTrim1Value;
 633:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 634:Generated_Source\PSoC4/CyLib.c **** 
 635:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 636:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 637:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 638:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 19


 639:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 640:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 641:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 642:Generated_Source\PSoC4/CyLib.c **** 
 643:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 644:Generated_Source\PSoC4/CyLib.c **** 
 645:Generated_Source\PSoC4/CyLib.c **** 
 646:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 383              		.loc 1 646 0
 384 0008 0C23     		movs	r3, #12
 385 000a FC18     		adds	r4, r7, r3
 386 000c FFF7FEFF 		bl	CyEnterCriticalSection
 387 0010 0300     		movs	r3, r0
 388 0012 2370     		strb	r3, [r4]
 647:Generated_Source\PSoC4/CyLib.c **** 
 648:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 649:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 650:Generated_Source\PSoC4/CyLib.c ****             {
 651:Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 652:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 653:Generated_Source\PSoC4/CyLib.c ****             }
 654:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 655:Generated_Source\PSoC4/CyLib.c **** 
 656:Generated_Source\PSoC4/CyLib.c **** 
 657:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 658:Generated_Source\PSoC4/CyLib.c **** 
 659:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 660:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 661:Generated_Source\PSoC4/CyLib.c ****                 {
 662:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 663:Generated_Source\PSoC4/CyLib.c **** 
 664:Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 665:Generated_Source\PSoC4/CyLib.c ****                 {
 666:Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 667:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 668:Generated_Source\PSoC4/CyLib.c ****                 }
 669:Generated_Source\PSoC4/CyLib.c **** 
 670:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 671:Generated_Source\PSoC4/CyLib.c ****                 }
 672:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 673:Generated_Source\PSoC4/CyLib.c **** 
 674:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 675:Generated_Source\PSoC4/CyLib.c **** 
 676:Generated_Source\PSoC4/CyLib.c **** 
 677:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 678:Generated_Source\PSoC4/CyLib.c **** 
 679:Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 680:Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 681:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 682:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 683:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 684:Generated_Source\PSoC4/CyLib.c **** 
 685:Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 686:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 687:Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 688:Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 689:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 20


 690:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 691:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 692:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 693:Generated_Source\PSoC4/CyLib.c **** 
 694:Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 695:Generated_Source\PSoC4/CyLib.c **** 
 696:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 389              		.loc 1 696 0
 390 0014 7B68     		ldr	r3, [r7, #4]
 391 0016 022B     		cmp	r3, #2
 392 0018 00D8     		bhi	.LCB238
 393 001a B3E0     		b	.L18	@long jump
 394              	.LCB238:
 395              		.loc 1 696 0 is_stmt 0 discriminator 1
 396 001c 7B68     		ldr	r3, [r7, #4]
 397 001e 302B     		cmp	r3, #48
 398 0020 00D9     		bls	.LCB241
 399 0022 AFE0     		b	.L18	@long jump
 400              	.LCB241:
 697:Generated_Source\PSoC4/CyLib.c ****         {
 698:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 401              		.loc 1 698 0 is_stmt 1
 402 0024 5E4B     		ldr	r3, .L29
 403 0026 1B78     		ldrb	r3, [r3]
 404 0028 DBB2     		uxtb	r3, r3
 405 002a 1A00     		movs	r2, r3
 406 002c 7B68     		ldr	r3, [r7, #4]
 407 002e 9A42     		cmp	r2, r3
 408 0030 0AD3     		bcc	.L19
 699:Generated_Source\PSoC4/CyLib.c ****             {
 700:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 409              		.loc 1 700 0
 410 0032 5C4A     		ldr	r2, .L29+4
 411 0034 0F23     		movs	r3, #15
 412 0036 FB18     		adds	r3, r7, r3
 413 0038 1278     		ldrb	r2, [r2]
 414 003a 1A70     		strb	r2, [r3]
 701:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 415              		.loc 1 701 0
 416 003c 5A4A     		ldr	r2, .L29+8
 417 003e 0E23     		movs	r3, #14
 418 0040 FB18     		adds	r3, r7, r3
 419 0042 1278     		ldrb	r2, [r2]
 420 0044 1A70     		strb	r2, [r3]
 421 0046 3FE0     		b	.L20
 422              	.L19:
 702:Generated_Source\PSoC4/CyLib.c ****             }
 703:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 423              		.loc 1 703 0
 424 0048 584B     		ldr	r3, .L29+12
 425 004a 1B78     		ldrb	r3, [r3]
 426 004c DBB2     		uxtb	r3, r3
 427 004e 1A00     		movs	r2, r3
 428 0050 7B68     		ldr	r3, [r7, #4]
 429 0052 9A42     		cmp	r2, r3
 430 0054 0AD3     		bcc	.L21
 704:Generated_Source\PSoC4/CyLib.c ****             {
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 21


 705:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 431              		.loc 1 705 0
 432 0056 564A     		ldr	r2, .L29+16
 433 0058 0F23     		movs	r3, #15
 434 005a FB18     		adds	r3, r7, r3
 435 005c 1278     		ldrb	r2, [r2]
 436 005e 1A70     		strb	r2, [r3]
 706:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 437              		.loc 1 706 0
 438 0060 544A     		ldr	r2, .L29+20
 439 0062 0E23     		movs	r3, #14
 440 0064 FB18     		adds	r3, r7, r3
 441 0066 1278     		ldrb	r2, [r2]
 442 0068 1A70     		strb	r2, [r3]
 443 006a 2DE0     		b	.L20
 444              	.L21:
 707:Generated_Source\PSoC4/CyLib.c ****             }
 708:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 445              		.loc 1 708 0
 446 006c 524B     		ldr	r3, .L29+24
 447 006e 1B78     		ldrb	r3, [r3]
 448 0070 DBB2     		uxtb	r3, r3
 449 0072 1A00     		movs	r2, r3
 450 0074 7B68     		ldr	r3, [r7, #4]
 451 0076 9A42     		cmp	r2, r3
 452 0078 0AD3     		bcc	.L22
 709:Generated_Source\PSoC4/CyLib.c ****             {
 710:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 453              		.loc 1 710 0
 454 007a 504A     		ldr	r2, .L29+28
 455 007c 0F23     		movs	r3, #15
 456 007e FB18     		adds	r3, r7, r3
 457 0080 1278     		ldrb	r2, [r2]
 458 0082 1A70     		strb	r2, [r3]
 711:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 459              		.loc 1 711 0
 460 0084 4E4A     		ldr	r2, .L29+32
 461 0086 0E23     		movs	r3, #14
 462 0088 FB18     		adds	r3, r7, r3
 463 008a 1278     		ldrb	r2, [r2]
 464 008c 1A70     		strb	r2, [r3]
 465 008e 1BE0     		b	.L20
 466              	.L22:
 712:Generated_Source\PSoC4/CyLib.c ****             }
 713:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 467              		.loc 1 713 0
 468 0090 4C4B     		ldr	r3, .L29+36
 469 0092 1B78     		ldrb	r3, [r3]
 470 0094 DBB2     		uxtb	r3, r3
 471 0096 1A00     		movs	r2, r3
 472 0098 7B68     		ldr	r3, [r7, #4]
 473 009a 9A42     		cmp	r2, r3
 474 009c 0AD3     		bcc	.L23
 714:Generated_Source\PSoC4/CyLib.c ****             {
 715:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 475              		.loc 1 715 0
 476 009e 4A4A     		ldr	r2, .L29+40
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 22


 477 00a0 0F23     		movs	r3, #15
 478 00a2 FB18     		adds	r3, r7, r3
 479 00a4 1278     		ldrb	r2, [r2]
 480 00a6 1A70     		strb	r2, [r3]
 716:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 481              		.loc 1 716 0
 482 00a8 484A     		ldr	r2, .L29+44
 483 00aa 0E23     		movs	r3, #14
 484 00ac FB18     		adds	r3, r7, r3
 485 00ae 1278     		ldrb	r2, [r2]
 486 00b0 1A70     		strb	r2, [r3]
 487 00b2 09E0     		b	.L20
 488              	.L23:
 717:Generated_Source\PSoC4/CyLib.c ****             }
 718:Generated_Source\PSoC4/CyLib.c ****             else
 719:Generated_Source\PSoC4/CyLib.c ****             {
 720:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 489              		.loc 1 720 0
 490 00b4 464A     		ldr	r2, .L29+48
 491 00b6 0F23     		movs	r3, #15
 492 00b8 FB18     		adds	r3, r7, r3
 493 00ba 1278     		ldrb	r2, [r2]
 494 00bc 1A70     		strb	r2, [r3]
 721:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 495              		.loc 1 721 0
 496 00be 454A     		ldr	r2, .L29+52
 497 00c0 0E23     		movs	r3, #14
 498 00c2 FB18     		adds	r3, r7, r3
 499 00c4 1278     		ldrb	r2, [r2]
 500 00c6 1A70     		strb	r2, [r3]
 501              	.L20:
 722:Generated_Source\PSoC4/CyLib.c ****             }
 723:Generated_Source\PSoC4/CyLib.c **** 
 724:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 725:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 502              		.loc 1 725 0
 503 00c8 7B68     		ldr	r3, [r7, #4]
 504 00ca DA1E     		subs	r2, r3, #3
 505 00cc 0B23     		movs	r3, #11
 506 00ce FB18     		adds	r3, r7, r3
 507 00d0 4149     		ldr	r1, .L29+56
 508 00d2 8A5C     		ldrb	r2, [r1, r2]
 509 00d4 1A70     		strb	r2, [r3]
 726:Generated_Source\PSoC4/CyLib.c **** 
 727:Generated_Source\PSoC4/CyLib.c **** 
 728:Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 729:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 730:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 731:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 732:Generated_Source\PSoC4/CyLib.c ****             *
 733:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 734:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 735:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 736:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 737:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 510              		.loc 1 737 0
 511 00d6 0B23     		movs	r3, #11
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 23


 512 00d8 FB18     		adds	r3, r7, r3
 513 00da 1B78     		ldrb	r3, [r3]
 514 00dc 2F2B     		cmp	r3, #47
 515 00de 0DD9     		bls	.L24
 516              		.loc 1 737 0 is_stmt 0 discriminator 1
 517 00e0 7B68     		ldr	r3, [r7, #4]
 518 00e2 2A2B     		cmp	r3, #42
 519 00e4 0AD9     		bls	.L24
 738:Generated_Source\PSoC4/CyLib.c ****             {
 739:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 740:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 520              		.loc 1 740 0 is_stmt 1
 521 00e6 3D4B     		ldr	r3, .L29+60
 522 00e8 1922     		movs	r2, #25
 523 00ea 1A60     		str	r2, [r3]
 741:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 742:Generated_Source\PSoC4/CyLib.c **** 
 743:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 524              		.loc 1 743 0
 525 00ec 0520     		movs	r0, #5
 526 00ee FFF7FEFF 		bl	CyDelayCycles
 744:Generated_Source\PSoC4/CyLib.c **** 
 745:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 527              		.loc 1 745 0
 528 00f2 0D23     		movs	r3, #13
 529 00f4 FB18     		adds	r3, r7, r3
 530 00f6 1922     		movs	r2, #25
 531 00f8 1A70     		strb	r2, [r3]
 532 00fa 07E0     		b	.L25
 533              	.L24:
 746:Generated_Source\PSoC4/CyLib.c ****             }
 747:Generated_Source\PSoC4/CyLib.c ****             else
 748:Generated_Source\PSoC4/CyLib.c ****             {
 749:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 534              		.loc 1 749 0
 535 00fc 374B     		ldr	r3, .L29+60
 536 00fe 1B68     		ldr	r3, [r3]
 537 0100 DAB2     		uxtb	r2, r3
 538 0102 0D23     		movs	r3, #13
 539 0104 FB18     		adds	r3, r7, r3
 540 0106 3F21     		movs	r1, #63
 541 0108 0A40     		ands	r2, r1
 542 010a 1A70     		strb	r2, [r3]
 543              	.L25:
 750:Generated_Source\PSoC4/CyLib.c ****             }
 751:Generated_Source\PSoC4/CyLib.c **** 
 752:Generated_Source\PSoC4/CyLib.c **** 
 753:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 754:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 755:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 756:Generated_Source\PSoC4/CyLib.c ****             *
 757:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 758:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 759:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 760:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 761:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 544              		.loc 1 761 0
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 24


 545 010c 0B23     		movs	r3, #11
 546 010e FA18     		adds	r2, r7, r3
 547 0110 0D23     		movs	r3, #13
 548 0112 FB18     		adds	r3, r7, r3
 549 0114 1278     		ldrb	r2, [r2]
 550 0116 1B78     		ldrb	r3, [r3]
 551 0118 9A42     		cmp	r2, r3
 552 011a 08D2     		bcs	.L26
 762:Generated_Source\PSoC4/CyLib.c ****             {
 763:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 764:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 553              		.loc 1 764 0
 554 011c 2F4B     		ldr	r3, .L29+60
 555 011e 7A68     		ldr	r2, [r7, #4]
 556 0120 033A     		subs	r2, r2, #3
 557 0122 2D49     		ldr	r1, .L29+56
 558 0124 8A5C     		ldrb	r2, [r1, r2]
 559 0126 1A60     		str	r2, [r3]
 765:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 560              		.loc 1 765 0
 561 0128 0520     		movs	r0, #5
 562 012a FFF7FEFF 		bl	CyDelayCycles
 563              	.L26:
 766:Generated_Source\PSoC4/CyLib.c ****             }
 767:Generated_Source\PSoC4/CyLib.c **** 
 768:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 769:Generated_Source\PSoC4/CyLib.c **** 
 770:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 771:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 772:Generated_Source\PSoC4/CyLib.c ****                 {
 773:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 774:Generated_Source\PSoC4/CyLib.c ****                 }
 775:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 776:Generated_Source\PSoC4/CyLib.c ****                 {
 777:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 778:Generated_Source\PSoC4/CyLib.c ****                 }
 779:Generated_Source\PSoC4/CyLib.c ****                 else
 780:Generated_Source\PSoC4/CyLib.c ****                 {
 781:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE
 782:Generated_Source\PSoC4/CyLib.c ****                 }
 783:Generated_Source\PSoC4/CyLib.c ****             #else
 784:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFF
 564              		.loc 1 784 0
 565 012e 7B68     		ldr	r3, [r7, #4]
 566 0130 284A     		ldr	r2, .L29+52
 567 0132 9A18     		adds	r2, r3, r2
 568 0134 0A23     		movs	r3, #10
 569 0136 FB18     		adds	r3, r7, r3
 570 0138 1278     		ldrb	r2, [r2]
 571 013a 1A70     		strb	r2, [r3]
 785:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 786:Generated_Source\PSoC4/CyLib.c **** 
 787:Generated_Source\PSoC4/CyLib.c **** 
 788:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 572              		.loc 1 788 0
 573 013c 284B     		ldr	r3, .L29+64
 574 013e 0A22     		movs	r2, #10
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 25


 575 0140 BA18     		adds	r2, r7, r2
 576 0142 1278     		ldrb	r2, [r2]
 577 0144 1A60     		str	r2, [r3]
 789:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 578              		.loc 1 789 0
 579 0146 274B     		ldr	r3, .L29+68
 580 0148 0F22     		movs	r2, #15
 581 014a BA18     		adds	r2, r7, r2
 582 014c 1278     		ldrb	r2, [r2]
 583 014e 1A60     		str	r2, [r3]
 790:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 584              		.loc 1 790 0
 585 0150 254B     		ldr	r3, .L29+72
 586 0152 0E22     		movs	r2, #14
 587 0154 BA18     		adds	r2, r7, r2
 588 0156 1278     		ldrb	r2, [r2]
 589 0158 1A60     		str	r2, [r3]
 791:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 590              		.loc 1 791 0
 591 015a 0520     		movs	r0, #5
 592 015c FFF7FEFF 		bl	CyDelayUs
 792:Generated_Source\PSoC4/CyLib.c **** 
 793:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 593              		.loc 1 793 0
 594 0160 0B23     		movs	r3, #11
 595 0162 FA18     		adds	r2, r7, r3
 596 0164 0D23     		movs	r3, #13
 597 0166 FB18     		adds	r3, r7, r3
 598 0168 1278     		ldrb	r2, [r2]
 599 016a 1B78     		ldrb	r3, [r3]
 600 016c 9A42     		cmp	r2, r3
 601 016e 0CD9     		bls	.L28
 794:Generated_Source\PSoC4/CyLib.c ****             {
 795:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 796:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 602              		.loc 1 796 0
 603 0170 1A4B     		ldr	r3, .L29+60
 604 0172 7A68     		ldr	r2, [r7, #4]
 605 0174 033A     		subs	r2, r2, #3
 606 0176 1849     		ldr	r1, .L29+56
 607 0178 8A5C     		ldrb	r2, [r1, r2]
 608 017a 1A60     		str	r2, [r3]
 797:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 609              		.loc 1 797 0
 610 017c 0520     		movs	r0, #5
 611 017e FFF7FEFF 		bl	CyDelayCycles
 793:Generated_Source\PSoC4/CyLib.c ****             {
 612              		.loc 1 793 0
 613 0182 02E0     		b	.L28
 614              	.L18:
 798:Generated_Source\PSoC4/CyLib.c ****             }
 799:Generated_Source\PSoC4/CyLib.c ****         }
 800:Generated_Source\PSoC4/CyLib.c ****         else
 801:Generated_Source\PSoC4/CyLib.c ****         {
 802:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 803:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 615              		.loc 1 803 0 discriminator 1
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 26


 616 0184 0020     		movs	r0, #0
 617 0186 FFF7FEFF 		bl	CyHalt
 618              	.L28:
 804:Generated_Source\PSoC4/CyLib.c ****         }
 805:Generated_Source\PSoC4/CyLib.c **** 
 806:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 807:Generated_Source\PSoC4/CyLib.c **** 
 808:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 809:Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 810:Generated_Source\PSoC4/CyLib.c ****             {
 811:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 812:Generated_Source\PSoC4/CyLib.c ****             }
 813:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 814:Generated_Source\PSoC4/CyLib.c **** 
 815:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 816:Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 817:Generated_Source\PSoC4/CyLib.c ****             {
 818:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 819:Generated_Source\PSoC4/CyLib.c ****             }
 820:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 821:Generated_Source\PSoC4/CyLib.c **** 
 822:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 619              		.loc 1 822 0
 620 018a 0C23     		movs	r3, #12
 621 018c FB18     		adds	r3, r7, r3
 622 018e 1B78     		ldrb	r3, [r3]
 623 0190 1800     		movs	r0, r3
 624 0192 FFF7FEFF 		bl	CyExitCriticalSection
 823:Generated_Source\PSoC4/CyLib.c ****     }
 625              		.loc 1 823 0
 626 0196 C046     		nop
 627 0198 BD46     		mov	sp, r7
 628 019a 05B0     		add	sp, sp, #20
 629              		@ sp needed
 630 019c 90BD     		pop	{r4, r7, pc}
 631              	.L30:
 632 019e C046     		.align	2
 633              	.L29:
 634 01a0 C0F1FF0F 		.word	268431808
 635 01a4 C1F1FF0F 		.word	268431809
 636 01a8 C2F1FF0F 		.word	268431810
 637 01ac C3F1FF0F 		.word	268431811
 638 01b0 C4F1FF0F 		.word	268431812
 639 01b4 C5F1FF0F 		.word	268431813
 640 01b8 C6F1FF0F 		.word	268431814
 641 01bc C7F1FF0F 		.word	268431815
 642 01c0 C8F1FF0F 		.word	268431816
 643 01c4 C9F1FF0F 		.word	268431817
 644 01c8 CAF1FF0F 		.word	268431818
 645 01cc CBF1FF0F 		.word	268431819
 646 01d0 CCF1FF0F 		.word	268431820
 647 01d4 CDF1FF0F 		.word	268431821
 648 01d8 00000000 		.word	cyImoFreqMhz2Reg
 649 01dc 2CFF0B40 		.word	1074528044
 650 01e0 28FF0B40 		.word	1074528040
 651 01e4 1CFF0B40 		.word	1074528028
 652 01e8 20FF0B40 		.word	1074528032
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 27


 653              		.cfi_endproc
 654              	.LFE5:
 655              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 656              		.section	.text.CySysLvdEnable,"ax",%progbits
 657              		.align	2
 658              		.global	CySysLvdEnable
 659              		.code	16
 660              		.thumb_func
 661              		.type	CySysLvdEnable, %function
 662              	CySysLvdEnable:
 663              	.LFB6:
 824:Generated_Source\PSoC4/CyLib.c **** 
 825:Generated_Source\PSoC4/CyLib.c **** #else
 826:Generated_Source\PSoC4/CyLib.c **** 
 827:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 828:Generated_Source\PSoC4/CyLib.c ****     {
 829:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 830:Generated_Source\PSoC4/CyLib.c **** 
 831:Generated_Source\PSoC4/CyLib.c ****         if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 832:Generated_Source\PSoC4/CyLib.c ****         {
 833:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 834:Generated_Source\PSoC4/CyLib.c **** 
 835:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
 836:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
 837:Generated_Source\PSoC4/CyLib.c **** 
 838:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
 839:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (CY_SYS_CLK_IMO_TRIM1_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM1_
 840:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM1_
 841:Generated_Source\PSoC4/CyLib.c **** 
 842:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
 843:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
 844:Generated_Source\PSoC4/CyLib.c **** 
 845:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
 846:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
 847:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 848:Generated_Source\PSoC4/CyLib.c **** 
 849:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_US);
 850:Generated_Source\PSoC4/CyLib.c **** 
 851:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 852:Generated_Source\PSoC4/CyLib.c ****             {
 853:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 854:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 855:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 856:Generated_Source\PSoC4/CyLib.c **** 
 857:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_US);
 858:Generated_Source\PSoC4/CyLib.c **** 
 859:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
 860:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 861:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 862:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 863:Generated_Source\PSoC4/CyLib.c ****             }
 864:Generated_Source\PSoC4/CyLib.c **** 
 865:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 866:Generated_Source\PSoC4/CyLib.c ****         }
 867:Generated_Source\PSoC4/CyLib.c ****         else
 868:Generated_Source\PSoC4/CyLib.c ****         {
 869:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 28


 870:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 871:Generated_Source\PSoC4/CyLib.c ****         }
 872:Generated_Source\PSoC4/CyLib.c ****     }
 873:Generated_Source\PSoC4/CyLib.c **** 
 874:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
 875:Generated_Source\PSoC4/CyLib.c **** 
 876:Generated_Source\PSoC4/CyLib.c **** 
 877:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
 878:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 879:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
 880:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 881:Generated_Source\PSoC4/CyLib.c ****     *
 882:Generated_Source\PSoC4/CyLib.c ****     * Summary:
 883:Generated_Source\PSoC4/CyLib.c ****     *  Selects the pre-scaler divider value for HFCLK from IMO.
 884:Generated_Source\PSoC4/CyLib.c ****     *
 885:Generated_Source\PSoC4/CyLib.c ****     *  The HFCLK predivider allows the device to divide the HFCLK selection mux
 886:Generated_Source\PSoC4/CyLib.c ****     *  input before use as HFCLK. The predivider is capable of dividing the HFCLK by
 887:Generated_Source\PSoC4/CyLib.c ****     *  powers of 2 between 1 and 8.
 888:Generated_Source\PSoC4/CyLib.c ****     *
 889:Generated_Source\PSoC4/CyLib.c ****     *  Note HFCLK's frequency cannot exceed 16 MHz. This API is applicable for
 890:Generated_Source\PSoC4/CyLib.c ****     *  PSoC 4000 family of devices only.
 891:Generated_Source\PSoC4/CyLib.c ****     *
 892:Generated_Source\PSoC4/CyLib.c ****     *
 893:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 894:Generated_Source\PSoC4/CyLib.c ****     *  divider: HF clock divider value
 895:Generated_Source\PSoC4/CyLib.c ****     *   Define                        Description
 896:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
 897:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
 898:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
 899:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
 900:Generated_Source\PSoC4/CyLib.c ****     *
 901:Generated_Source\PSoC4/CyLib.c ****     * Return:
 902:Generated_Source\PSoC4/CyLib.c ****     *  None
 903:Generated_Source\PSoC4/CyLib.c ****     *
 904:Generated_Source\PSoC4/CyLib.c ****     * Side Effects:
 905:Generated_Source\PSoC4/CyLib.c ****     *  If the SYSCLK clock frequency increases during the device operation, call
 906:Generated_Source\PSoC4/CyLib.c ****     *  CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 907:Generated_Source\PSoC4/CyLib.c ****     *  of clock cycles the cache will wait before sampling data comes back from
 908:Generated_Source\PSoC4/CyLib.c ****     *  Flash. If the SYSCLK clock frequency decreases, you can call
 909:Generated_Source\PSoC4/CyLib.c ****     *  CySysFlashSetWaitCycles() to improve the CPU performance. See
 910:Generated_Source\PSoC4/CyLib.c ****     *  CySysFlashSetWaitCycles() description for more information.
 911:Generated_Source\PSoC4/CyLib.c ****     *
 912:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 913:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
 914:Generated_Source\PSoC4/CyLib.c ****     {
 915:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 916:Generated_Source\PSoC4/CyLib.c **** 
 917:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 918:Generated_Source\PSoC4/CyLib.c **** 
 919:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
 920:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 921:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
 922:Generated_Source\PSoC4/CyLib.c **** 
 923:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 924:Generated_Source\PSoC4/CyLib.c ****     }
 925:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
 926:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 29


 927:Generated_Source\PSoC4/CyLib.c **** 
 928:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
 929:Generated_Source\PSoC4/CyLib.c **** 
 930:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 931:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
 932:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 933:Generated_Source\PSoC4/CyLib.c ****     *
 934:Generated_Source\PSoC4/CyLib.c ****     * Summary:
 935:Generated_Source\PSoC4/CyLib.c ****     *  Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
 936:Generated_Source\PSoC4/CyLib.c ****     *  for the ECO startup time.
 937:Generated_Source\PSoC4/CyLib.c ****     *
 938:Generated_Source\PSoC4/CyLib.c ****     *  The timeout interval is measured based on the system frequency defined by
 939:Generated_Source\PSoC4/CyLib.c ****     *  PSoC Creator at build time. If System clock frequency is changed in
 940:Generated_Source\PSoC4/CyLib.c ****     *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
 941:Generated_Source\PSoC4/CyLib.c ****     *
 942:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 943:Generated_Source\PSoC4/CyLib.c ****     *  timeoutUs: Timeout in microseconds. If zero is specified, the function
 944:Generated_Source\PSoC4/CyLib.c ****     *             starts the crystal and returns CYRET_SUCCESS. If non-zero
 945:Generated_Source\PSoC4/CyLib.c ****     *             value is passed, the CYRET_SUCCESS is returned once crystal
 946:Generated_Source\PSoC4/CyLib.c ****     *             is oscillating and amplitude reached 60% and it does not mean
 947:Generated_Source\PSoC4/CyLib.c ****     *             24 MHz crystal is within 50 ppm. If it is not oscillating or
 948:Generated_Source\PSoC4/CyLib.c ****     *             amplitude didn't reach 60% after specified amount of time, the
 949:Generated_Source\PSoC4/CyLib.c ****     *             CYRET_TIMEOUT is returned.
 950:Generated_Source\PSoC4/CyLib.c ****     *
 951:Generated_Source\PSoC4/CyLib.c ****     * Return:
 952:Generated_Source\PSoC4/CyLib.c ****     *   CYRET_SUCCESS - Completed successfully. The ECO is oscillating and amplitude
 953:Generated_Source\PSoC4/CyLib.c ****     *                   reached 60% and it does not mean 24 MHz crystal is within
 954:Generated_Source\PSoC4/CyLib.c ****     *                   50 ppm.
 955:Generated_Source\PSoC4/CyLib.c ****     *   CYRET_TIMEOUT - Timeout occurred.
 956:Generated_Source\PSoC4/CyLib.c ****     *
 957:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 958:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
 959:Generated_Source\PSoC4/CyLib.c ****     {
 960:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
 961:Generated_Source\PSoC4/CyLib.c **** 
 962:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
 963:Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
 964:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
 965:Generated_Source\PSoC4/CyLib.c **** 
 966:Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
 967:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
 968:Generated_Source\PSoC4/CyLib.c **** 
 969:Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
 970:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
 971:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_WCO_SRSSV2 */
 972:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
 973:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
 974:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
 975:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
 976:Generated_Source\PSoC4/CyLib.c **** 
 977:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
 978:Generated_Source\PSoC4/CyLib.c ****         {
 979:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
 980:Generated_Source\PSoC4/CyLib.c **** 
 981:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
 982:Generated_Source\PSoC4/CyLib.c ****             {
 983:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 30


 984:Generated_Source\PSoC4/CyLib.c **** 
 985:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
 986:Generated_Source\PSoC4/CyLib.c ****                 {
 987:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
 988:Generated_Source\PSoC4/CyLib.c ****                     break;
 989:Generated_Source\PSoC4/CyLib.c ****                 }
 990:Generated_Source\PSoC4/CyLib.c ****             }
 991:Generated_Source\PSoC4/CyLib.c **** 
 992:Generated_Source\PSoC4/CyLib.c ****         }
 993:Generated_Source\PSoC4/CyLib.c **** 
 994:Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
 995:Generated_Source\PSoC4/CyLib.c ****     }
 996:Generated_Source\PSoC4/CyLib.c **** 
 997:Generated_Source\PSoC4/CyLib.c **** 
 998:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 999:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1000:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1001:Generated_Source\PSoC4/CyLib.c ****     *
1002:Generated_Source\PSoC4/CyLib.c ****     * Summary:
1003:Generated_Source\PSoC4/CyLib.c ****     *  Stops the megahertz crystal.
1004:Generated_Source\PSoC4/CyLib.c ****     *
1005:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1006:Generated_Source\PSoC4/CyLib.c ****     *  None
1007:Generated_Source\PSoC4/CyLib.c ****     *
1008:Generated_Source\PSoC4/CyLib.c ****     * Return:
1009:Generated_Source\PSoC4/CyLib.c ****     *  None
1010:Generated_Source\PSoC4/CyLib.c ****     *
1011:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1012:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1013:Generated_Source\PSoC4/CyLib.c ****     {
1014:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1015:Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1016:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1017:Generated_Source\PSoC4/CyLib.c **** 
1018:Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1019:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1020:Generated_Source\PSoC4/CyLib.c ****         #else
1021:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1022:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1023:Generated_Source\PSoC4/CyLib.c ****     }
1024:Generated_Source\PSoC4/CyLib.c **** 
1025:Generated_Source\PSoC4/CyLib.c **** 
1026:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1027:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1028:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1029:Generated_Source\PSoC4/CyLib.c ****     *
1030:Generated_Source\PSoC4/CyLib.c ****     * Summary:
1031:Generated_Source\PSoC4/CyLib.c ****     *  Reads the status bit for the megahertz crystal.
1032:Generated_Source\PSoC4/CyLib.c ****     *
1033:Generated_Source\PSoC4/CyLib.c ****     *  For PSoC 4100 BLE/PSoC 4200 BLE devices, the status bit is the XO_AMP_DETECT
1034:Generated_Source\PSoC4/CyLib.c ****     *  bit in FSM register.
1035:Generated_Source\PSoC4/CyLib.c ****     *
1036:Generated_Source\PSoC4/CyLib.c ****     *  For PSoC 4200L devices, the error status bit is the WATCHDOG_ERROR bit in
1037:Generated_Source\PSoC4/CyLib.c ****     *  ECO_STATUS register.
1038:Generated_Source\PSoC4/CyLib.c ****     *
1039:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1040:Generated_Source\PSoC4/CyLib.c ****     *  None
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 31


1041:Generated_Source\PSoC4/CyLib.c ****     *
1042:Generated_Source\PSoC4/CyLib.c ****     * Return:
1043:Generated_Source\PSoC4/CyLib.c ****     *  PSoC 4100 BLE/PSoC 4200 BLE:
1044:Generated_Source\PSoC4/CyLib.c ****     *  Non-zero indicates that ECO output reached 50 ppm and is oscillating in valid
1045:Generated_Source\PSoC4/CyLib.c ****     *  range.
1046:Generated_Source\PSoC4/CyLib.c ****     *
1047:Generated_Source\PSoC4/CyLib.c ****     *  PSoC 4200L:
1048:Generated_Source\PSoC4/CyLib.c ****     *  Non-zero indicates that ECO is running.
1049:Generated_Source\PSoC4/CyLib.c ****     *
1050:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1051:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1052:Generated_Source\PSoC4/CyLib.c ****     {
1053:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1054:Generated_Source\PSoC4/CyLib.c **** 
1055:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1056:Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
1057:Generated_Source\PSoC4/CyLib.c ****         #else
1058:Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1059:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1060:Generated_Source\PSoC4/CyLib.c **** 
1061:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1062:Generated_Source\PSoC4/CyLib.c ****     }
1063:Generated_Source\PSoC4/CyLib.c **** 
1064:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS)
1065:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1066:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1067:Generated_Source\PSoC4/CyLib.c ****         ********************************************************************************
1068:Generated_Source\PSoC4/CyLib.c ****         *
1069:Generated_Source\PSoC4/CyLib.c ****         * Summary:
1070:Generated_Source\PSoC4/CyLib.c ****         *  Selects value for the ECO divider.
1071:Generated_Source\PSoC4/CyLib.c ****         *
1072:Generated_Source\PSoC4/CyLib.c ****         *  The ECO must not be the HFCLK clock source when this function is called.
1073:Generated_Source\PSoC4/CyLib.c ****         *  The HFCLK source can be changed to the other clock source by call to the
1074:Generated_Source\PSoC4/CyLib.c ****         *  CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1075:Generated_Source\PSoC4/CyLib.c ****         *  function will not have any effect if compiler in release mode, and halt the
1076:Generated_Source\PSoC4/CyLib.c ****         *  CPU when compiler in debug mode.
1077:Generated_Source\PSoC4/CyLib.c ****         *
1078:Generated_Source\PSoC4/CyLib.c ****         * Parameters:
1079:Generated_Source\PSoC4/CyLib.c ****         *  divider: Power of 2 divider selection.
1080:Generated_Source\PSoC4/CyLib.c ****         *
1081:Generated_Source\PSoC4/CyLib.c ****         *   Define                        Description
1082:Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_DIV1             HFCLK = ECO / 1
1083:Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_DIV2             HFCLK = ECO / 2
1084:Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_DIV4             HFCLK = ECO / 4
1085:Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_DIV8             HFCLK = ECO / 8
1086:Generated_Source\PSoC4/CyLib.c ****         *
1087:Generated_Source\PSoC4/CyLib.c ****         * Return:
1088:Generated_Source\PSoC4/CyLib.c ****         *  None
1089:Generated_Source\PSoC4/CyLib.c ****         *
1090:Generated_Source\PSoC4/CyLib.c ****         * Side Effects:
1091:Generated_Source\PSoC4/CyLib.c ****         *  If the SYSCLK clock frequency increases during the device operation, call
1092:Generated_Source\PSoC4/CyLib.c ****         *  CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1093:Generated_Source\PSoC4/CyLib.c ****         *  of clock cycles the cache will wait before sampling data comes back from
1094:Generated_Source\PSoC4/CyLib.c ****         *  Flash. If the SYSCLK clock frequency decreases, you can call
1095:Generated_Source\PSoC4/CyLib.c ****         *  CySysFlashSetWaitCycles() to improve the CPU performance. See
1096:Generated_Source\PSoC4/CyLib.c ****         *  CySysFlashSetWaitCycles() description for more information.
1097:Generated_Source\PSoC4/CyLib.c ****         *
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 32


1098:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1099:Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1100:Generated_Source\PSoC4/CyLib.c ****         {
1101:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1102:Generated_Source\PSoC4/CyLib.c **** 
1103:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
1104:Generated_Source\PSoC4/CyLib.c ****             {
1105:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
1106:Generated_Source\PSoC4/CyLib.c **** 
1107:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
1108:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
1109:Generated_Source\PSoC4/CyLib.c **** 
1110:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
1111:Generated_Source\PSoC4/CyLib.c ****             }
1112:Generated_Source\PSoC4/CyLib.c ****             else
1113:Generated_Source\PSoC4/CyLib.c ****             {
1114:Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1115:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1116:Generated_Source\PSoC4/CyLib.c ****             }
1117:Generated_Source\PSoC4/CyLib.c ****         }
1118:Generated_Source\PSoC4/CyLib.c **** 
1119:Generated_Source\PSoC4/CyLib.c ****     #else
1120:Generated_Source\PSoC4/CyLib.c **** 
1121:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1122:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1123:Generated_Source\PSoC4/CyLib.c ****         ********************************************************************************
1124:Generated_Source\PSoC4/CyLib.c ****         *
1125:Generated_Source\PSoC4/CyLib.c ****         * Summary:
1126:Generated_Source\PSoC4/CyLib.c ****         *  Selects trim setting values for ECO. This API is available only for PSoC
1127:Generated_Source\PSoC4/CyLib.c ****         *  4200L devices only.
1128:Generated_Source\PSoC4/CyLib.c ****         *
1129:Generated_Source\PSoC4/CyLib.c ****         *  The following parameters can be trimmed for ECO. The affected registers are
1130:Generated_Source\PSoC4/CyLib.c ****         *  ECO_TRIM0 and ECO_TRIM1.
1131:Generated_Source\PSoC4/CyLib.c ****         *
1132:Generated_Source\PSoC4/CyLib.c ****         *  Watchdog trim - This bit field sets the error threshold below the steady
1133:Generated_Source\PSoC4/CyLib.c ****         *  state amplitude level.
1134:Generated_Source\PSoC4/CyLib.c ****         *
1135:Generated_Source\PSoC4/CyLib.c ****         *  Amplitude trim - This bit field is to set the crystal drive level when
1136:Generated_Source\PSoC4/CyLib.c ****         *  ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1137:Generated_Source\PSoC4/CyLib.c ****         *  driving a crystal beyond its rated limit can permanently damage the crystal.
1138:Generated_Source\PSoC4/CyLib.c ****         *
1139:Generated_Source\PSoC4/CyLib.c ****         *  Filter frequency trim - This bit field sets LPF frequency trim and affects
1140:Generated_Source\PSoC4/CyLib.c ****         *  the 3rd harmonic content.
1141:Generated_Source\PSoC4/CyLib.c ****         *
1142:Generated_Source\PSoC4/CyLib.c ****         *  Feedback resistor trim - This bit field sets the feedback resistor trim and
1143:Generated_Source\PSoC4/CyLib.c ****         *  impacts the oscillation amplitude.
1144:Generated_Source\PSoC4/CyLib.c ****         *
1145:Generated_Source\PSoC4/CyLib.c ****         *  Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1146:Generated_Source\PSoC4/CyLib.c ****         *  the startup time of the crystal.
1147:Generated_Source\PSoC4/CyLib.c ****         *
1148:Generated_Source\PSoC4/CyLib.c ****         * Parameters:
1149:Generated_Source\PSoC4/CyLib.c ****         *  wDTrim: Watchdog trim
1150:Generated_Source\PSoC4/CyLib.c ****         *       Parameter                   Value Description
1151:Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1152:Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1153:Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1154:Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 33


1155:Generated_Source\PSoC4/CyLib.c ****         *
1156:Generated_Source\PSoC4/CyLib.c ****         *  aTrim: Amplitude trim
1157:Generated_Source\PSoC4/CyLib.c ****         *       Parameter                   Value Description
1158:Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1159:Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1160:Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1161:Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1162:Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1163:Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1164:Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1165:Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1166:Generated_Source\PSoC4/CyLib.c ****         *
1167:Generated_Source\PSoC4/CyLib.c ****         *  fTrim: Filter frequency trim
1168:Generated_Source\PSoC4/CyLib.c ****         *       Parameter                   Value Description
1169:Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1170:Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1171:Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1172:Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1173:Generated_Source\PSoC4/CyLib.c ****         *
1174:Generated_Source\PSoC4/CyLib.c ****         *  rTrim: Feedback resistor trim
1175:Generated_Source\PSoC4/CyLib.c ****         *       Parameter                   Value Description
1176:Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1177:Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1178:Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1179:Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz        *
1180:Generated_Source\PSoC4/CyLib.c ****         *
1181:Generated_Source\PSoC4/CyLib.c ****         *  gTrim: Amplifier gain trim. Calculate the minimum required gm
1182:Generated_Source\PSoC4/CyLib.c ****         *         (trans-conductance value). Divide the calculated gm value by
1183:Generated_Source\PSoC4/CyLib.c ****         *         4.5 to obtain an integer value 'result'. For more information
1184:Generated_Source\PSoC4/CyLib.c ****         *         please refer to the device TRM.
1185:Generated_Source\PSoC4/CyLib.c ****         *       Parameter                   Value Description
1186:Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_GTRIM0       If result = 1
1187:Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_GTRIM1       If result = 0
1188:Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_GTRIM2       If result = 2
1189:Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_GTRIM2       If result = 3
1190:Generated_Source\PSoC4/CyLib.c **** 
1191:Generated_Source\PSoC4/CyLib.c ****         * Return:
1192:Generated_Source\PSoC4/CyLib.c ****         *  None
1193:Generated_Source\PSoC4/CyLib.c ****         *
1194:Generated_Source\PSoC4/CyLib.c ****         * Side Effects:
1195:Generated_Source\PSoC4/CyLib.c ****         *  Use care when setting the amplitude trim field because driving a crystal
1196:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1197:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1198:Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1199:Generated_Source\PSoC4/CyLib.c ****         {
1200:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1201:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1202:Generated_Source\PSoC4/CyLib.c **** 
1203:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1204:Generated_Source\PSoC4/CyLib.c **** 
1205:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1206:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1207:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1208:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1209:Generated_Source\PSoC4/CyLib.c **** 
1210:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1211:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 34


1212:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1213:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1214:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1215:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1216:Generated_Source\PSoC4/CyLib.c **** 
1217:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1218:Generated_Source\PSoC4/CyLib.c **** 
1219:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1220:Generated_Source\PSoC4/CyLib.c ****         }
1221:Generated_Source\PSoC4/CyLib.c **** 
1222:Generated_Source\PSoC4/CyLib.c **** 
1223:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1224:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1225:Generated_Source\PSoC4/CyLib.c ****         ********************************************************************************
1226:Generated_Source\PSoC4/CyLib.c ****         *
1227:Generated_Source\PSoC4/CyLib.c ****         * Summary:
1228:Generated_Source\PSoC4/CyLib.c ****         *  Selects trim setting values for ECO based on crystal parameters. Use care
1229:Generated_Source\PSoC4/CyLib.c ****         *  when setting the driveLevel parameter because driving a crystal beyond its
1230:Generated_Source\PSoC4/CyLib.c ****         *  rated limit can permanently damage the crystal.
1231:Generated_Source\PSoC4/CyLib.c ****         *
1232:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4200L devices only.
1233:Generated_Source\PSoC4/CyLib.c ****         *
1234:Generated_Source\PSoC4/CyLib.c ****         * Parameters:
1235:Generated_Source\PSoC4/CyLib.c ****         *  freq: frequency of the crystal in kHz.
1236:Generated_Source\PSoC4/CyLib.c ****         *  cLoad: crystal load capacitance in pF.
1237:Generated_Source\PSoC4/CyLib.c ****         *  esr: equivalent series resistance of the crystal in ohm.
1238:Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1239:Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1240:Generated_Source\PSoC4/CyLib.c ****         *
1241:Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1242:Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1243:Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1244:Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1245:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1246:Generated_Source\PSoC4/CyLib.c ****         *
1247:Generated_Source\PSoC4/CyLib.c ****         * Return:
1248:Generated_Source\PSoC4/CyLib.c ****         *  status:
1249:Generated_Source\PSoC4/CyLib.c ****         *  CYRET_SUCCESS - ECO configuration completed successfully.
1250:Generated_Source\PSoC4/CyLib.c ****         *  CYRET_BAD_PARAM - One or more invalid parameters
1251:Generated_Source\PSoC4/CyLib.c ****         *
1252:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1253:Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1254:Generated_Source\PSoC4/CyLib.c ****         {
1255:Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1256:Generated_Source\PSoC4/CyLib.c **** 
1257:Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1258:Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1259:Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1260:Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1261:Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1262:Generated_Source\PSoC4/CyLib.c **** 
1263:Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1264:Generated_Source\PSoC4/CyLib.c **** 
1265:Generated_Source\PSoC4/CyLib.c **** 
1266:Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1267:Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1268:Generated_Source\PSoC4/CyLib.c ****             {
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 35


1269:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1270:Generated_Source\PSoC4/CyLib.c ****             }
1271:Generated_Source\PSoC4/CyLib.c ****             else
1272:Generated_Source\PSoC4/CyLib.c ****             {
1273:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1274:Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1275:Generated_Source\PSoC4/CyLib.c **** 
1276:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1277:Generated_Source\PSoC4/CyLib.c ****                 {
1278:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1279:Generated_Source\PSoC4/CyLib.c ****                 }
1280:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1281:Generated_Source\PSoC4/CyLib.c ****                 {
1282:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1283:Generated_Source\PSoC4/CyLib.c ****                 }
1284:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1285:Generated_Source\PSoC4/CyLib.c ****                 {
1286:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1287:Generated_Source\PSoC4/CyLib.c ****                 }
1288:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1289:Generated_Source\PSoC4/CyLib.c ****                 {
1290:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1291:Generated_Source\PSoC4/CyLib.c ****                 }
1292:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1293:Generated_Source\PSoC4/CyLib.c ****                 {
1294:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1295:Generated_Source\PSoC4/CyLib.c ****                 }
1296:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1297:Generated_Source\PSoC4/CyLib.c ****                 {
1298:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1299:Generated_Source\PSoC4/CyLib.c ****                 }
1300:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1301:Generated_Source\PSoC4/CyLib.c ****                 {
1302:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1303:Generated_Source\PSoC4/CyLib.c ****                 }
1304:Generated_Source\PSoC4/CyLib.c ****                 else
1305:Generated_Source\PSoC4/CyLib.c ****                 {
1306:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1307:Generated_Source\PSoC4/CyLib.c ****                 }
1308:Generated_Source\PSoC4/CyLib.c **** 
1309:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1310:Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1311:Generated_Source\PSoC4/CyLib.c **** 
1312:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1313:Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
1314:Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1315:Generated_Source\PSoC4/CyLib.c ****                 {
1316:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1317:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1318:Generated_Source\PSoC4/CyLib.c ****                 }
1319:Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1320:Generated_Source\PSoC4/CyLib.c ****                 {
1321:Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1322:Generated_Source\PSoC4/CyLib.c ****                 }
1323:Generated_Source\PSoC4/CyLib.c ****                 else
1324:Generated_Source\PSoC4/CyLib.c ****                 {
1325:Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 36


1326:Generated_Source\PSoC4/CyLib.c ****                 }
1327:Generated_Source\PSoC4/CyLib.c **** 
1328:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1329:Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1330:Generated_Source\PSoC4/CyLib.c ****                 {
1331:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1332:Generated_Source\PSoC4/CyLib.c ****                 }
1333:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1334:Generated_Source\PSoC4/CyLib.c ****                 {
1335:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1336:Generated_Source\PSoC4/CyLib.c ****                 }
1337:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1338:Generated_Source\PSoC4/CyLib.c ****                 {
1339:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1340:Generated_Source\PSoC4/CyLib.c ****                 }
1341:Generated_Source\PSoC4/CyLib.c ****                 else
1342:Generated_Source\PSoC4/CyLib.c ****                 {
1343:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1344:Generated_Source\PSoC4/CyLib.c ****                 }
1345:Generated_Source\PSoC4/CyLib.c **** 
1346:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1347:Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1348:Generated_Source\PSoC4/CyLib.c **** 
1349:Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1350:Generated_Source\PSoC4/CyLib.c **** 
1351:Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1352:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1353:Generated_Source\PSoC4/CyLib.c ****                 {
1354:Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1355:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1356:Generated_Source\PSoC4/CyLib.c ****                 }
1357:Generated_Source\PSoC4/CyLib.c ****                 else
1358:Generated_Source\PSoC4/CyLib.c ****                 {
1359:Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1360:Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1361:Generated_Source\PSoC4/CyLib.c ****                     */
1362:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1363:Generated_Source\PSoC4/CyLib.c ****                 }
1364:Generated_Source\PSoC4/CyLib.c ****             }
1365:Generated_Source\PSoC4/CyLib.c **** 
1366:Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1367:Generated_Source\PSoC4/CyLib.c ****         }
1368:Generated_Source\PSoC4/CyLib.c **** 
1369:Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1370:Generated_Source\PSoC4/CyLib.c **** 
1371:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1372:Generated_Source\PSoC4/CyLib.c **** 
1373:Generated_Source\PSoC4/CyLib.c **** 
1374:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
1375:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1376:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1377:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1378:Generated_Source\PSoC4/CyLib.c ****     *
1379:Generated_Source\PSoC4/CyLib.c ****     * Summary:
1380:Generated_Source\PSoC4/CyLib.c ****     *  Enables the PLL. Optionally waits for it to become stable. Waits at least
1381:Generated_Source\PSoC4/CyLib.c ****     *  250 us or until it is detected that the PLL is stable.
1382:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 37


1383:Generated_Source\PSoC4/CyLib.c ****     *  Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1384:Generated_Source\PSoC4/CyLib.c ****     *  once the PLL is locked if the wait parameter is 1).
1385:Generated_Source\PSoC4/CyLib.c ****     *
1386:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1387:Generated_Source\PSoC4/CyLib.c ****     *
1388:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1389:Generated_Source\PSoC4/CyLib.c ****     *  PLL:
1390:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1391:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1392:Generated_Source\PSoC4/CyLib.c ****     *
1393:Generated_Source\PSoC4/CyLib.c ****     *  wait:
1394:Generated_Source\PSoC4/CyLib.c ****     *  0 - Return immediately after configuration.
1395:Generated_Source\PSoC4/CyLib.c ****     *  1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1396:Generated_Source\PSoC4/CyLib.c ****     *  implement the timeout feature.
1397:Generated_Source\PSoC4/CyLib.c ****     *
1398:Generated_Source\PSoC4/CyLib.c ****     * Return:
1399:Generated_Source\PSoC4/CyLib.c ****     *  CYRET_SUCCESS - Completed successfully.
1400:Generated_Source\PSoC4/CyLib.c ****     *
1401:Generated_Source\PSoC4/CyLib.c ****     *  CYRET_TIMEOUT - The timeout occurred without detecting a stable clock.  If the
1402:Generated_Source\PSoC4/CyLib.c ****     *  input source of the clock is jittery, then the lock indication may not occur.
1403:Generated_Source\PSoC4/CyLib.c ****     *  However, after the timeout has expired, the generated PLL clock can still be
1404:Generated_Source\PSoC4/CyLib.c ****     *  used.
1405:Generated_Source\PSoC4/CyLib.c ****     *
1406:Generated_Source\PSoC4/CyLib.c ****     *  CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1407:Generated_Source\PSoC4/CyLib.c ****     *
1408:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1409:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1410:Generated_Source\PSoC4/CyLib.c ****     {
1411:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1412:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1413:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1414:Generated_Source\PSoC4/CyLib.c **** 
1415:Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1416:Generated_Source\PSoC4/CyLib.c ****         {
1417:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1418:Generated_Source\PSoC4/CyLib.c **** 
1419:Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1420:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1421:Generated_Source\PSoC4/CyLib.c **** 
1422:Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1423:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1424:Generated_Source\PSoC4/CyLib.c **** 
1425:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1426:Generated_Source\PSoC4/CyLib.c **** 
1427:Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1428:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1429:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1430:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1431:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1432:Generated_Source\PSoC4/CyLib.c **** 
1433:Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1434:Generated_Source\PSoC4/CyLib.c ****             {
1435:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1436:Generated_Source\PSoC4/CyLib.c **** 
1437:Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1438:Generated_Source\PSoC4/CyLib.c ****                 {
1439:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 38


1440:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1441:Generated_Source\PSoC4/CyLib.c ****                     {
1442:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1443:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1444:Generated_Source\PSoC4/CyLib.c ****                         break;
1445:Generated_Source\PSoC4/CyLib.c ****                     }
1446:Generated_Source\PSoC4/CyLib.c **** 
1447:Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1448:Generated_Source\PSoC4/CyLib.c ****                     counts--;
1449:Generated_Source\PSoC4/CyLib.c ****                 }
1450:Generated_Source\PSoC4/CyLib.c ****             }
1451:Generated_Source\PSoC4/CyLib.c ****         }
1452:Generated_Source\PSoC4/CyLib.c ****         else
1453:Generated_Source\PSoC4/CyLib.c ****         {
1454:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1455:Generated_Source\PSoC4/CyLib.c ****         }
1456:Generated_Source\PSoC4/CyLib.c **** 
1457:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1458:Generated_Source\PSoC4/CyLib.c ****     }
1459:Generated_Source\PSoC4/CyLib.c **** 
1460:Generated_Source\PSoC4/CyLib.c **** 
1461:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1462:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1463:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1464:Generated_Source\PSoC4/CyLib.c ****     *
1465:Generated_Source\PSoC4/CyLib.c ****     * Summary:
1466:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero if the output of the specified PLL output is locked.
1467:Generated_Source\PSoC4/CyLib.c ****     *
1468:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1469:Generated_Source\PSoC4/CyLib.c ****     *
1470:Generated_Source\PSoC4/CyLib.c ****     * Parameters: PLL:
1471:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1472:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1473:Generated_Source\PSoC4/CyLib.c ****     *
1474:Generated_Source\PSoC4/CyLib.c ****     * Return:
1475:Generated_Source\PSoC4/CyLib.c ****     *  A non-zero value when the specified PLL is locked.
1476:Generated_Source\PSoC4/CyLib.c ****     *
1477:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1478:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1479:Generated_Source\PSoC4/CyLib.c ****     {
1480:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1481:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1482:Generated_Source\PSoC4/CyLib.c **** 
1483:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1484:Generated_Source\PSoC4/CyLib.c **** 
1485:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1486:Generated_Source\PSoC4/CyLib.c **** 
1487:Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1488:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1489:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1490:Generated_Source\PSoC4/CyLib.c ****         {
1491:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1492:Generated_Source\PSoC4/CyLib.c ****         }
1493:Generated_Source\PSoC4/CyLib.c **** 
1494:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1495:Generated_Source\PSoC4/CyLib.c **** 
1496:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 39


1497:Generated_Source\PSoC4/CyLib.c ****     }
1498:Generated_Source\PSoC4/CyLib.c **** 
1499:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1500:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1501:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1502:Generated_Source\PSoC4/CyLib.c ****     *
1503:Generated_Source\PSoC4/CyLib.c ****     * Summary:
1504:Generated_Source\PSoC4/CyLib.c ****     *  Disables the PLL and isolates its outputs.
1505:Generated_Source\PSoC4/CyLib.c ****     *
1506:Generated_Source\PSoC4/CyLib.c ****     *  Ensures that either PLL is not the source of HFCLK before it is disabled,
1507:Generated_Source\PSoC4/CyLib.c ****     *  otherwise, the CPU will halt.
1508:Generated_Source\PSoC4/CyLib.c ****     *
1509:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1510:Generated_Source\PSoC4/CyLib.c ****     *
1511:Generated_Source\PSoC4/CyLib.c ****     * Parameters: PLL:
1512:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1513:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1514:Generated_Source\PSoC4/CyLib.c ****     *
1515:Generated_Source\PSoC4/CyLib.c ****     * Return:
1516:Generated_Source\PSoC4/CyLib.c ****     *  None
1517:Generated_Source\PSoC4/CyLib.c ****     *
1518:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1519:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1520:Generated_Source\PSoC4/CyLib.c ****     {
1521:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1522:Generated_Source\PSoC4/CyLib.c **** 
1523:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1524:Generated_Source\PSoC4/CyLib.c ****         {
1525:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1526:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1527:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1528:Generated_Source\PSoC4/CyLib.c ****         }
1529:Generated_Source\PSoC4/CyLib.c ****     }
1530:Generated_Source\PSoC4/CyLib.c **** 
1531:Generated_Source\PSoC4/CyLib.c **** 
1532:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1533:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1534:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1535:Generated_Source\PSoC4/CyLib.c ****     *
1536:Generated_Source\PSoC4/CyLib.c ****     * Summary:
1537:Generated_Source\PSoC4/CyLib.c ****     *  Sets feedback (P) and reference the (Q) divider value. This API also sets the
1538:Generated_Source\PSoC4/CyLib.c ****     *  programmable charge pump current value. Note that the PLL has to be disabled
1539:Generated_Source\PSoC4/CyLib.c ****     *  before calling this API. If this function is called while any PLL is sourcing,
1540:Generated_Source\PSoC4/CyLib.c ****     *  the SYSCLK will return an error.
1541:Generated_Source\PSoC4/CyLib.c ****     *
1542:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the system clock source when calling this function. The
1543:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
1544:Generated_Source\PSoC4/CyLib.c ****     *
1545:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1546:Generated_Source\PSoC4/CyLib.c ****     *
1547:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1548:Generated_Source\PSoC4/CyLib.c ****     *  PLL:
1549:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1550:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1551:Generated_Source\PSoC4/CyLib.c ****     *
1552:Generated_Source\PSoC4/CyLib.c ****     *  feedback: P divider
1553:Generated_Source\PSoC4/CyLib.c ****     *   Range 4 - 259. Control bits for the feedback divider
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 40


1554:Generated_Source\PSoC4/CyLib.c ****     *
1555:Generated_Source\PSoC4/CyLib.c ****     *  reference: The Q divider.
1556:Generated_Source\PSoC4/CyLib.c ****     *   Range 1 - 64. Divide by the reference.
1557:Generated_Source\PSoC4/CyLib.c ****     *
1558:Generated_Source\PSoC4/CyLib.c ****     *  current: Charge the pump current in uA. The 2 uA for output frequencies
1559:Generated_Source\PSoC4/CyLib.c ****     *  of 67 MHz or less, and 3 uA for higher output frequencies. The default
1560:Generated_Source\PSoC4/CyLib.c ****     *  value is 2 uA.
1561:Generated_Source\PSoC4/CyLib.c ****     *
1562:Generated_Source\PSoC4/CyLib.c ****     * Return:
1563:Generated_Source\PSoC4/CyLib.c ****     *  CYRET_SUCCESS - Completed successfully.
1564:Generated_Source\PSoC4/CyLib.c ****     *  CYRET_BAD_PARAM - The parameters are out of range or the specified PLL sources
1565:Generated_Source\PSoC4/CyLib.c ****     *  the system clock.
1566:Generated_Source\PSoC4/CyLib.c ****     *
1567:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1568:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1569:Generated_Source\PSoC4/CyLib.c ****     {
1570:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1571:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1572:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1573:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1574:Generated_Source\PSoC4/CyLib.c **** 
1575:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1576:Generated_Source\PSoC4/CyLib.c **** 
1577:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1578:Generated_Source\PSoC4/CyLib.c **** 
1579:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1580:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1581:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1582:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1583:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1584:Generated_Source\PSoC4/CyLib.c ****         {
1585:Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1586:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1587:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1588:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1589:Generated_Source\PSoC4/CyLib.c **** 
1590:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1591:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1592:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1593:Generated_Source\PSoC4/CyLib.c **** 
1594:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1595:Generated_Source\PSoC4/CyLib.c **** 
1596:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1597:Generated_Source\PSoC4/CyLib.c ****         }
1598:Generated_Source\PSoC4/CyLib.c **** 
1599:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1600:Generated_Source\PSoC4/CyLib.c **** 
1601:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1602:Generated_Source\PSoC4/CyLib.c ****     }
1603:Generated_Source\PSoC4/CyLib.c **** 
1604:Generated_Source\PSoC4/CyLib.c **** 
1605:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1606:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1607:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1608:Generated_Source\PSoC4/CyLib.c ****     *
1609:Generated_Source\PSoC4/CyLib.c ****     * Summary:
1610:Generated_Source\PSoC4/CyLib.c ****     *  Sets the bypass mode for the specified PLL.
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 41


1611:Generated_Source\PSoC4/CyLib.c ****     *
1612:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the system clock source when calling this function.
1613:Generated_Source\PSoC4/CyLib.c ****     *  The PLL output will glitch during this function call.
1614:Generated_Source\PSoC4/CyLib.c ****     *
1615:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1616:Generated_Source\PSoC4/CyLib.c ****     *
1617:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1618:Generated_Source\PSoC4/CyLib.c ****     *  PLL:
1619:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1620:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1621:Generated_Source\PSoC4/CyLib.c ****     *
1622:Generated_Source\PSoC4/CyLib.c ****     *  bypass: The bypass mode.
1623:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1624:Generated_Source\PSoC4/CyLib.c ****     *   automatically selects PLL the reference input (bypass mode). When locked,
1625:Generated_Source\PSoC4/CyLib.c ****     *   automatically selects the PLL output.
1626:Generated_Source\PSoC4/CyLib.c ****     *
1627:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1628:Generated_Source\PSoC4/CyLib.c ****     *   Ignores the lock indicator.
1629:Generated_Source\PSoC4/CyLib.c ****     *
1630:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1631:Generated_Source\PSoC4/CyLib.c ****     *
1632:Generated_Source\PSoC4/CyLib.c ****     * Return:
1633:Generated_Source\PSoC4/CyLib.c ****     *  None
1634:Generated_Source\PSoC4/CyLib.c ****     *
1635:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1636:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1637:Generated_Source\PSoC4/CyLib.c ****     {
1638:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1639:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1640:Generated_Source\PSoC4/CyLib.c **** 
1641:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1642:Generated_Source\PSoC4/CyLib.c **** 
1643:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1644:Generated_Source\PSoC4/CyLib.c ****         {
1645:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1646:Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1647:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1648:Generated_Source\PSoC4/CyLib.c ****         }
1649:Generated_Source\PSoC4/CyLib.c **** 
1650:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1651:Generated_Source\PSoC4/CyLib.c ****     }
1652:Generated_Source\PSoC4/CyLib.c **** 
1653:Generated_Source\PSoC4/CyLib.c **** 
1654:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1655:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1656:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1657:Generated_Source\PSoC4/CyLib.c ****     *
1658:Generated_Source\PSoC4/CyLib.c ****     * Summary:
1659:Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1660:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1661:Generated_Source\PSoC4/CyLib.c ****     *
1662:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1663:Generated_Source\PSoC4/CyLib.c ****     *  PLL:
1664:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1665:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1666:Generated_Source\PSoC4/CyLib.c ****     *
1667:Generated_Source\PSoC4/CyLib.c ****     *  Return
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 42


1668:Generated_Source\PSoC4/CyLib.c ****     *  bypass: Bypass mode.
1669:Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1670:Generated_Source\PSoC4/CyLib.c ****     *
1671:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1672:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1673:Generated_Source\PSoC4/CyLib.c ****     {
1674:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1675:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1676:Generated_Source\PSoC4/CyLib.c **** 
1677:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1678:Generated_Source\PSoC4/CyLib.c **** 
1679:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1680:Generated_Source\PSoC4/CyLib.c **** 
1681:Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1682:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1683:Generated_Source\PSoC4/CyLib.c **** 
1684:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1685:Generated_Source\PSoC4/CyLib.c **** 
1686:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1687:Generated_Source\PSoC4/CyLib.c ****     }
1688:Generated_Source\PSoC4/CyLib.c **** 
1689:Generated_Source\PSoC4/CyLib.c **** 
1690:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1691:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1692:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1693:Generated_Source\PSoC4/CyLib.c ****     *
1694:Generated_Source\PSoC4/CyLib.c ****     * Summary:
1695:Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1696:Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1697:Generated_Source\PSoC4/CyLib.c ****     *
1698:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1699:Generated_Source\PSoC4/CyLib.c ****     *
1700:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1701:Generated_Source\PSoC4/CyLib.c ****     *  PLL:
1702:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1703:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1704:Generated_Source\PSoC4/CyLib.c ****     *
1705:Generated_Source\PSoC4/CyLib.c ****     * Return:
1706:Generated_Source\PSoC4/CyLib.c ****     *  Non-zero value when the specified PLL sources the System clock and the PLL
1707:Generated_Source\PSoC4/CyLib.c ****     *  is not in the bypass mode.
1708:Generated_Source\PSoC4/CyLib.c ****     *
1709:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1710:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
1711:Generated_Source\PSoC4/CyLib.c ****     {
1712:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
1713:Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
1714:Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_LOCKED;
1715:Generated_Source\PSoC4/CyLib.c **** 
1716:Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
1717:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
1718:Generated_Source\PSoC4/CyLib.c **** 
1719:Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
1720:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll)) ||
1721:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll)))
1722:Generated_Source\PSoC4/CyLib.c ****         {
1723:Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
1724:Generated_Source\PSoC4/CyLib.c ****         }
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 43


1725:Generated_Source\PSoC4/CyLib.c **** 
1726:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1727:Generated_Source\PSoC4/CyLib.c ****     }
1728:Generated_Source\PSoC4/CyLib.c **** 
1729:Generated_Source\PSoC4/CyLib.c **** 
1730:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1731:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
1732:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1733:Generated_Source\PSoC4/CyLib.c ****     *
1734:Generated_Source\PSoC4/CyLib.c ****     * Summary:
1735:Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
1736:Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
1737:Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
1738:Generated_Source\PSoC4/CyLib.c ****     *  this API.
1739:Generated_Source\PSoC4/CyLib.c ****     *
1740:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1741:Generated_Source\PSoC4/CyLib.c ****     *
1742:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1743:Generated_Source\PSoC4/CyLib.c ****     *  PLL:
1744:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1745:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1746:Generated_Source\PSoC4/CyLib.c ****     *
1747:Generated_Source\PSoC4/CyLib.c ****     * Return:
1748:Generated_Source\PSoC4/CyLib.c ****     *  Non-zero value when the specified PLL was unlocked.
1749:Generated_Source\PSoC4/CyLib.c ****     *
1750:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1751:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
1752:Generated_Source\PSoC4/CyLib.c ****     {
1753:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
1754:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1755:Generated_Source\PSoC4/CyLib.c **** 
1756:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1757:Generated_Source\PSoC4/CyLib.c **** 
1758:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
1759:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
1760:Generated_Source\PSoC4/CyLib.c **** 
1761:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1762:Generated_Source\PSoC4/CyLib.c **** 
1763:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1764:Generated_Source\PSoC4/CyLib.c ****     }
1765:Generated_Source\PSoC4/CyLib.c **** 
1766:Generated_Source\PSoC4/CyLib.c **** 
1767:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1768:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
1769:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1770:Generated_Source\PSoC4/CyLib.c ****     *
1771:Generated_Source\PSoC4/CyLib.c ****     * Summary:
1772:Generated_Source\PSoC4/CyLib.c ****     *  Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
1773:Generated_Source\PSoC4/CyLib.c ****     *  The input frequency is the frequency of the source to the PLL. The source is
1774:Generated_Source\PSoC4/CyLib.c ****     *  set using the CySysClkPllSetSource() function.
1775:Generated_Source\PSoC4/CyLib.c ****     *
1776:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the system clock source when calling this function. The
1777:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
1778:Generated_Source\PSoC4/CyLib.c ****     *
1779:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1780:Generated_Source\PSoC4/CyLib.c ****     *
1781:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 44


1782:Generated_Source\PSoC4/CyLib.c ****     *  PLL:
1783:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1784:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1785:Generated_Source\PSoC4/CyLib.c ****     *
1786:Generated_Source\PSoC4/CyLib.c ****     *  inputFreq:
1787:Generated_Source\PSoC4/CyLib.c ****     *   The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
1788:Generated_Source\PSoC4/CyLib.c ****     *
1789:Generated_Source\PSoC4/CyLib.c ****     *  pllFreq:
1790:Generated_Source\PSoC4/CyLib.c ****     *   The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
1791:Generated_Source\PSoC4/CyLib.c ****     *
1792:Generated_Source\PSoC4/CyLib.c ****     * divider:
1793:Generated_Source\PSoC4/CyLib.c ****     *  The output clock divider for the PLL:
1794:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
1795:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
1796:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
1797:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
1798:Generated_Source\PSoC4/CyLib.c ****     *
1799:Generated_Source\PSoC4/CyLib.c ****     * freqTol:
1800:Generated_Source\PSoC4/CyLib.c ****     *  The tolerance in ppm, 10 ppm is equal to 0.001%.
1801:Generated_Source\PSoC4/CyLib.c ****     *
1802:Generated_Source\PSoC4/CyLib.c ****     * Return:
1803:Generated_Source\PSoC4/CyLib.c ****     *  CYRET_SUCCESS - The PLL was successfully configured for the requested
1804:Generated_Source\PSoC4/CyLib.c ****     *  frequency.
1805:Generated_Source\PSoC4/CyLib.c ****     *
1806:Generated_Source\PSoC4/CyLib.c ****     *  CYRET_BAD_PARAM - The PLL was not able to successfully configure for the
1807:Generated_Source\PSoC4/CyLib.c ****     *  requested frequency.
1808:Generated_Source\PSoC4/CyLib.c ****     *
1809:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1810:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
1811:Generated_Source\PSoC4/CyLib.c ****     {
1812:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
1813:Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
1814:Generated_Source\PSoC4/CyLib.c **** 
1815:Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
1816:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
1817:Generated_Source\PSoC4/CyLib.c **** 
1818:Generated_Source\PSoC4/CyLib.c ****         uint32 q;
1819:Generated_Source\PSoC4/CyLib.c ****         uint32 p;
1820:Generated_Source\PSoC4/CyLib.c **** 
1821:Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
1822:Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
1823:Generated_Source\PSoC4/CyLib.c **** 
1824:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1825:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1826:Generated_Source\PSoC4/CyLib.c **** 
1827:Generated_Source\PSoC4/CyLib.c **** 
1828:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1829:Generated_Source\PSoC4/CyLib.c **** 
1830:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1831:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
1832:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
1833:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
1834:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1835:Generated_Source\PSoC4/CyLib.c ****         {
1836:Generated_Source\PSoC4/CyLib.c **** 
1837:Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
1838:Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 45


1839:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
1840:Generated_Source\PSoC4/CyLib.c **** 
1841:Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
1842:Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
1843:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
1844:Generated_Source\PSoC4/CyLib.c **** 
1845:Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
1846:Generated_Source\PSoC4/CyLib.c ****             {
1847:Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
1848:Generated_Source\PSoC4/CyLib.c ****                 {
1849:Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
1850:Generated_Source\PSoC4/CyLib.c **** 
1851:Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
1852:Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
1853:Generated_Source\PSoC4/CyLib.c **** 
1854:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
1855:Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
1856:Generated_Source\PSoC4/CyLib.c **** 
1857:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
1858:Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
1859:Generated_Source\PSoC4/CyLib.c **** 
1860:Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
1861:Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
1862:Generated_Source\PSoC4/CyLib.c ****                     {
1863:Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
1864:Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
1865:Generated_Source\PSoC4/CyLib.c ****                         break;
1866:Generated_Source\PSoC4/CyLib.c ****                     }
1867:Generated_Source\PSoC4/CyLib.c ****                 }
1868:Generated_Source\PSoC4/CyLib.c **** 
1869:Generated_Source\PSoC4/CyLib.c **** 
1870:Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
1871:Generated_Source\PSoC4/CyLib.c ****                 {
1872:Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
1873:Generated_Source\PSoC4/CyLib.c ****                     {
1874:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
1875:Generated_Source\PSoC4/CyLib.c ****                     }
1876:Generated_Source\PSoC4/CyLib.c ****                 }
1877:Generated_Source\PSoC4/CyLib.c ****             }
1878:Generated_Source\PSoC4/CyLib.c **** 
1879:Generated_Source\PSoC4/CyLib.c ****         }
1880:Generated_Source\PSoC4/CyLib.c **** 
1881:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1882:Generated_Source\PSoC4/CyLib.c ****     }
1883:Generated_Source\PSoC4/CyLib.c **** 
1884:Generated_Source\PSoC4/CyLib.c **** 
1885:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1886:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
1887:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1888:Generated_Source\PSoC4/CyLib.c ****     *
1889:Generated_Source\PSoC4/CyLib.c ****     * Summary:
1890:Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must not be the system clock
1891:Generated_Source\PSoC4/CyLib.c ****     *  source when calling this function. The PLL output will glitch during this
1892:Generated_Source\PSoC4/CyLib.c ****     *  function call.
1893:Generated_Source\PSoC4/CyLib.c ****     *
1894:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1895:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 46


1896:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1897:Generated_Source\PSoC4/CyLib.c ****     *  PLL:
1898:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1899:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1900:Generated_Source\PSoC4/CyLib.c ****     *
1901:Generated_Source\PSoC4/CyLib.c ****     * source:
1902:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
1903:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock
1904:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
1905:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0]
1906:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1]
1907:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2]
1908:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3]
1909:Generated_Source\PSoC4/CyLib.c ****     *
1910:Generated_Source\PSoC4/CyLib.c ****     * Return:
1911:Generated_Source\PSoC4/CyLib.c ****     *  None
1912:Generated_Source\PSoC4/CyLib.c ****     *
1913:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1914:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
1915:Generated_Source\PSoC4/CyLib.c ****     {
1916:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1917:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1918:Generated_Source\PSoC4/CyLib.c **** 
1919:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1920:Generated_Source\PSoC4/CyLib.c **** 
1921:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1922:Generated_Source\PSoC4/CyLib.c ****         {
1923:Generated_Source\PSoC4/CyLib.c ****             regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
1924:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MASK(pl
1925:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG = regTmp;
1926:Generated_Source\PSoC4/CyLib.c ****         }
1927:Generated_Source\PSoC4/CyLib.c **** 
1928:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1929:Generated_Source\PSoC4/CyLib.c ****     }
1930:Generated_Source\PSoC4/CyLib.c **** 
1931:Generated_Source\PSoC4/CyLib.c **** 
1932:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1933:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
1934:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1935:Generated_Source\PSoC4/CyLib.c ****     *
1936:Generated_Source\PSoC4/CyLib.c ****     * Summary:
1937:Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
1938:Generated_Source\PSoC4/CyLib.c ****     *
1939:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
1940:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
1941:Generated_Source\PSoC4/CyLib.c ****     *
1942:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1943:Generated_Source\PSoC4/CyLib.c ****     *
1944:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1945:Generated_Source\PSoC4/CyLib.c ****     *  PLL:
1946:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1947:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1948:Generated_Source\PSoC4/CyLib.c ****     *
1949:Generated_Source\PSoC4/CyLib.c ****     * divider:
1950:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
1951:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
1952:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 47


1953:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
1954:Generated_Source\PSoC4/CyLib.c ****     *
1955:Generated_Source\PSoC4/CyLib.c ****     * Return:
1956:Generated_Source\PSoC4/CyLib.c ****     *  CYRET_SUCCESS   - Completed successfully.
1957:Generated_Source\PSoC4/CyLib.c ****     *  CYRET_BAD_PARAM - The parameters are out of range or the specified PLL
1958:Generated_Source\PSoC4/CyLib.c ****     *                    sources the System clock.
1959:Generated_Source\PSoC4/CyLib.c ****     *
1960:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1961:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
1962:Generated_Source\PSoC4/CyLib.c ****     {
1963:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
1964:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1965:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1966:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1967:Generated_Source\PSoC4/CyLib.c **** 
1968:Generated_Source\PSoC4/CyLib.c **** 
1969:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1970:Generated_Source\PSoC4/CyLib.c **** 
1971:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1972:Generated_Source\PSoC4/CyLib.c **** 
1973:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
1974:Generated_Source\PSoC4/CyLib.c ****         {
1975:Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
1976:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
1977:Generated_Source\PSoC4/CyLib.c **** 
1978:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
1979:Generated_Source\PSoC4/CyLib.c **** 
1980:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1981:Generated_Source\PSoC4/CyLib.c ****         }
1982:Generated_Source\PSoC4/CyLib.c **** 
1983:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1984:Generated_Source\PSoC4/CyLib.c **** 
1985:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1986:Generated_Source\PSoC4/CyLib.c ****     }
1987:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
1988:Generated_Source\PSoC4/CyLib.c **** 
1989:Generated_Source\PSoC4/CyLib.c **** 
1990:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
1991:Generated_Source\PSoC4/CyLib.c **** 
1992:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1993:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
1994:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1995:Generated_Source\PSoC4/CyLib.c ****     *
1996:Generated_Source\PSoC4/CyLib.c ****     * Summary:
1997:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
1998:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
1999:Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
2000:Generated_Source\PSoC4/CyLib.c ****     *
2001:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
2002:Generated_Source\PSoC4/CyLib.c ****     *  threshold: Threshold selection for Low Voltage Detect circuit.
2003:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
2004:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
2005:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
2006:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
2007:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
2008:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
2009:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 48


2010:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
2011:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
2012:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
2013:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
2014:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
2015:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
2016:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
2017:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
2018:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
2019:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
2020:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
2021:Generated_Source\PSoC4/CyLib.c ****     *
2022:Generated_Source\PSoC4/CyLib.c ****     * Return:
2023:Generated_Source\PSoC4/CyLib.c ****     *  None
2024:Generated_Source\PSoC4/CyLib.c ****     *
2025:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2026:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
2027:Generated_Source\PSoC4/CyLib.c ****     {
 664              		.loc 1 2027 0
 665              		.cfi_startproc
 666              		@ args = 0, pretend = 0, frame = 8
 667              		@ frame_needed = 1, uses_anonymous_args = 0
 668 0000 80B5     		push	{r7, lr}
 669              		.cfi_def_cfa_offset 8
 670              		.cfi_offset 7, -8
 671              		.cfi_offset 14, -4
 672 0002 82B0     		sub	sp, sp, #8
 673              		.cfi_def_cfa_offset 16
 674 0004 00AF     		add	r7, sp, #0
 675              		.cfi_def_cfa_register 7
 676 0006 7860     		str	r0, [r7, #4]
2028:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
2029:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
 677              		.loc 1 2029 0
 678 0008 144B     		ldr	r3, .L32
 679 000a 144A     		ldr	r2, .L32
 680 000c 1268     		ldr	r2, [r2]
 681 000e 0221     		movs	r1, #2
 682 0010 8A43     		bics	r2, r1
 683 0012 1A60     		str	r2, [r3]
2030:Generated_Source\PSoC4/CyLib.c **** 
2031:Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
2032:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
 684              		.loc 1 2032 0
 685 0014 124B     		ldr	r3, .L32+4
 686 0016 124A     		ldr	r2, .L32+4
 687 0018 1268     		ldr	r2, [r2]
 688 001a 1E21     		movs	r1, #30
 689 001c 8A43     		bics	r2, r1
 690 001e 1100     		movs	r1, r2
2033:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 691              		.loc 1 2033 0
 692 0020 7A68     		ldr	r2, [r7, #4]
 693 0022 5200     		lsls	r2, r2, #1
 694 0024 1E20     		movs	r0, #30
 695 0026 0240     		ands	r2, r0
2032:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 49


 696              		.loc 1 2032 0
 697 0028 0A43     		orrs	r2, r1
 698 002a 1A60     		str	r2, [r3]
2034:Generated_Source\PSoC4/CyLib.c **** 
2035:Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
2036:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 699              		.loc 1 2036 0
 700 002c 0C4B     		ldr	r3, .L32+4
 701 002e 0C4A     		ldr	r2, .L32+4
 702 0030 1268     		ldr	r2, [r2]
 703 0032 0121     		movs	r1, #1
 704 0034 0A43     		orrs	r2, r1
 705 0036 1A60     		str	r2, [r3]
2037:Generated_Source\PSoC4/CyLib.c **** 
2038:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
2039:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
 706              		.loc 1 2039 0
 707 0038 FA23     		movs	r3, #250
 708 003a 9B00     		lsls	r3, r3, #2
 709 003c 1800     		movs	r0, r3
 710 003e FFF7FEFF 		bl	CyDelayUs
2040:Generated_Source\PSoC4/CyLib.c **** 
2041:Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
2042:Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
 711              		.loc 1 2042 0
 712 0042 FFF7FEFF 		bl	CySysLvdClearInterrupt
2043:Generated_Source\PSoC4/CyLib.c **** 
2044:Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
2045:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
 713              		.loc 1 2045 0
 714 0046 054B     		ldr	r3, .L32
 715 0048 044A     		ldr	r2, .L32
 716 004a 1268     		ldr	r2, [r2]
 717 004c 0221     		movs	r1, #2
 718 004e 0A43     		orrs	r2, r1
 719 0050 1A60     		str	r2, [r3]
2046:Generated_Source\PSoC4/CyLib.c ****     }
 720              		.loc 1 2046 0
 721 0052 C046     		nop
 722 0054 BD46     		mov	sp, r7
 723 0056 02B0     		add	sp, sp, #8
 724              		@ sp needed
 725 0058 80BD     		pop	{r7, pc}
 726              	.L33:
 727 005a C046     		.align	2
 728              	.L32:
 729 005c 08000B40 		.word	1074462728
 730 0060 18000B40 		.word	1074462744
 731              		.cfi_endproc
 732              	.LFE6:
 733              		.size	CySysLvdEnable, .-CySysLvdEnable
 734              		.section	.text.CySysLvdDisable,"ax",%progbits
 735              		.align	2
 736              		.global	CySysLvdDisable
 737              		.code	16
 738              		.thumb_func
 739              		.type	CySysLvdDisable, %function
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 50


 740              	CySysLvdDisable:
 741              	.LFB7:
2047:Generated_Source\PSoC4/CyLib.c **** 
2048:Generated_Source\PSoC4/CyLib.c **** 
2049:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2050:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
2051:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
2052:Generated_Source\PSoC4/CyLib.c ****     *
2053:Generated_Source\PSoC4/CyLib.c ****     * Summary:
2054:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
2055:Generated_Source\PSoC4/CyLib.c ****     *
2056:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
2057:Generated_Source\PSoC4/CyLib.c ****     *  None
2058:Generated_Source\PSoC4/CyLib.c ****     *
2059:Generated_Source\PSoC4/CyLib.c ****     * Return:
2060:Generated_Source\PSoC4/CyLib.c ****     *  None
2061:Generated_Source\PSoC4/CyLib.c ****     *
2062:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2063:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2064:Generated_Source\PSoC4/CyLib.c ****     {
 742              		.loc 1 2064 0
 743              		.cfi_startproc
 744              		@ args = 0, pretend = 0, frame = 0
 745              		@ frame_needed = 1, uses_anonymous_args = 0
 746 0000 80B5     		push	{r7, lr}
 747              		.cfi_def_cfa_offset 8
 748              		.cfi_offset 7, -8
 749              		.cfi_offset 14, -4
 750 0002 00AF     		add	r7, sp, #0
 751              		.cfi_def_cfa_register 7
2065:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 752              		.loc 1 2065 0
 753 0004 074B     		ldr	r3, .L35
 754 0006 074A     		ldr	r2, .L35
 755 0008 1268     		ldr	r2, [r2]
 756 000a 0221     		movs	r1, #2
 757 000c 8A43     		bics	r2, r1
 758 000e 1A60     		str	r2, [r3]
2066:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 759              		.loc 1 2066 0
 760 0010 054B     		ldr	r3, .L35+4
 761 0012 054A     		ldr	r2, .L35+4
 762 0014 1268     		ldr	r2, [r2]
 763 0016 0121     		movs	r1, #1
 764 0018 8A43     		bics	r2, r1
 765 001a 1A60     		str	r2, [r3]
2067:Generated_Source\PSoC4/CyLib.c ****     }
 766              		.loc 1 2067 0
 767 001c C046     		nop
 768 001e BD46     		mov	sp, r7
 769              		@ sp needed
 770 0020 80BD     		pop	{r7, pc}
 771              	.L36:
 772 0022 C046     		.align	2
 773              	.L35:
 774 0024 08000B40 		.word	1074462728
 775 0028 18000B40 		.word	1074462744
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 51


 776              		.cfi_endproc
 777              	.LFE7:
 778              		.size	CySysLvdDisable, .-CySysLvdDisable
 779              		.section	.text.CySysLvdGetInterruptSource,"ax",%progbits
 780              		.align	2
 781              		.global	CySysLvdGetInterruptSource
 782              		.code	16
 783              		.thumb_func
 784              		.type	CySysLvdGetInterruptSource, %function
 785              	CySysLvdGetInterruptSource:
 786              	.LFB8:
2068:Generated_Source\PSoC4/CyLib.c **** 
2069:Generated_Source\PSoC4/CyLib.c **** 
2070:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2071:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2072:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
2073:Generated_Source\PSoC4/CyLib.c ****     *
2074:Generated_Source\PSoC4/CyLib.c ****     * Summary:
2075:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2076:Generated_Source\PSoC4/CyLib.c ****     *
2077:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
2078:Generated_Source\PSoC4/CyLib.c ****     *  None
2079:Generated_Source\PSoC4/CyLib.c ****     *
2080:Generated_Source\PSoC4/CyLib.c ****     * Return:
2081:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2082:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2083:Generated_Source\PSoC4/CyLib.c ****     *
2084:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2085:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2086:Generated_Source\PSoC4/CyLib.c ****     {
 787              		.loc 1 2086 0
 788              		.cfi_startproc
 789              		@ args = 0, pretend = 0, frame = 0
 790              		@ frame_needed = 1, uses_anonymous_args = 0
 791 0000 80B5     		push	{r7, lr}
 792              		.cfi_def_cfa_offset 8
 793              		.cfi_offset 7, -8
 794              		.cfi_offset 14, -4
 795 0002 00AF     		add	r7, sp, #0
 796              		.cfi_def_cfa_register 7
2087:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 797              		.loc 1 2087 0
 798 0004 034B     		ldr	r3, .L39
 799 0006 1B68     		ldr	r3, [r3]
 800 0008 0222     		movs	r2, #2
 801 000a 1340     		ands	r3, r2
2088:Generated_Source\PSoC4/CyLib.c ****     }
 802              		.loc 1 2088 0
 803 000c 1800     		movs	r0, r3
 804 000e BD46     		mov	sp, r7
 805              		@ sp needed
 806 0010 80BD     		pop	{r7, pc}
 807              	.L40:
 808 0012 C046     		.align	2
 809              	.L39:
 810 0014 04000B40 		.word	1074462724
 811              		.cfi_endproc
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 52


 812              	.LFE8:
 813              		.size	CySysLvdGetInterruptSource, .-CySysLvdGetInterruptSource
 814              		.section	.text.CySysLvdClearInterrupt,"ax",%progbits
 815              		.align	2
 816              		.global	CySysLvdClearInterrupt
 817              		.code	16
 818              		.thumb_func
 819              		.type	CySysLvdClearInterrupt, %function
 820              	CySysLvdClearInterrupt:
 821              	.LFB9:
2089:Generated_Source\PSoC4/CyLib.c **** 
2090:Generated_Source\PSoC4/CyLib.c **** 
2091:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2092:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2093:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
2094:Generated_Source\PSoC4/CyLib.c ****     *
2095:Generated_Source\PSoC4/CyLib.c ****     * Summary:
2096:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2097:Generated_Source\PSoC4/CyLib.c ****     *
2098:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
2099:Generated_Source\PSoC4/CyLib.c ****     *  None
2100:Generated_Source\PSoC4/CyLib.c ****     *
2101:Generated_Source\PSoC4/CyLib.c ****     * Return:
2102:Generated_Source\PSoC4/CyLib.c ****     *  None
2103:Generated_Source\PSoC4/CyLib.c ****     *
2104:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2105:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2106:Generated_Source\PSoC4/CyLib.c ****     {
 822              		.loc 1 2106 0
 823              		.cfi_startproc
 824              		@ args = 0, pretend = 0, frame = 0
 825              		@ frame_needed = 1, uses_anonymous_args = 0
 826 0000 80B5     		push	{r7, lr}
 827              		.cfi_def_cfa_offset 8
 828              		.cfi_offset 7, -8
 829              		.cfi_offset 14, -4
 830 0002 00AF     		add	r7, sp, #0
 831              		.cfi_def_cfa_register 7
2107:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 832              		.loc 1 2107 0
 833 0004 024B     		ldr	r3, .L42
 834 0006 0222     		movs	r2, #2
 835 0008 1A60     		str	r2, [r3]
2108:Generated_Source\PSoC4/CyLib.c ****     }
 836              		.loc 1 2108 0
 837 000a C046     		nop
 838 000c BD46     		mov	sp, r7
 839              		@ sp needed
 840 000e 80BD     		pop	{r7, pc}
 841              	.L43:
 842              		.align	2
 843              	.L42:
 844 0010 04000B40 		.word	1074462724
 845              		.cfi_endproc
 846              	.LFE9:
 847              		.size	CySysLvdClearInterrupt, .-CySysLvdClearInterrupt
 848              		.section	.text.CySysGetResetReason,"ax",%progbits
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 53


 849              		.align	2
 850              		.global	CySysGetResetReason
 851              		.code	16
 852              		.thumb_func
 853              		.type	CySysGetResetReason, %function
 854              	CySysGetResetReason:
 855              	.LFB10:
2109:Generated_Source\PSoC4/CyLib.c **** 
2110:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2111:Generated_Source\PSoC4/CyLib.c **** 
2112:Generated_Source\PSoC4/CyLib.c **** 
2113:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2114:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2115:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2116:Generated_Source\PSoC4/CyLib.c **** *
2117:Generated_Source\PSoC4/CyLib.c **** * Summary:
2118:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2119:Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2120:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2121:Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2122:Generated_Source\PSoC4/CyLib.c **** *
2123:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2124:Generated_Source\PSoC4/CyLib.c **** *  reason: bits in the RES_CAUSE register to clear.
2125:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2126:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2127:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2128:Generated_Source\PSoC4/CyLib.c **** *
2129:Generated_Source\PSoC4/CyLib.c **** * Return:
2130:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2131:Generated_Source\PSoC4/CyLib.c **** *
2132:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2133:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2134:Generated_Source\PSoC4/CyLib.c **** {
 856              		.loc 1 2134 0
 857              		.cfi_startproc
 858              		@ args = 0, pretend = 0, frame = 16
 859              		@ frame_needed = 1, uses_anonymous_args = 0
 860 0000 80B5     		push	{r7, lr}
 861              		.cfi_def_cfa_offset 8
 862              		.cfi_offset 7, -8
 863              		.cfi_offset 14, -4
 864 0002 84B0     		sub	sp, sp, #16
 865              		.cfi_def_cfa_offset 24
 866 0004 00AF     		add	r7, sp, #0
 867              		.cfi_def_cfa_register 7
 868 0006 7860     		str	r0, [r7, #4]
2135:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2136:Generated_Source\PSoC4/CyLib.c **** 
2137:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 869              		.loc 1 2137 0
 870 0008 7B68     		ldr	r3, [r7, #4]
 871 000a 1922     		movs	r2, #25
 872 000c 1340     		ands	r3, r2
 873 000e 7B60     		str	r3, [r7, #4]
2138:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 874              		.loc 1 2138 0
 875 0010 064B     		ldr	r3, .L46
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 54


 876 0012 1B68     		ldr	r3, [r3]
 877 0014 1922     		movs	r2, #25
 878 0016 1340     		ands	r3, r2
 879 0018 FB60     		str	r3, [r7, #12]
2139:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2140:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
 880              		.loc 1 2140 0
 881 001a 044B     		ldr	r3, .L46
 882 001c 7A68     		ldr	r2, [r7, #4]
 883 001e 1A60     		str	r2, [r3]
2141:Generated_Source\PSoC4/CyLib.c **** 
2142:Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
 884              		.loc 1 2142 0
 885 0020 FB68     		ldr	r3, [r7, #12]
2143:Generated_Source\PSoC4/CyLib.c **** }
 886              		.loc 1 2143 0
 887 0022 1800     		movs	r0, r3
 888 0024 BD46     		mov	sp, r7
 889 0026 04B0     		add	sp, sp, #16
 890              		@ sp needed
 891 0028 80BD     		pop	{r7, pc}
 892              	.L47:
 893 002a C046     		.align	2
 894              	.L46:
 895 002c 00030B40 		.word	1074463488
 896              		.cfi_endproc
 897              	.LFE10:
 898              		.size	CySysGetResetReason, .-CySysGetResetReason
 899              		.section	.text.CyDisableInts,"ax",%progbits
 900              		.align	2
 901              		.global	CyDisableInts
 902              		.code	16
 903              		.thumb_func
 904              		.type	CyDisableInts, %function
 905              	CyDisableInts:
 906              	.LFB11:
2144:Generated_Source\PSoC4/CyLib.c **** 
2145:Generated_Source\PSoC4/CyLib.c **** 
2146:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2147:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2148:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2149:Generated_Source\PSoC4/CyLib.c **** *
2150:Generated_Source\PSoC4/CyLib.c **** * Summary:
2151:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2152:Generated_Source\PSoC4/CyLib.c **** *
2153:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2154:Generated_Source\PSoC4/CyLib.c **** *  None
2155:Generated_Source\PSoC4/CyLib.c **** *
2156:Generated_Source\PSoC4/CyLib.c **** * Return:
2157:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2158:Generated_Source\PSoC4/CyLib.c **** *
2159:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2160:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2161:Generated_Source\PSoC4/CyLib.c **** {
 907              		.loc 1 2161 0
 908              		.cfi_startproc
 909              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 55


 910              		@ frame_needed = 1, uses_anonymous_args = 0
 911 0000 80B5     		push	{r7, lr}
 912              		.cfi_def_cfa_offset 8
 913              		.cfi_offset 7, -8
 914              		.cfi_offset 14, -4
 915 0002 82B0     		sub	sp, sp, #8
 916              		.cfi_def_cfa_offset 16
 917 0004 00AF     		add	r7, sp, #0
 918              		.cfi_def_cfa_register 7
2162:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2163:Generated_Source\PSoC4/CyLib.c **** 
2164:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2165:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
 919              		.loc 1 2165 0
 920 0006 064B     		ldr	r3, .L50
 921 0008 1B68     		ldr	r3, [r3]
 922 000a 7B60     		str	r3, [r7, #4]
2166:Generated_Source\PSoC4/CyLib.c **** 
2167:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2168:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 923              		.loc 1 2168 0
 924 000c 044B     		ldr	r3, .L50
 925 000e 0122     		movs	r2, #1
 926 0010 5242     		rsbs	r2, r2, #0
 927 0012 1A60     		str	r2, [r3]
2169:Generated_Source\PSoC4/CyLib.c **** 
2170:Generated_Source\PSoC4/CyLib.c ****     return (intState);
 928              		.loc 1 2170 0
 929 0014 7B68     		ldr	r3, [r7, #4]
2171:Generated_Source\PSoC4/CyLib.c **** }
 930              		.loc 1 2171 0
 931 0016 1800     		movs	r0, r3
 932 0018 BD46     		mov	sp, r7
 933 001a 02B0     		add	sp, sp, #8
 934              		@ sp needed
 935 001c 80BD     		pop	{r7, pc}
 936              	.L51:
 937 001e C046     		.align	2
 938              	.L50:
 939 0020 80E100E0 		.word	-536813184
 940              		.cfi_endproc
 941              	.LFE11:
 942              		.size	CyDisableInts, .-CyDisableInts
 943              		.section	.text.CyEnableInts,"ax",%progbits
 944              		.align	2
 945              		.global	CyEnableInts
 946              		.code	16
 947              		.thumb_func
 948              		.type	CyEnableInts, %function
 949              	CyEnableInts:
 950              	.LFB12:
2172:Generated_Source\PSoC4/CyLib.c **** 
2173:Generated_Source\PSoC4/CyLib.c **** 
2174:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2175:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2176:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2177:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 56


2178:Generated_Source\PSoC4/CyLib.c **** * Summary:
2179:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2180:Generated_Source\PSoC4/CyLib.c **** *
2181:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2182:Generated_Source\PSoC4/CyLib.c **** *   mask, 32 bit mask of interrupts to enable.
2183:Generated_Source\PSoC4/CyLib.c **** *
2184:Generated_Source\PSoC4/CyLib.c **** * Return:
2185:Generated_Source\PSoC4/CyLib.c **** *  None
2186:Generated_Source\PSoC4/CyLib.c **** *
2187:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2188:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2189:Generated_Source\PSoC4/CyLib.c **** {
 951              		.loc 1 2189 0
 952              		.cfi_startproc
 953              		@ args = 0, pretend = 0, frame = 8
 954              		@ frame_needed = 1, uses_anonymous_args = 0
 955 0000 80B5     		push	{r7, lr}
 956              		.cfi_def_cfa_offset 8
 957              		.cfi_offset 7, -8
 958              		.cfi_offset 14, -4
 959 0002 82B0     		sub	sp, sp, #8
 960              		.cfi_def_cfa_offset 16
 961 0004 00AF     		add	r7, sp, #0
 962              		.cfi_def_cfa_register 7
 963 0006 7860     		str	r0, [r7, #4]
2190:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 964              		.loc 1 2190 0
 965 0008 034B     		ldr	r3, .L53
 966 000a 7A68     		ldr	r2, [r7, #4]
 967 000c 1A60     		str	r2, [r3]
2191:Generated_Source\PSoC4/CyLib.c **** }
 968              		.loc 1 2191 0
 969 000e C046     		nop
 970 0010 BD46     		mov	sp, r7
 971 0012 02B0     		add	sp, sp, #8
 972              		@ sp needed
 973 0014 80BD     		pop	{r7, pc}
 974              	.L54:
 975 0016 C046     		.align	2
 976              	.L53:
 977 0018 00E100E0 		.word	-536813312
 978              		.cfi_endproc
 979              	.LFE12:
 980              		.size	CyEnableInts, .-CyEnableInts
 981              		.section	.text.CyIntSetSysVector,"ax",%progbits
 982              		.align	2
 983              		.global	CyIntSetSysVector
 984              		.code	16
 985              		.thumb_func
 986              		.type	CyIntSetSysVector, %function
 987              	CyIntSetSysVector:
 988              	.LFB13:
2192:Generated_Source\PSoC4/CyLib.c **** 
2193:Generated_Source\PSoC4/CyLib.c **** 
2194:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2195:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2196:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 57


2197:Generated_Source\PSoC4/CyLib.c **** *
2198:Generated_Source\PSoC4/CyLib.c **** * Summary:
2199:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2200:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2201:Generated_Source\PSoC4/CyLib.c **** *
2202:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2203:Generated_Source\PSoC4/CyLib.c **** *  number: System interrupt number:
2204:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2205:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2206:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2207:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2208:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2209:Generated_Source\PSoC4/CyLib.c **** *
2210:Generated_Source\PSoC4/CyLib.c **** *  address: Pointer to an interrupt service routine.
2211:Generated_Source\PSoC4/CyLib.c **** *
2212:Generated_Source\PSoC4/CyLib.c **** * Return:
2213:Generated_Source\PSoC4/CyLib.c **** *  The old ISR vector at this location.
2214:Generated_Source\PSoC4/CyLib.c **** *
2215:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2216:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2217:Generated_Source\PSoC4/CyLib.c **** {
 989              		.loc 1 2217 0
 990              		.cfi_startproc
 991              		@ args = 0, pretend = 0, frame = 16
 992              		@ frame_needed = 1, uses_anonymous_args = 0
 993 0000 80B5     		push	{r7, lr}
 994              		.cfi_def_cfa_offset 8
 995              		.cfi_offset 7, -8
 996              		.cfi_offset 14, -4
 997 0002 84B0     		sub	sp, sp, #16
 998              		.cfi_def_cfa_offset 24
 999 0004 00AF     		add	r7, sp, #0
 1000              		.cfi_def_cfa_register 7
 1001 0006 0200     		movs	r2, r0
 1002 0008 3960     		str	r1, [r7]
 1003 000a FB1D     		adds	r3, r7, #7
 1004 000c 1A70     		strb	r2, [r3]
2218:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2219:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1005              		.loc 1 2219 0
 1006 000e 8023     		movs	r3, #128
 1007 0010 9B05     		lsls	r3, r3, #22
 1008 0012 FB60     		str	r3, [r7, #12]
2220:Generated_Source\PSoC4/CyLib.c **** 
2221:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
 1009              		.loc 1 2221 0
 1010 0014 FB1D     		adds	r3, r7, #7
 1011 0016 1B78     		ldrb	r3, [r3]
 1012 0018 0F2B     		cmp	r3, #15
 1013 001a 02D9     		bls	.L56
 1014              		.loc 1 2221 0 is_stmt 0 discriminator 1
 1015 001c 0020     		movs	r0, #0
 1016 001e FFF7FEFF 		bl	CyHalt
 1017              	.L56:
2222:Generated_Source\PSoC4/CyLib.c **** 
2223:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2224:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 58


 1018              		.loc 1 2224 0 is_stmt 1
 1019 0022 FB1D     		adds	r3, r7, #7
 1020 0024 1B78     		ldrb	r3, [r3]
 1021 0026 9B00     		lsls	r3, r3, #2
 1022 0028 FA68     		ldr	r2, [r7, #12]
 1023 002a D318     		adds	r3, r2, r3
 1024 002c 1B68     		ldr	r3, [r3]
 1025 002e BB60     		str	r3, [r7, #8]
2225:Generated_Source\PSoC4/CyLib.c **** 
2226:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2227:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
 1026              		.loc 1 2227 0
 1027 0030 FB1D     		adds	r3, r7, #7
 1028 0032 1B78     		ldrb	r3, [r3]
 1029 0034 9B00     		lsls	r3, r3, #2
 1030 0036 FA68     		ldr	r2, [r7, #12]
 1031 0038 D318     		adds	r3, r2, r3
 1032 003a 3A68     		ldr	r2, [r7]
 1033 003c 1A60     		str	r2, [r3]
2228:Generated_Source\PSoC4/CyLib.c **** 
2229:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
 1034              		.loc 1 2229 0
 1035 003e BB68     		ldr	r3, [r7, #8]
2230:Generated_Source\PSoC4/CyLib.c **** }
 1036              		.loc 1 2230 0
 1037 0040 1800     		movs	r0, r3
 1038 0042 BD46     		mov	sp, r7
 1039 0044 04B0     		add	sp, sp, #16
 1040              		@ sp needed
 1041 0046 80BD     		pop	{r7, pc}
 1042              		.cfi_endproc
 1043              	.LFE13:
 1044              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 1045              		.section	.text.CyIntGetSysVector,"ax",%progbits
 1046              		.align	2
 1047              		.global	CyIntGetSysVector
 1048              		.code	16
 1049              		.thumb_func
 1050              		.type	CyIntGetSysVector, %function
 1051              	CyIntGetSysVector:
 1052              	.LFB14:
2231:Generated_Source\PSoC4/CyLib.c **** 
2232:Generated_Source\PSoC4/CyLib.c **** 
2233:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2234:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2235:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2236:Generated_Source\PSoC4/CyLib.c **** *
2237:Generated_Source\PSoC4/CyLib.c **** * Summary:
2238:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2239:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2240:Generated_Source\PSoC4/CyLib.c **** *
2241:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2242:Generated_Source\PSoC4/CyLib.c **** *  number: System interrupt number:
2243:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2244:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2245:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2246:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 59


2247:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2248:Generated_Source\PSoC4/CyLib.c **** *
2249:Generated_Source\PSoC4/CyLib.c **** * Return:
2250:Generated_Source\PSoC4/CyLib.c **** *   Address of the ISR in the interrupt vector table.
2251:Generated_Source\PSoC4/CyLib.c **** *
2252:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2253:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2254:Generated_Source\PSoC4/CyLib.c **** {
 1053              		.loc 1 2254 0
 1054              		.cfi_startproc
 1055              		@ args = 0, pretend = 0, frame = 16
 1056              		@ frame_needed = 1, uses_anonymous_args = 0
 1057 0000 80B5     		push	{r7, lr}
 1058              		.cfi_def_cfa_offset 8
 1059              		.cfi_offset 7, -8
 1060              		.cfi_offset 14, -4
 1061 0002 84B0     		sub	sp, sp, #16
 1062              		.cfi_def_cfa_offset 24
 1063 0004 00AF     		add	r7, sp, #0
 1064              		.cfi_def_cfa_register 7
 1065 0006 0200     		movs	r2, r0
 1066 0008 FB1D     		adds	r3, r7, #7
 1067 000a 1A70     		strb	r2, [r3]
2255:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1068              		.loc 1 2255 0
 1069 000c 8023     		movs	r3, #128
 1070 000e 9B05     		lsls	r3, r3, #22
 1071 0010 FB60     		str	r3, [r7, #12]
2256:Generated_Source\PSoC4/CyLib.c **** 
2257:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
 1072              		.loc 1 2257 0
 1073 0012 FB1D     		adds	r3, r7, #7
 1074 0014 1B78     		ldrb	r3, [r3]
 1075 0016 0F2B     		cmp	r3, #15
 1076 0018 02D9     		bls	.L59
 1077              		.loc 1 2257 0 is_stmt 0 discriminator 1
 1078 001a 0020     		movs	r0, #0
 1079 001c FFF7FEFF 		bl	CyHalt
 1080              	.L59:
2258:Generated_Source\PSoC4/CyLib.c **** 
2259:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
 1081              		.loc 1 2259 0 is_stmt 1
 1082 0020 FB1D     		adds	r3, r7, #7
 1083 0022 1B78     		ldrb	r3, [r3]
 1084 0024 9B00     		lsls	r3, r3, #2
 1085 0026 FA68     		ldr	r2, [r7, #12]
 1086 0028 D318     		adds	r3, r2, r3
 1087 002a 1B68     		ldr	r3, [r3]
2260:Generated_Source\PSoC4/CyLib.c **** }
 1088              		.loc 1 2260 0
 1089 002c 1800     		movs	r0, r3
 1090 002e BD46     		mov	sp, r7
 1091 0030 04B0     		add	sp, sp, #16
 1092              		@ sp needed
 1093 0032 80BD     		pop	{r7, pc}
 1094              		.cfi_endproc
 1095              	.LFE14:
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 60


 1096              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 1097              		.section	.text.CyIntSetVector,"ax",%progbits
 1098              		.align	2
 1099              		.global	CyIntSetVector
 1100              		.code	16
 1101              		.thumb_func
 1102              		.type	CyIntSetVector, %function
 1103              	CyIntSetVector:
 1104              	.LFB15:
2261:Generated_Source\PSoC4/CyLib.c **** 
2262:Generated_Source\PSoC4/CyLib.c **** 
2263:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2264:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2265:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2266:Generated_Source\PSoC4/CyLib.c **** *
2267:Generated_Source\PSoC4/CyLib.c **** * Summary:
2268:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2269:Generated_Source\PSoC4/CyLib.c **** *
2270:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2271:Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number
2272:Generated_Source\PSoC4/CyLib.c **** *  address: Pointer to an interrupt service routine
2273:Generated_Source\PSoC4/CyLib.c **** *
2274:Generated_Source\PSoC4/CyLib.c **** * Return:
2275:Generated_Source\PSoC4/CyLib.c **** *   Previous interrupt vector value.
2276:Generated_Source\PSoC4/CyLib.c **** *
2277:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2278:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2279:Generated_Source\PSoC4/CyLib.c **** {
 1105              		.loc 1 2279 0
 1106              		.cfi_startproc
 1107              		@ args = 0, pretend = 0, frame = 16
 1108              		@ frame_needed = 1, uses_anonymous_args = 0
 1109 0000 80B5     		push	{r7, lr}
 1110              		.cfi_def_cfa_offset 8
 1111              		.cfi_offset 7, -8
 1112              		.cfi_offset 14, -4
 1113 0002 84B0     		sub	sp, sp, #16
 1114              		.cfi_def_cfa_offset 24
 1115 0004 00AF     		add	r7, sp, #0
 1116              		.cfi_def_cfa_register 7
 1117 0006 0200     		movs	r2, r0
 1118 0008 3960     		str	r1, [r7]
 1119 000a FB1D     		adds	r3, r7, #7
 1120 000c 1A70     		strb	r2, [r3]
2280:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2281:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1121              		.loc 1 2281 0
 1122 000e 8023     		movs	r3, #128
 1123 0010 9B05     		lsls	r3, r3, #22
 1124 0012 FB60     		str	r3, [r7, #12]
2282:Generated_Source\PSoC4/CyLib.c **** 
2283:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1125              		.loc 1 2283 0
 1126 0014 FB1D     		adds	r3, r7, #7
 1127 0016 1B78     		ldrb	r3, [r3]
 1128 0018 1F2B     		cmp	r3, #31
 1129 001a 02D9     		bls	.L62
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 61


 1130              		.loc 1 2283 0 is_stmt 0 discriminator 1
 1131 001c 0020     		movs	r0, #0
 1132 001e FFF7FEFF 		bl	CyHalt
 1133              	.L62:
2284:Generated_Source\PSoC4/CyLib.c **** 
2285:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2286:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
 1134              		.loc 1 2286 0 is_stmt 1
 1135 0022 FB1D     		adds	r3, r7, #7
 1136 0024 1B78     		ldrb	r3, [r3]
 1137 0026 1033     		adds	r3, r3, #16
 1138 0028 9B00     		lsls	r3, r3, #2
 1139 002a FA68     		ldr	r2, [r7, #12]
 1140 002c D318     		adds	r3, r2, r3
 1141 002e 1B68     		ldr	r3, [r3]
 1142 0030 BB60     		str	r3, [r7, #8]
2287:Generated_Source\PSoC4/CyLib.c **** 
2288:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2289:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
 1143              		.loc 1 2289 0
 1144 0032 FB1D     		adds	r3, r7, #7
 1145 0034 1B78     		ldrb	r3, [r3]
 1146 0036 1033     		adds	r3, r3, #16
 1147 0038 9B00     		lsls	r3, r3, #2
 1148 003a FA68     		ldr	r2, [r7, #12]
 1149 003c D318     		adds	r3, r2, r3
 1150 003e 3A68     		ldr	r2, [r7]
 1151 0040 1A60     		str	r2, [r3]
2290:Generated_Source\PSoC4/CyLib.c **** 
2291:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
 1152              		.loc 1 2291 0
 1153 0042 BB68     		ldr	r3, [r7, #8]
2292:Generated_Source\PSoC4/CyLib.c **** }
 1154              		.loc 1 2292 0
 1155 0044 1800     		movs	r0, r3
 1156 0046 BD46     		mov	sp, r7
 1157 0048 04B0     		add	sp, sp, #16
 1158              		@ sp needed
 1159 004a 80BD     		pop	{r7, pc}
 1160              		.cfi_endproc
 1161              	.LFE15:
 1162              		.size	CyIntSetVector, .-CyIntSetVector
 1163              		.section	.text.CyIntGetVector,"ax",%progbits
 1164              		.align	2
 1165              		.global	CyIntGetVector
 1166              		.code	16
 1167              		.thumb_func
 1168              		.type	CyIntGetVector, %function
 1169              	CyIntGetVector:
 1170              	.LFB16:
2293:Generated_Source\PSoC4/CyLib.c **** 
2294:Generated_Source\PSoC4/CyLib.c **** 
2295:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2296:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2297:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2298:Generated_Source\PSoC4/CyLib.c **** *
2299:Generated_Source\PSoC4/CyLib.c **** * Summary:
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 62


2300:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2301:Generated_Source\PSoC4/CyLib.c **** *
2302:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2303:Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number
2304:Generated_Source\PSoC4/CyLib.c **** *
2305:Generated_Source\PSoC4/CyLib.c **** * Return:
2306:Generated_Source\PSoC4/CyLib.c **** *  Address of the ISR in the interrupt vector table.
2307:Generated_Source\PSoC4/CyLib.c **** *
2308:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2309:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2310:Generated_Source\PSoC4/CyLib.c **** {
 1171              		.loc 1 2310 0
 1172              		.cfi_startproc
 1173              		@ args = 0, pretend = 0, frame = 16
 1174              		@ frame_needed = 1, uses_anonymous_args = 0
 1175 0000 80B5     		push	{r7, lr}
 1176              		.cfi_def_cfa_offset 8
 1177              		.cfi_offset 7, -8
 1178              		.cfi_offset 14, -4
 1179 0002 84B0     		sub	sp, sp, #16
 1180              		.cfi_def_cfa_offset 24
 1181 0004 00AF     		add	r7, sp, #0
 1182              		.cfi_def_cfa_register 7
 1183 0006 0200     		movs	r2, r0
 1184 0008 FB1D     		adds	r3, r7, #7
 1185 000a 1A70     		strb	r2, [r3]
2311:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1186              		.loc 1 2311 0
 1187 000c 8023     		movs	r3, #128
 1188 000e 9B05     		lsls	r3, r3, #22
 1189 0010 FB60     		str	r3, [r7, #12]
2312:Generated_Source\PSoC4/CyLib.c **** 
2313:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1190              		.loc 1 2313 0
 1191 0012 FB1D     		adds	r3, r7, #7
 1192 0014 1B78     		ldrb	r3, [r3]
 1193 0016 1F2B     		cmp	r3, #31
 1194 0018 02D9     		bls	.L65
 1195              		.loc 1 2313 0 is_stmt 0 discriminator 1
 1196 001a 0020     		movs	r0, #0
 1197 001c FFF7FEFF 		bl	CyHalt
 1198              	.L65:
2314:Generated_Source\PSoC4/CyLib.c **** 
2315:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
 1199              		.loc 1 2315 0 is_stmt 1
 1200 0020 FB1D     		adds	r3, r7, #7
 1201 0022 1B78     		ldrb	r3, [r3]
 1202 0024 1033     		adds	r3, r3, #16
 1203 0026 9B00     		lsls	r3, r3, #2
 1204 0028 FA68     		ldr	r2, [r7, #12]
 1205 002a D318     		adds	r3, r2, r3
 1206 002c 1B68     		ldr	r3, [r3]
2316:Generated_Source\PSoC4/CyLib.c **** }
 1207              		.loc 1 2316 0
 1208 002e 1800     		movs	r0, r3
 1209 0030 BD46     		mov	sp, r7
 1210 0032 04B0     		add	sp, sp, #16
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 63


 1211              		@ sp needed
 1212 0034 80BD     		pop	{r7, pc}
 1213              		.cfi_endproc
 1214              	.LFE16:
 1215              		.size	CyIntGetVector, .-CyIntGetVector
 1216 0036 C046     		.section	.text.CyIntSetPriority,"ax",%progbits
 1217              		.align	2
 1218              		.global	CyIntSetPriority
 1219              		.code	16
 1220              		.thumb_func
 1221              		.type	CyIntSetPriority, %function
 1222              	CyIntSetPriority:
 1223              	.LFB17:
2317:Generated_Source\PSoC4/CyLib.c **** 
2318:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2319:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2320:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2321:Generated_Source\PSoC4/CyLib.c **** *
2322:Generated_Source\PSoC4/CyLib.c **** * Summary:
2323:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2324:Generated_Source\PSoC4/CyLib.c **** *
2325:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2326:Generated_Source\PSoC4/CyLib.c **** *  priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2327:Generated_Source\PSoC4/CyLib.c **** *  number: The number of the interrupt, 0 - 31.
2328:Generated_Source\PSoC4/CyLib.c **** *
2329:Generated_Source\PSoC4/CyLib.c **** * Return:
2330:Generated_Source\PSoC4/CyLib.c **** *  None
2331:Generated_Source\PSoC4/CyLib.c **** *
2332:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2333:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2334:Generated_Source\PSoC4/CyLib.c **** {
 1224              		.loc 1 2334 0
 1225              		.cfi_startproc
 1226              		@ args = 0, pretend = 0, frame = 24
 1227              		@ frame_needed = 1, uses_anonymous_args = 0
 1228 0000 90B5     		push	{r4, r7, lr}
 1229              		.cfi_def_cfa_offset 12
 1230              		.cfi_offset 4, -12
 1231              		.cfi_offset 7, -8
 1232              		.cfi_offset 14, -4
 1233 0002 87B0     		sub	sp, sp, #28
 1234              		.cfi_def_cfa_offset 40
 1235 0004 00AF     		add	r7, sp, #0
 1236              		.cfi_def_cfa_register 7
 1237 0006 0200     		movs	r2, r0
 1238 0008 FB1D     		adds	r3, r7, #7
 1239 000a 1A70     		strb	r2, [r3]
 1240 000c BB1D     		adds	r3, r7, #6
 1241 000e 0A1C     		adds	r2, r1, #0
 1242 0010 1A70     		strb	r2, [r3]
2335:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2336:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2337:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2338:Generated_Source\PSoC4/CyLib.c **** 
2339:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
 1243              		.loc 1 2339 0
 1244 0012 BB1D     		adds	r3, r7, #6
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 64


 1245 0014 1B78     		ldrb	r3, [r3]
 1246 0016 032B     		cmp	r3, #3
 1247 0018 02D9     		bls	.L68
 1248              		.loc 1 2339 0 is_stmt 0 discriminator 1
 1249 001a 0020     		movs	r0, #0
 1250 001c FFF7FEFF 		bl	CyHalt
 1251              	.L68:
2340:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1252              		.loc 1 2340 0 is_stmt 1
 1253 0020 FB1D     		adds	r3, r7, #7
 1254 0022 1B78     		ldrb	r3, [r3]
 1255 0024 1F2B     		cmp	r3, #31
 1256 0026 02D9     		bls	.L69
 1257              		.loc 1 2340 0 is_stmt 0 discriminator 1
 1258 0028 0020     		movs	r0, #0
 1259 002a FFF7FEFF 		bl	CyHalt
 1260              	.L69:
2341:Generated_Source\PSoC4/CyLib.c **** 
2342:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
 1261              		.loc 1 2342 0 is_stmt 1
 1262 002e FB1D     		adds	r3, r7, #7
 1263 0030 1B78     		ldrb	r3, [r3]
 1264 0032 0322     		movs	r2, #3
 1265 0034 1340     		ands	r3, r2
 1266 0036 DB00     		lsls	r3, r3, #3
 1267 0038 0633     		adds	r3, r3, #6
 1268 003a 7B61     		str	r3, [r7, #20]
2343:Generated_Source\PSoC4/CyLib.c **** 
2344:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 1269              		.loc 1 2344 0
 1270 003c 1323     		movs	r3, #19
 1271 003e FC18     		adds	r4, r7, r3
 1272 0040 FFF7FEFF 		bl	CyEnterCriticalSection
 1273 0044 0300     		movs	r3, r0
 1274 0046 2370     		strb	r3, [r4]
2345:Generated_Source\PSoC4/CyLib.c **** 
2346:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
 1275              		.loc 1 2346 0
 1276 0048 FB1D     		adds	r3, r7, #7
 1277 004a 1B78     		ldrb	r3, [r3]
 1278 004c 9B08     		lsrs	r3, r3, #2
 1279 004e DBB2     		uxtb	r3, r3
 1280 0050 9B00     		lsls	r3, r3, #2
 1281 0052 144A     		ldr	r2, .L70
 1282 0054 9446     		mov	ip, r2
 1283 0056 6344     		add	r3, r3, ip
 1284 0058 1B68     		ldr	r3, [r3]
 1285 005a FB60     		str	r3, [r7, #12]
2347:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 1286              		.loc 1 2347 0
 1287 005c 0322     		movs	r2, #3
 1288 005e 7B69     		ldr	r3, [r7, #20]
 1289 0060 9A40     		lsls	r2, r2, r3
 1290 0062 1300     		movs	r3, r2
 1291 0064 DA43     		mvns	r2, r3
 1292 0066 FB68     		ldr	r3, [r7, #12]
 1293 0068 1340     		ands	r3, r2
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 65


 1294 006a FB60     		str	r3, [r7, #12]
2348:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 1295              		.loc 1 2348 0
 1296 006c BB1D     		adds	r3, r7, #6
 1297 006e 1A78     		ldrb	r2, [r3]
 1298 0070 7B69     		ldr	r3, [r7, #20]
 1299 0072 9A40     		lsls	r2, r2, r3
 1300 0074 1300     		movs	r3, r2
 1301 0076 FA68     		ldr	r2, [r7, #12]
 1302 0078 1343     		orrs	r3, r2
 1303 007a FB60     		str	r3, [r7, #12]
2349:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 1304              		.loc 1 2349 0
 1305 007c FB1D     		adds	r3, r7, #7
 1306 007e 1B78     		ldrb	r3, [r3]
 1307 0080 9B08     		lsrs	r3, r3, #2
 1308 0082 DBB2     		uxtb	r3, r3
 1309 0084 9B00     		lsls	r3, r3, #2
 1310 0086 074A     		ldr	r2, .L70
 1311 0088 9446     		mov	ip, r2
 1312 008a 6344     		add	r3, r3, ip
 1313 008c FA68     		ldr	r2, [r7, #12]
 1314 008e 1A60     		str	r2, [r3]
2350:Generated_Source\PSoC4/CyLib.c **** 
2351:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 1315              		.loc 1 2351 0
 1316 0090 1323     		movs	r3, #19
 1317 0092 FB18     		adds	r3, r7, r3
 1318 0094 1B78     		ldrb	r3, [r3]
 1319 0096 1800     		movs	r0, r3
 1320 0098 FFF7FEFF 		bl	CyExitCriticalSection
2352:Generated_Source\PSoC4/CyLib.c **** }
 1321              		.loc 1 2352 0
 1322 009c C046     		nop
 1323 009e BD46     		mov	sp, r7
 1324 00a0 07B0     		add	sp, sp, #28
 1325              		@ sp needed
 1326 00a2 90BD     		pop	{r4, r7, pc}
 1327              	.L71:
 1328              		.align	2
 1329              	.L70:
 1330 00a4 00E400E0 		.word	-536812544
 1331              		.cfi_endproc
 1332              	.LFE17:
 1333              		.size	CyIntSetPriority, .-CyIntSetPriority
 1334              		.section	.text.CyIntGetPriority,"ax",%progbits
 1335              		.align	2
 1336              		.global	CyIntGetPriority
 1337              		.code	16
 1338              		.thumb_func
 1339              		.type	CyIntGetPriority, %function
 1340              	CyIntGetPriority:
 1341              	.LFB18:
2353:Generated_Source\PSoC4/CyLib.c **** 
2354:Generated_Source\PSoC4/CyLib.c **** 
2355:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2356:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 66


2357:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2358:Generated_Source\PSoC4/CyLib.c **** *
2359:Generated_Source\PSoC4/CyLib.c **** * Summary:
2360:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2361:Generated_Source\PSoC4/CyLib.c **** *
2362:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2363:Generated_Source\PSoC4/CyLib.c **** *  number: The number of the interrupt, 0 - 31.
2364:Generated_Source\PSoC4/CyLib.c **** *
2365:Generated_Source\PSoC4/CyLib.c **** * Return:
2366:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2367:Generated_Source\PSoC4/CyLib.c **** *
2368:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2369:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2370:Generated_Source\PSoC4/CyLib.c **** {
 1342              		.loc 1 2370 0
 1343              		.cfi_startproc
 1344              		@ args = 0, pretend = 0, frame = 16
 1345              		@ frame_needed = 1, uses_anonymous_args = 0
 1346 0000 80B5     		push	{r7, lr}
 1347              		.cfi_def_cfa_offset 8
 1348              		.cfi_offset 7, -8
 1349              		.cfi_offset 14, -4
 1350 0002 84B0     		sub	sp, sp, #16
 1351              		.cfi_def_cfa_offset 24
 1352 0004 00AF     		add	r7, sp, #0
 1353              		.cfi_def_cfa_register 7
 1354 0006 0200     		movs	r2, r0
 1355 0008 FB1D     		adds	r3, r7, #7
 1356 000a 1A70     		strb	r2, [r3]
2371:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2372:Generated_Source\PSoC4/CyLib.c **** 
2373:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1357              		.loc 1 2373 0
 1358 000c FB1D     		adds	r3, r7, #7
 1359 000e 1B78     		ldrb	r3, [r3]
 1360 0010 1F2B     		cmp	r3, #31
 1361 0012 02D9     		bls	.L73
 1362              		.loc 1 2373 0 is_stmt 0 discriminator 1
 1363 0014 0020     		movs	r0, #0
 1364 0016 FFF7FEFF 		bl	CyHalt
 1365              	.L73:
2374:Generated_Source\PSoC4/CyLib.c **** 
2375:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
 1366              		.loc 1 2375 0 is_stmt 1
 1367 001a FB1D     		adds	r3, r7, #7
 1368 001c 1B78     		ldrb	r3, [r3]
 1369 001e 9B08     		lsrs	r3, r3, #2
 1370 0020 DBB2     		uxtb	r3, r3
 1371 0022 9B00     		lsls	r3, r3, #2
 1372 0024 0B4A     		ldr	r2, .L75
 1373 0026 9446     		mov	ip, r2
 1374 0028 6344     		add	r3, r3, ip
 1375 002a 1A68     		ldr	r2, [r3]
 1376 002c FB1D     		adds	r3, r7, #7
 1377 002e 1B78     		ldrb	r3, [r3]
 1378 0030 0321     		movs	r1, #3
 1379 0032 0B40     		ands	r3, r1
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 67


 1380 0034 DB00     		lsls	r3, r3, #3
 1381 0036 0633     		adds	r3, r3, #6
 1382 0038 DA40     		lsrs	r2, r2, r3
 1383 003a 0F23     		movs	r3, #15
 1384 003c FB18     		adds	r3, r7, r3
 1385 003e 1A70     		strb	r2, [r3]
2376:Generated_Source\PSoC4/CyLib.c **** 
2377:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
 1386              		.loc 1 2377 0
 1387 0040 0F23     		movs	r3, #15
 1388 0042 FB18     		adds	r3, r7, r3
 1389 0044 1B78     		ldrb	r3, [r3]
 1390 0046 0322     		movs	r2, #3
 1391 0048 1340     		ands	r3, r2
 1392 004a DBB2     		uxtb	r3, r3
2378:Generated_Source\PSoC4/CyLib.c **** }
 1393              		.loc 1 2378 0
 1394 004c 1800     		movs	r0, r3
 1395 004e BD46     		mov	sp, r7
 1396 0050 04B0     		add	sp, sp, #16
 1397              		@ sp needed
 1398 0052 80BD     		pop	{r7, pc}
 1399              	.L76:
 1400              		.align	2
 1401              	.L75:
 1402 0054 00E400E0 		.word	-536812544
 1403              		.cfi_endproc
 1404              	.LFE18:
 1405              		.size	CyIntGetPriority, .-CyIntGetPriority
 1406              		.section	.text.CyIntEnable,"ax",%progbits
 1407              		.align	2
 1408              		.global	CyIntEnable
 1409              		.code	16
 1410              		.thumb_func
 1411              		.type	CyIntEnable, %function
 1412              	CyIntEnable:
 1413              	.LFB19:
2379:Generated_Source\PSoC4/CyLib.c **** 
2380:Generated_Source\PSoC4/CyLib.c **** 
2381:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2382:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2383:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2384:Generated_Source\PSoC4/CyLib.c **** *
2385:Generated_Source\PSoC4/CyLib.c **** * Summary:
2386:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2387:Generated_Source\PSoC4/CyLib.c **** *
2388:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2389:Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number
2390:Generated_Source\PSoC4/CyLib.c **** *
2391:Generated_Source\PSoC4/CyLib.c **** * Return:
2392:Generated_Source\PSoC4/CyLib.c **** *  None
2393:Generated_Source\PSoC4/CyLib.c **** *
2394:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2395:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2396:Generated_Source\PSoC4/CyLib.c **** {
 1414              		.loc 1 2396 0
 1415              		.cfi_startproc
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 68


 1416              		@ args = 0, pretend = 0, frame = 8
 1417              		@ frame_needed = 1, uses_anonymous_args = 0
 1418 0000 80B5     		push	{r7, lr}
 1419              		.cfi_def_cfa_offset 8
 1420              		.cfi_offset 7, -8
 1421              		.cfi_offset 14, -4
 1422 0002 82B0     		sub	sp, sp, #8
 1423              		.cfi_def_cfa_offset 16
 1424 0004 00AF     		add	r7, sp, #0
 1425              		.cfi_def_cfa_register 7
 1426 0006 0200     		movs	r2, r0
 1427 0008 FB1D     		adds	r3, r7, #7
 1428 000a 1A70     		strb	r2, [r3]
2397:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1429              		.loc 1 2397 0
 1430 000c 064B     		ldr	r3, .L78
 1431 000e FA1D     		adds	r2, r7, #7
 1432 0010 1278     		ldrb	r2, [r2]
 1433 0012 1F21     		movs	r1, #31
 1434 0014 0A40     		ands	r2, r1
 1435 0016 0121     		movs	r1, #1
 1436 0018 9140     		lsls	r1, r1, r2
 1437 001a 0A00     		movs	r2, r1
 1438 001c 1A60     		str	r2, [r3]
2398:Generated_Source\PSoC4/CyLib.c **** }
 1439              		.loc 1 2398 0
 1440 001e C046     		nop
 1441 0020 BD46     		mov	sp, r7
 1442 0022 02B0     		add	sp, sp, #8
 1443              		@ sp needed
 1444 0024 80BD     		pop	{r7, pc}
 1445              	.L79:
 1446 0026 C046     		.align	2
 1447              	.L78:
 1448 0028 00E100E0 		.word	-536813312
 1449              		.cfi_endproc
 1450              	.LFE19:
 1451              		.size	CyIntEnable, .-CyIntEnable
 1452              		.section	.text.CyIntGetState,"ax",%progbits
 1453              		.align	2
 1454              		.global	CyIntGetState
 1455              		.code	16
 1456              		.thumb_func
 1457              		.type	CyIntGetState, %function
 1458              	CyIntGetState:
 1459              	.LFB20:
2399:Generated_Source\PSoC4/CyLib.c **** 
2400:Generated_Source\PSoC4/CyLib.c **** 
2401:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2402:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2403:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2404:Generated_Source\PSoC4/CyLib.c **** *
2405:Generated_Source\PSoC4/CyLib.c **** * Summary:
2406:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2407:Generated_Source\PSoC4/CyLib.c **** *
2408:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2409:Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number.
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 69


2410:Generated_Source\PSoC4/CyLib.c **** *
2411:Generated_Source\PSoC4/CyLib.c **** * Return:
2412:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2413:Generated_Source\PSoC4/CyLib.c **** *
2414:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2415:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
2416:Generated_Source\PSoC4/CyLib.c **** {
 1460              		.loc 1 2416 0
 1461              		.cfi_startproc
 1462              		@ args = 0, pretend = 0, frame = 8
 1463              		@ frame_needed = 1, uses_anonymous_args = 0
 1464 0000 80B5     		push	{r7, lr}
 1465              		.cfi_def_cfa_offset 8
 1466              		.cfi_offset 7, -8
 1467              		.cfi_offset 14, -4
 1468 0002 82B0     		sub	sp, sp, #8
 1469              		.cfi_def_cfa_offset 16
 1470 0004 00AF     		add	r7, sp, #0
 1471              		.cfi_def_cfa_register 7
 1472 0006 0200     		movs	r2, r0
 1473 0008 FB1D     		adds	r3, r7, #7
 1474 000a 1A70     		strb	r2, [r3]
2417:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
2418:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 1475              		.loc 1 2418 0
 1476 000c 074B     		ldr	r3, .L82
 1477 000e 1A68     		ldr	r2, [r3]
 1478 0010 FB1D     		adds	r3, r7, #7
 1479 0012 1B78     		ldrb	r3, [r3]
 1480 0014 1F21     		movs	r1, #31
 1481 0016 0B40     		ands	r3, r1
 1482 0018 DA40     		lsrs	r2, r2, r3
 1483 001a 1300     		movs	r3, r2
 1484 001c DBB2     		uxtb	r3, r3
 1485 001e 0122     		movs	r2, #1
 1486 0020 1340     		ands	r3, r2
 1487 0022 DBB2     		uxtb	r3, r3
2419:Generated_Source\PSoC4/CyLib.c **** }
 1488              		.loc 1 2419 0
 1489 0024 1800     		movs	r0, r3
 1490 0026 BD46     		mov	sp, r7
 1491 0028 02B0     		add	sp, sp, #8
 1492              		@ sp needed
 1493 002a 80BD     		pop	{r7, pc}
 1494              	.L83:
 1495              		.align	2
 1496              	.L82:
 1497 002c 00E100E0 		.word	-536813312
 1498              		.cfi_endproc
 1499              	.LFE20:
 1500              		.size	CyIntGetState, .-CyIntGetState
 1501              		.section	.text.CyIntDisable,"ax",%progbits
 1502              		.align	2
 1503              		.global	CyIntDisable
 1504              		.code	16
 1505              		.thumb_func
 1506              		.type	CyIntDisable, %function
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 70


 1507              	CyIntDisable:
 1508              	.LFB21:
2420:Generated_Source\PSoC4/CyLib.c **** 
2421:Generated_Source\PSoC4/CyLib.c **** 
2422:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2423:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
2424:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2425:Generated_Source\PSoC4/CyLib.c **** *
2426:Generated_Source\PSoC4/CyLib.c **** * Summary:
2427:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
2428:Generated_Source\PSoC4/CyLib.c **** *
2429:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2430:Generated_Source\PSoC4/CyLib.c **** *   number: Valid range [0-31].  Interrupt number.
2431:Generated_Source\PSoC4/CyLib.c **** *
2432:Generated_Source\PSoC4/CyLib.c **** * Return:
2433:Generated_Source\PSoC4/CyLib.c **** *  None
2434:Generated_Source\PSoC4/CyLib.c **** *
2435:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2436:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
2437:Generated_Source\PSoC4/CyLib.c **** {
 1509              		.loc 1 2437 0
 1510              		.cfi_startproc
 1511              		@ args = 0, pretend = 0, frame = 8
 1512              		@ frame_needed = 1, uses_anonymous_args = 0
 1513 0000 80B5     		push	{r7, lr}
 1514              		.cfi_def_cfa_offset 8
 1515              		.cfi_offset 7, -8
 1516              		.cfi_offset 14, -4
 1517 0002 82B0     		sub	sp, sp, #8
 1518              		.cfi_def_cfa_offset 16
 1519 0004 00AF     		add	r7, sp, #0
 1520              		.cfi_def_cfa_register 7
 1521 0006 0200     		movs	r2, r0
 1522 0008 FB1D     		adds	r3, r7, #7
 1523 000a 1A70     		strb	r2, [r3]
2438:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1524              		.loc 1 2438 0
 1525 000c 064B     		ldr	r3, .L85
 1526 000e FA1D     		adds	r2, r7, #7
 1527 0010 1278     		ldrb	r2, [r2]
 1528 0012 1F21     		movs	r1, #31
 1529 0014 0A40     		ands	r2, r1
 1530 0016 0121     		movs	r1, #1
 1531 0018 9140     		lsls	r1, r1, r2
 1532 001a 0A00     		movs	r2, r1
 1533 001c 1A60     		str	r2, [r3]
2439:Generated_Source\PSoC4/CyLib.c **** }
 1534              		.loc 1 2439 0
 1535 001e C046     		nop
 1536 0020 BD46     		mov	sp, r7
 1537 0022 02B0     		add	sp, sp, #8
 1538              		@ sp needed
 1539 0024 80BD     		pop	{r7, pc}
 1540              	.L86:
 1541 0026 C046     		.align	2
 1542              	.L85:
 1543 0028 80E100E0 		.word	-536813184
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 71


 1544              		.cfi_endproc
 1545              	.LFE21:
 1546              		.size	CyIntDisable, .-CyIntDisable
 1547              		.section	.text.CyIntSetPending,"ax",%progbits
 1548              		.align	2
 1549              		.global	CyIntSetPending
 1550              		.code	16
 1551              		.thumb_func
 1552              		.type	CyIntSetPending, %function
 1553              	CyIntSetPending:
 1554              	.LFB22:
2440:Generated_Source\PSoC4/CyLib.c **** 
2441:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2442:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
2443:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2444:Generated_Source\PSoC4/CyLib.c **** *
2445:Generated_Source\PSoC4/CyLib.c **** * Summary:
2446:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
2447:Generated_Source\PSoC4/CyLib.c **** *
2448:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2449:Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number.
2450:Generated_Source\PSoC4/CyLib.c **** *
2451:Generated_Source\PSoC4/CyLib.c **** * Return:
2452:Generated_Source\PSoC4/CyLib.c **** *  None
2453:Generated_Source\PSoC4/CyLib.c **** *
2454:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2455:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
2456:Generated_Source\PSoC4/CyLib.c **** {
 1555              		.loc 1 2456 0
 1556              		.cfi_startproc
 1557              		@ args = 0, pretend = 0, frame = 8
 1558              		@ frame_needed = 1, uses_anonymous_args = 0
 1559 0000 80B5     		push	{r7, lr}
 1560              		.cfi_def_cfa_offset 8
 1561              		.cfi_offset 7, -8
 1562              		.cfi_offset 14, -4
 1563 0002 82B0     		sub	sp, sp, #8
 1564              		.cfi_def_cfa_offset 16
 1565 0004 00AF     		add	r7, sp, #0
 1566              		.cfi_def_cfa_register 7
 1567 0006 0200     		movs	r2, r0
 1568 0008 FB1D     		adds	r3, r7, #7
 1569 000a 1A70     		strb	r2, [r3]
2457:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1570              		.loc 1 2457 0
 1571 000c 064B     		ldr	r3, .L88
 1572 000e FA1D     		adds	r2, r7, #7
 1573 0010 1278     		ldrb	r2, [r2]
 1574 0012 1F21     		movs	r1, #31
 1575 0014 0A40     		ands	r2, r1
 1576 0016 0121     		movs	r1, #1
 1577 0018 9140     		lsls	r1, r1, r2
 1578 001a 0A00     		movs	r2, r1
 1579 001c 1A60     		str	r2, [r3]
2458:Generated_Source\PSoC4/CyLib.c **** }
 1580              		.loc 1 2458 0
 1581 001e C046     		nop
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 72


 1582 0020 BD46     		mov	sp, r7
 1583 0022 02B0     		add	sp, sp, #8
 1584              		@ sp needed
 1585 0024 80BD     		pop	{r7, pc}
 1586              	.L89:
 1587 0026 C046     		.align	2
 1588              	.L88:
 1589 0028 00E200E0 		.word	-536813056
 1590              		.cfi_endproc
 1591              	.LFE22:
 1592              		.size	CyIntSetPending, .-CyIntSetPending
 1593              		.section	.text.CyIntClearPending,"ax",%progbits
 1594              		.align	2
 1595              		.global	CyIntClearPending
 1596              		.code	16
 1597              		.thumb_func
 1598              		.type	CyIntClearPending, %function
 1599              	CyIntClearPending:
 1600              	.LFB23:
2459:Generated_Source\PSoC4/CyLib.c **** 
2460:Generated_Source\PSoC4/CyLib.c **** 
2461:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2462:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
2463:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2464:Generated_Source\PSoC4/CyLib.c **** *
2465:Generated_Source\PSoC4/CyLib.c **** * Summary:
2466:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
2467:Generated_Source\PSoC4/CyLib.c **** *
2468:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2469:Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number.
2470:Generated_Source\PSoC4/CyLib.c **** *
2471:Generated_Source\PSoC4/CyLib.c **** * Return:
2472:Generated_Source\PSoC4/CyLib.c **** *  None
2473:Generated_Source\PSoC4/CyLib.c **** *
2474:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2475:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
2476:Generated_Source\PSoC4/CyLib.c **** {
 1601              		.loc 1 2476 0
 1602              		.cfi_startproc
 1603              		@ args = 0, pretend = 0, frame = 8
 1604              		@ frame_needed = 1, uses_anonymous_args = 0
 1605 0000 80B5     		push	{r7, lr}
 1606              		.cfi_def_cfa_offset 8
 1607              		.cfi_offset 7, -8
 1608              		.cfi_offset 14, -4
 1609 0002 82B0     		sub	sp, sp, #8
 1610              		.cfi_def_cfa_offset 16
 1611 0004 00AF     		add	r7, sp, #0
 1612              		.cfi_def_cfa_register 7
 1613 0006 0200     		movs	r2, r0
 1614 0008 FB1D     		adds	r3, r7, #7
 1615 000a 1A70     		strb	r2, [r3]
2477:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1616              		.loc 1 2477 0
 1617 000c 064B     		ldr	r3, .L91
 1618 000e FA1D     		adds	r2, r7, #7
 1619 0010 1278     		ldrb	r2, [r2]
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 73


 1620 0012 1F21     		movs	r1, #31
 1621 0014 0A40     		ands	r2, r1
 1622 0016 0121     		movs	r1, #1
 1623 0018 9140     		lsls	r1, r1, r2
 1624 001a 0A00     		movs	r2, r1
 1625 001c 1A60     		str	r2, [r3]
2478:Generated_Source\PSoC4/CyLib.c **** }
 1626              		.loc 1 2478 0
 1627 001e C046     		nop
 1628 0020 BD46     		mov	sp, r7
 1629 0022 02B0     		add	sp, sp, #8
 1630              		@ sp needed
 1631 0024 80BD     		pop	{r7, pc}
 1632              	.L92:
 1633 0026 C046     		.align	2
 1634              	.L91:
 1635 0028 80E200E0 		.word	-536812928
 1636              		.cfi_endproc
 1637              	.LFE23:
 1638              		.size	CyIntClearPending, .-CyIntClearPending
 1639              		.section	.text.CyHalt,"ax",%progbits
 1640              		.align	2
 1641              		.global	CyHalt
 1642              		.code	16
 1643              		.thumb_func
 1644              		.type	CyHalt, %function
 1645              	CyHalt:
 1646              	.LFB24:
2479:Generated_Source\PSoC4/CyLib.c **** 
2480:Generated_Source\PSoC4/CyLib.c **** 
2481:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2482:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
2483:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2484:Generated_Source\PSoC4/CyLib.c **** *
2485:Generated_Source\PSoC4/CyLib.c **** * Summary:
2486:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
2487:Generated_Source\PSoC4/CyLib.c **** *
2488:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2489:Generated_Source\PSoC4/CyLib.c **** *  reason: Value to be used during debugging.
2490:Generated_Source\PSoC4/CyLib.c **** *
2491:Generated_Source\PSoC4/CyLib.c **** * Return:
2492:Generated_Source\PSoC4/CyLib.c **** *  None
2493:Generated_Source\PSoC4/CyLib.c **** *
2494:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2495:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
2496:Generated_Source\PSoC4/CyLib.c **** {
 1647              		.loc 1 2496 0
 1648              		.cfi_startproc
 1649              		@ args = 0, pretend = 0, frame = 8
 1650              		@ frame_needed = 1, uses_anonymous_args = 0
 1651 0000 80B5     		push	{r7, lr}
 1652              		.cfi_def_cfa_offset 8
 1653              		.cfi_offset 7, -8
 1654              		.cfi_offset 14, -4
 1655 0002 82B0     		sub	sp, sp, #8
 1656              		.cfi_def_cfa_offset 16
 1657 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 74


 1658              		.cfi_def_cfa_register 7
 1659 0006 0200     		movs	r2, r0
 1660 0008 FB1D     		adds	r3, r7, #7
 1661 000a 1A70     		strb	r2, [r3]
2497:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
2498:Generated_Source\PSoC4/CyLib.c ****     {
2499:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
2500:Generated_Source\PSoC4/CyLib.c ****     }
2501:Generated_Source\PSoC4/CyLib.c **** 
2502:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
2503:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
2504:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
2505:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 1662              		.loc 1 2505 0
 1663              		.syntax divided
 1664              	@ 2505 "Generated_Source\PSoC4\CyLib.c" 1
 1665 000c 01BE     		    bkpt    1
 1666              	@ 0 "" 2
2506:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
2507:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
2508:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
2509:Generated_Source\PSoC4/CyLib.c **** }
 1667              		.loc 1 2509 0
 1668              		.thumb
 1669              		.syntax unified
 1670 000e C046     		nop
 1671 0010 BD46     		mov	sp, r7
 1672 0012 02B0     		add	sp, sp, #8
 1673              		@ sp needed
 1674 0014 80BD     		pop	{r7, pc}
 1675              		.cfi_endproc
 1676              	.LFE24:
 1677              		.size	CyHalt, .-CyHalt
 1678 0016 C046     		.section	.text.CySoftwareReset,"ax",%progbits
 1679              		.align	2
 1680              		.global	CySoftwareReset
 1681              		.code	16
 1682              		.thumb_func
 1683              		.type	CySoftwareReset, %function
 1684              	CySoftwareReset:
 1685              	.LFB25:
2510:Generated_Source\PSoC4/CyLib.c **** 
2511:Generated_Source\PSoC4/CyLib.c **** 
2512:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2513:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
2514:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2515:Generated_Source\PSoC4/CyLib.c **** *
2516:Generated_Source\PSoC4/CyLib.c **** * Summary:
2517:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
2518:Generated_Source\PSoC4/CyLib.c **** *
2519:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2520:Generated_Source\PSoC4/CyLib.c **** *  None
2521:Generated_Source\PSoC4/CyLib.c **** *
2522:Generated_Source\PSoC4/CyLib.c **** * Return:
2523:Generated_Source\PSoC4/CyLib.c **** *  None
2524:Generated_Source\PSoC4/CyLib.c **** *
2525:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 75


2526:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
2527:Generated_Source\PSoC4/CyLib.c **** {
 1686              		.loc 1 2527 0
 1687              		.cfi_startproc
 1688              		@ args = 0, pretend = 0, frame = 0
 1689              		@ frame_needed = 1, uses_anonymous_args = 0
 1690 0000 80B5     		push	{r7, lr}
 1691              		.cfi_def_cfa_offset 8
 1692              		.cfi_offset 7, -8
 1693              		.cfi_offset 14, -4
 1694 0002 00AF     		add	r7, sp, #0
 1695              		.cfi_def_cfa_register 7
2528:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
2529:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
2530:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
2531:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
2532:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CM0_AIRCR_REG = (CY_SYS_CM0_AIRCR_REG & (uint32)(~CY_SYS_CM0_AIRCR_VECTKEY_MASK)) |
 1696              		.loc 1 2532 0
 1697 0004 054B     		ldr	r3, .L95
 1698 0006 054A     		ldr	r2, .L95
 1699 0008 1268     		ldr	r2, [r2]
 1700 000a 1204     		lsls	r2, r2, #16
 1701 000c 120C     		lsrs	r2, r2, #16
2533:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_CM0_AIRCR_VECTKEY | CY_SYS_CM0_AIRCR_SYSRESETREQ;
 1702              		.loc 1 2533 0
 1703 000e 0449     		ldr	r1, .L95+4
 1704 0010 0A43     		orrs	r2, r1
2532:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_CM0_AIRCR_VECTKEY | CY_SYS_CM0_AIRCR_SYSRESETREQ;
 1705              		.loc 1 2532 0
 1706 0012 1A60     		str	r2, [r3]
2534:Generated_Source\PSoC4/CyLib.c **** }
 1707              		.loc 1 2534 0
 1708 0014 C046     		nop
 1709 0016 BD46     		mov	sp, r7
 1710              		@ sp needed
 1711 0018 80BD     		pop	{r7, pc}
 1712              	.L96:
 1713 001a C046     		.align	2
 1714              	.L95:
 1715 001c 0CED00E0 		.word	-536810228
 1716 0020 0400FA05 		.word	100270084
 1717              		.cfi_endproc
 1718              	.LFE25:
 1719              		.size	CySoftwareReset, .-CySoftwareReset
 1720              		.section	.text.CyDelay,"ax",%progbits
 1721              		.align	2
 1722              		.global	CyDelay
 1723              		.code	16
 1724              		.thumb_func
 1725              		.type	CyDelay, %function
 1726              	CyDelay:
 1727              	.LFB26:
2535:Generated_Source\PSoC4/CyLib.c **** 
2536:Generated_Source\PSoC4/CyLib.c **** 
2537:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2538:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
2539:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 76


2540:Generated_Source\PSoC4/CyLib.c **** *
2541:Generated_Source\PSoC4/CyLib.c **** * Summary:
2542:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
2543:Generated_Source\PSoC4/CyLib.c **** *
2544:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2545:Generated_Source\PSoC4/CyLib.c **** *  milliseconds: number of milliseconds to delay.
2546:Generated_Source\PSoC4/CyLib.c **** *
2547:Generated_Source\PSoC4/CyLib.c **** * Return:
2548:Generated_Source\PSoC4/CyLib.c **** *  None
2549:Generated_Source\PSoC4/CyLib.c **** *
2550:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2551:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
2552:Generated_Source\PSoC4/CyLib.c **** {
 1728              		.loc 1 2552 0
 1729              		.cfi_startproc
 1730              		@ args = 0, pretend = 0, frame = 8
 1731              		@ frame_needed = 1, uses_anonymous_args = 0
 1732 0000 80B5     		push	{r7, lr}
 1733              		.cfi_def_cfa_offset 8
 1734              		.cfi_offset 7, -8
 1735              		.cfi_offset 14, -4
 1736 0002 82B0     		sub	sp, sp, #8
 1737              		.cfi_def_cfa_offset 16
 1738 0004 00AF     		add	r7, sp, #0
 1739              		.cfi_def_cfa_register 7
 1740 0006 7860     		str	r0, [r7, #4]
2553:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1741              		.loc 1 2553 0
 1742 0008 09E0     		b	.L98
 1743              	.L99:
2554:Generated_Source\PSoC4/CyLib.c ****     {
2555:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
2556:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
2557:Generated_Source\PSoC4/CyLib.c ****          */
2558:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 1744              		.loc 1 2558 0
 1745 000a 0D4B     		ldr	r3, .L100
 1746 000c 1B68     		ldr	r3, [r3]
 1747 000e 1800     		movs	r0, r3
 1748 0010 FFF7FEFF 		bl	CyDelayCycles
2559:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 1749              		.loc 1 2559 0
 1750 0014 7B68     		ldr	r3, [r7, #4]
 1751 0016 0B4A     		ldr	r2, .L100+4
 1752 0018 9446     		mov	ip, r2
 1753 001a 6344     		add	r3, r3, ip
 1754 001c 7B60     		str	r3, [r7, #4]
 1755              	.L98:
2553:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1756              		.loc 1 2553 0
 1757 001e 7A68     		ldr	r2, [r7, #4]
 1758 0020 8023     		movs	r3, #128
 1759 0022 1B02     		lsls	r3, r3, #8
 1760 0024 9A42     		cmp	r2, r3
 1761 0026 F0D8     		bhi	.L99
2560:Generated_Source\PSoC4/CyLib.c ****     }
2561:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 77


2562:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 1762              		.loc 1 2562 0
 1763 0028 074B     		ldr	r3, .L100+8
 1764 002a 1B68     		ldr	r3, [r3]
 1765 002c 7A68     		ldr	r2, [r7, #4]
 1766 002e 5343     		muls	r3, r2
 1767 0030 1800     		movs	r0, r3
 1768 0032 FFF7FEFF 		bl	CyDelayCycles
2563:Generated_Source\PSoC4/CyLib.c **** }
 1769              		.loc 1 2563 0
 1770 0036 C046     		nop
 1771 0038 BD46     		mov	sp, r7
 1772 003a 02B0     		add	sp, sp, #8
 1773              		@ sp needed
 1774 003c 80BD     		pop	{r7, pc}
 1775              	.L101:
 1776 003e C046     		.align	2
 1777              	.L100:
 1778 0040 00000000 		.word	cydelay32kMs
 1779 0044 0080FFFF 		.word	-32768
 1780 0048 00000000 		.word	cydelayFreqKhz
 1781              		.cfi_endproc
 1782              	.LFE26:
 1783              		.size	CyDelay, .-CyDelay
 1784              		.section	.text.CyDelayUs,"ax",%progbits
 1785              		.align	2
 1786              		.global	CyDelayUs
 1787              		.code	16
 1788              		.thumb_func
 1789              		.type	CyDelayUs, %function
 1790              	CyDelayUs:
 1791              	.LFB27:
2564:Generated_Source\PSoC4/CyLib.c **** 
2565:Generated_Source\PSoC4/CyLib.c **** 
2566:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2567:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
2568:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2569:Generated_Source\PSoC4/CyLib.c **** * Summary:
2570:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
2571:Generated_Source\PSoC4/CyLib.c **** *
2572:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2573:Generated_Source\PSoC4/CyLib.c **** *  microseconds: number of microseconds to delay.
2574:Generated_Source\PSoC4/CyLib.c **** *
2575:Generated_Source\PSoC4/CyLib.c **** * Return:
2576:Generated_Source\PSoC4/CyLib.c **** *  None
2577:Generated_Source\PSoC4/CyLib.c **** *
2578:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2579:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
2580:Generated_Source\PSoC4/CyLib.c **** {
 1792              		.loc 1 2580 0
 1793              		.cfi_startproc
 1794              		@ args = 0, pretend = 0, frame = 8
 1795              		@ frame_needed = 1, uses_anonymous_args = 0
 1796 0000 80B5     		push	{r7, lr}
 1797              		.cfi_def_cfa_offset 8
 1798              		.cfi_offset 7, -8
 1799              		.cfi_offset 14, -4
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 78


 1800 0002 82B0     		sub	sp, sp, #8
 1801              		.cfi_def_cfa_offset 16
 1802 0004 00AF     		add	r7, sp, #0
 1803              		.cfi_def_cfa_register 7
 1804 0006 0200     		movs	r2, r0
 1805 0008 BB1D     		adds	r3, r7, #6
 1806 000a 1A80     		strh	r2, [r3]
2581:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1807              		.loc 1 2581 0
 1808 000c BB1D     		adds	r3, r7, #6
 1809 000e 1B88     		ldrh	r3, [r3]
 1810 0010 044A     		ldr	r2, .L103
 1811 0012 1278     		ldrb	r2, [r2]
 1812 0014 5343     		muls	r3, r2
 1813 0016 1800     		movs	r0, r3
 1814 0018 FFF7FEFF 		bl	CyDelayCycles
2582:Generated_Source\PSoC4/CyLib.c **** }
 1815              		.loc 1 2582 0
 1816 001c C046     		nop
 1817 001e BD46     		mov	sp, r7
 1818 0020 02B0     		add	sp, sp, #8
 1819              		@ sp needed
 1820 0022 80BD     		pop	{r7, pc}
 1821              	.L104:
 1822              		.align	2
 1823              	.L103:
 1824 0024 00000000 		.word	cydelayFreqMhz
 1825              		.cfi_endproc
 1826              	.LFE27:
 1827              		.size	CyDelayUs, .-CyDelayUs
 1828              		.global	__aeabi_uidiv
 1829              		.section	.text.CyDelayFreq,"ax",%progbits
 1830              		.align	2
 1831              		.global	CyDelayFreq
 1832              		.code	16
 1833              		.thumb_func
 1834              		.type	CyDelayFreq, %function
 1835              	CyDelayFreq:
 1836              	.LFB28:
2583:Generated_Source\PSoC4/CyLib.c **** 
2584:Generated_Source\PSoC4/CyLib.c **** 
2585:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2586:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
2587:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2588:Generated_Source\PSoC4/CyLib.c **** * Summary:
2589:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
2590:Generated_Source\PSoC4/CyLib.c **** *
2591:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2592:Generated_Source\PSoC4/CyLib.c **** *  freq: Frequency of bus clock in Hertz.
2593:Generated_Source\PSoC4/CyLib.c **** *
2594:Generated_Source\PSoC4/CyLib.c **** * Return:
2595:Generated_Source\PSoC4/CyLib.c **** *  None
2596:Generated_Source\PSoC4/CyLib.c **** *
2597:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2598:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
2599:Generated_Source\PSoC4/CyLib.c **** {
 1837              		.loc 1 2599 0
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 79


 1838              		.cfi_startproc
 1839              		@ args = 0, pretend = 0, frame = 8
 1840              		@ frame_needed = 1, uses_anonymous_args = 0
 1841 0000 80B5     		push	{r7, lr}
 1842              		.cfi_def_cfa_offset 8
 1843              		.cfi_offset 7, -8
 1844              		.cfi_offset 14, -4
 1845 0002 82B0     		sub	sp, sp, #8
 1846              		.cfi_def_cfa_offset 16
 1847 0004 00AF     		add	r7, sp, #0
 1848              		.cfi_def_cfa_register 7
 1849 0006 7860     		str	r0, [r7, #4]
2600:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1850              		.loc 1 2600 0
 1851 0008 7B68     		ldr	r3, [r7, #4]
 1852 000a 002B     		cmp	r3, #0
 1853 000c 03D0     		beq	.L106
2601:Generated_Source\PSoC4/CyLib.c ****     {
2602:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 1854              		.loc 1 2602 0
 1855 000e 154B     		ldr	r3, .L108
 1856 0010 7A68     		ldr	r2, [r7, #4]
 1857 0012 1A60     		str	r2, [r3]
 1858 0014 02E0     		b	.L107
 1859              	.L106:
2603:Generated_Source\PSoC4/CyLib.c ****     }
2604:Generated_Source\PSoC4/CyLib.c ****     else
2605:Generated_Source\PSoC4/CyLib.c ****     {
2606:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 1860              		.loc 1 2606 0
 1861 0016 134B     		ldr	r3, .L108
 1862 0018 134A     		ldr	r2, .L108+4
 1863 001a 1A60     		str	r2, [r3]
 1864              	.L107:
2607:Generated_Source\PSoC4/CyLib.c ****     }
2608:Generated_Source\PSoC4/CyLib.c **** 
2609:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 1865              		.loc 1 2609 0
 1866 001c 114B     		ldr	r3, .L108
 1867 001e 1B68     		ldr	r3, [r3]
 1868 0020 124A     		ldr	r2, .L108+8
 1869 0022 9446     		mov	ip, r2
 1870 0024 6344     		add	r3, r3, ip
 1871 0026 1249     		ldr	r1, .L108+12
 1872 0028 1800     		movs	r0, r3
 1873 002a FFF7FEFF 		bl	__aeabi_uidiv
 1874 002e 0300     		movs	r3, r0
 1875 0030 DAB2     		uxtb	r2, r3
 1876 0032 104B     		ldr	r3, .L108+16
 1877 0034 1A70     		strb	r2, [r3]
2610:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1878              		.loc 1 2610 0
 1879 0036 0B4B     		ldr	r3, .L108
 1880 0038 1B68     		ldr	r3, [r3]
 1881 003a 0F4A     		ldr	r2, .L108+20
 1882 003c 9A18     		adds	r2, r3, r2
 1883 003e FA23     		movs	r3, #250
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 80


 1884 0040 9900     		lsls	r1, r3, #2
 1885 0042 1000     		movs	r0, r2
 1886 0044 FFF7FEFF 		bl	__aeabi_uidiv
 1887 0048 0300     		movs	r3, r0
 1888 004a 1A00     		movs	r2, r3
 1889 004c 0B4B     		ldr	r3, .L108+24
 1890 004e 1A60     		str	r2, [r3]
2611:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1891              		.loc 1 2611 0
 1892 0050 0A4B     		ldr	r3, .L108+24
 1893 0052 1B68     		ldr	r3, [r3]
 1894 0054 DA03     		lsls	r2, r3, #15
 1895 0056 0A4B     		ldr	r3, .L108+28
 1896 0058 1A60     		str	r2, [r3]
2612:Generated_Source\PSoC4/CyLib.c **** }
 1897              		.loc 1 2612 0
 1898 005a C046     		nop
 1899 005c BD46     		mov	sp, r7
 1900 005e 02B0     		add	sp, sp, #8
 1901              		@ sp needed
 1902 0060 80BD     		pop	{r7, pc}
 1903              	.L109:
 1904 0062 C046     		.align	2
 1905              	.L108:
 1906 0064 00000000 		.word	cydelayFreqHz
 1907 0068 00366E01 		.word	24000000
 1908 006c 3F420F00 		.word	999999
 1909 0070 40420F00 		.word	1000000
 1910 0074 00000000 		.word	cydelayFreqMhz
 1911 0078 E7030000 		.word	999
 1912 007c 00000000 		.word	cydelayFreqKhz
 1913 0080 00000000 		.word	cydelay32kMs
 1914              		.cfi_endproc
 1915              	.LFE28:
 1916              		.size	CyDelayFreq, .-CyDelayFreq
 1917              		.section	.text.CySysTickStart,"ax",%progbits
 1918              		.align	2
 1919              		.global	CySysTickStart
 1920              		.code	16
 1921              		.thumb_func
 1922              		.type	CySysTickStart, %function
 1923              	CySysTickStart:
 1924              	.LFB29:
2613:Generated_Source\PSoC4/CyLib.c **** 
2614:Generated_Source\PSoC4/CyLib.c **** 
2615:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2616:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStart
2617:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2618:Generated_Source\PSoC4/CyLib.c **** *
2619:Generated_Source\PSoC4/CyLib.c **** * Summary:
2620:Generated_Source\PSoC4/CyLib.c **** *  Configures the SysTick timer to generate an interrupt every 1 ms and enables
2621:Generated_Source\PSoC4/CyLib.c **** *  the interrupt. Refer to the corresponding function description for details.
2622:Generated_Source\PSoC4/CyLib.c **** *
2623:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2624:Generated_Source\PSoC4/CyLib.c **** *  None
2625:Generated_Source\PSoC4/CyLib.c **** *
2626:Generated_Source\PSoC4/CyLib.c **** * Return:
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 81


2627:Generated_Source\PSoC4/CyLib.c **** *  None
2628:Generated_Source\PSoC4/CyLib.c **** *
2629:Generated_Source\PSoC4/CyLib.c **** * Side Effects:
2630:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2631:Generated_Source\PSoC4/CyLib.c **** *
2632:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2633:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
2634:Generated_Source\PSoC4/CyLib.c **** {
 1925              		.loc 1 2634 0
 1926              		.cfi_startproc
 1927              		@ args = 0, pretend = 0, frame = 0
 1928              		@ frame_needed = 1, uses_anonymous_args = 0
 1929 0000 80B5     		push	{r7, lr}
 1930              		.cfi_def_cfa_offset 8
 1931              		.cfi_offset 7, -8
 1932              		.cfi_offset 14, -4
 1933 0002 00AF     		add	r7, sp, #0
 1934              		.cfi_def_cfa_register 7
2635:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 1935              		.loc 1 2635 0
 1936 0004 064B     		ldr	r3, .L112
 1937 0006 1B68     		ldr	r3, [r3]
 1938 0008 002B     		cmp	r3, #0
 1939 000a 04D1     		bne	.L111
2636:Generated_Source\PSoC4/CyLib.c ****     {
2637:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
 1940              		.loc 1 2637 0
 1941 000c FFF7FEFF 		bl	CySysTickInit
2638:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 1942              		.loc 1 2638 0
 1943 0010 034B     		ldr	r3, .L112
 1944 0012 0122     		movs	r2, #1
 1945 0014 1A60     		str	r2, [r3]
 1946              	.L111:
2639:Generated_Source\PSoC4/CyLib.c ****     }
2640:Generated_Source\PSoC4/CyLib.c **** 
2641:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
 1947              		.loc 1 2641 0
 1948 0016 FFF7FEFF 		bl	CySysTickEnable
2642:Generated_Source\PSoC4/CyLib.c **** }
 1949              		.loc 1 2642 0
 1950 001a C046     		nop
 1951 001c BD46     		mov	sp, r7
 1952              		@ sp needed
 1953 001e 80BD     		pop	{r7, pc}
 1954              	.L113:
 1955              		.align	2
 1956              	.L112:
 1957 0020 00000000 		.word	CySysTickInitVar
 1958              		.cfi_endproc
 1959              	.LFE29:
 1960              		.size	CySysTickStart, .-CySysTickStart
 1961              		.section	.text.CySysTickInit,"ax",%progbits
 1962              		.align	2
 1963              		.global	CySysTickInit
 1964              		.code	16
 1965              		.thumb_func
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 82


 1966              		.type	CySysTickInit, %function
 1967              	CySysTickInit:
 1968              	.LFB30:
2643:Generated_Source\PSoC4/CyLib.c **** 
2644:Generated_Source\PSoC4/CyLib.c **** 
2645:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2646:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
2647:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2648:Generated_Source\PSoC4/CyLib.c **** *
2649:Generated_Source\PSoC4/CyLib.c **** * Summary:
2650:Generated_Source\PSoC4/CyLib.c ****     *  Initializes the callback addresses with pointers to NULL, associates the
2651:Generated_Source\PSoC4/CyLib.c ****     *  SysTick system vector with the function that is responsible for calling
2652:Generated_Source\PSoC4/CyLib.c ****     *  registered callback functions, configures SysTick timer to generate interrupt
2653:Generated_Source\PSoC4/CyLib.c ****     *  every 1 ms.
2654:Generated_Source\PSoC4/CyLib.c ****     *
2655:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
2656:Generated_Source\PSoC4/CyLib.c ****     *  None
2657:Generated_Source\PSoC4/CyLib.c ****     *
2658:Generated_Source\PSoC4/CyLib.c ****     * Return:
2659:Generated_Source\PSoC4/CyLib.c ****     *  None
2660:Generated_Source\PSoC4/CyLib.c ****     *
2661:Generated_Source\PSoC4/CyLib.c ****     * Side Effects:
2662:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set.
2663:Generated_Source\PSoC4/CyLib.c ****     *
2664:Generated_Source\PSoC4/CyLib.c ****     *  The 1 ms interrupt interval is configured based on the frequency determined
2665:Generated_Source\PSoC4/CyLib.c ****     *  by PSoC Creator at build time. If System clock frequency is changed in
2666:Generated_Source\PSoC4/CyLib.c ****     *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
2667:Generated_Source\PSoC4/CyLib.c ****     *
2668:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2669:Generated_Source\PSoC4/CyLib.c ****     void CySysTickInit(void)
2670:Generated_Source\PSoC4/CyLib.c ****     {
 1969              		.loc 1 2670 0
 1970              		.cfi_startproc
 1971              		@ args = 0, pretend = 0, frame = 8
 1972              		@ frame_needed = 1, uses_anonymous_args = 0
 1973 0000 80B5     		push	{r7, lr}
 1974              		.cfi_def_cfa_offset 8
 1975              		.cfi_offset 7, -8
 1976              		.cfi_offset 14, -4
 1977 0002 82B0     		sub	sp, sp, #8
 1978              		.cfi_def_cfa_offset 16
 1979 0004 00AF     		add	r7, sp, #0
 1980              		.cfi_def_cfa_register 7
2671:Generated_Source\PSoC4/CyLib.c ****         uint32 i;
2672:Generated_Source\PSoC4/CyLib.c **** 
2673:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 1981              		.loc 1 2673 0
 1982 0006 0023     		movs	r3, #0
 1983 0008 7B60     		str	r3, [r7, #4]
 1984 000a 07E0     		b	.L115
 1985              	.L116:
2674:Generated_Source\PSoC4/CyLib.c ****     {
2675:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
 1986              		.loc 1 2675 0 discriminator 3
 1987 000c 114B     		ldr	r3, .L117
 1988 000e 7A68     		ldr	r2, [r7, #4]
 1989 0010 9200     		lsls	r2, r2, #2
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 83


 1990 0012 0021     		movs	r1, #0
 1991 0014 D150     		str	r1, [r2, r3]
2673:Generated_Source\PSoC4/CyLib.c ****     {
 1992              		.loc 1 2673 0 discriminator 3
 1993 0016 7B68     		ldr	r3, [r7, #4]
 1994 0018 0133     		adds	r3, r3, #1
 1995 001a 7B60     		str	r3, [r7, #4]
 1996              	.L115:
2673:Generated_Source\PSoC4/CyLib.c ****     {
 1997              		.loc 1 2673 0 is_stmt 0 discriminator 1
 1998 001c 7B68     		ldr	r3, [r7, #4]
 1999 001e 042B     		cmp	r3, #4
 2000 0020 F4D9     		bls	.L116
2676:Generated_Source\PSoC4/CyLib.c ****     }
2677:Generated_Source\PSoC4/CyLib.c **** 
2678:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
 2001              		.loc 1 2678 0 is_stmt 1
 2002 0022 0D4B     		ldr	r3, .L117+4
 2003 0024 1900     		movs	r1, r3
 2004 0026 0F20     		movs	r0, #15
 2005 0028 FFF7FEFF 		bl	CyIntSetSysVector
2679:Generated_Source\PSoC4/CyLib.c **** 
2680:Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
2681:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
2682:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2683:Generated_Source\PSoC4/CyLib.c **** 
2684:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
 2006              		.loc 1 2684 0
 2007 002c 0B4B     		ldr	r3, .L117+8
 2008 002e 1A68     		ldr	r2, [r3]
 2009 0030 FA23     		movs	r3, #250
 2010 0032 9900     		lsls	r1, r3, #2
 2011 0034 1000     		movs	r0, r2
 2012 0036 FFF7FEFF 		bl	__aeabi_uidiv
 2013 003a 0300     		movs	r3, r0
 2014 003c 1800     		movs	r0, r3
 2015 003e FFF7FEFF 		bl	CySysTickSetReload
2685:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 2016              		.loc 1 2685 0
 2017 0042 FFF7FEFF 		bl	CySysTickClear
2686:Generated_Source\PSoC4/CyLib.c ****     CyIntEnable(CY_INT_SYSTICK_IRQN);
 2018              		.loc 1 2686 0
 2019 0046 0F20     		movs	r0, #15
 2020 0048 FFF7FEFF 		bl	CyIntEnable
2687:Generated_Source\PSoC4/CyLib.c **** }
 2021              		.loc 1 2687 0
 2022 004c C046     		nop
 2023 004e BD46     		mov	sp, r7
 2024 0050 02B0     		add	sp, sp, #8
 2025              		@ sp needed
 2026 0052 80BD     		pop	{r7, pc}
 2027              	.L118:
 2028              		.align	2
 2029              	.L117:
 2030 0054 00000000 		.word	CySysTickCallbacks
 2031 0058 00000000 		.word	CySysTickServiceCallbacks
 2032 005c 00000000 		.word	cydelayFreqHz
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 84


 2033              		.cfi_endproc
 2034              	.LFE30:
 2035              		.size	CySysTickInit, .-CySysTickInit
 2036              		.section	.text.CySysTickEnable,"ax",%progbits
 2037              		.align	2
 2038              		.global	CySysTickEnable
 2039              		.code	16
 2040              		.thumb_func
 2041              		.type	CySysTickEnable, %function
 2042              	CySysTickEnable:
 2043              	.LFB31:
2688:Generated_Source\PSoC4/CyLib.c **** 
2689:Generated_Source\PSoC4/CyLib.c **** 
2690:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2691:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
2692:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2693:Generated_Source\PSoC4/CyLib.c **** *
2694:Generated_Source\PSoC4/CyLib.c **** * Summary:
2695:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
2696:Generated_Source\PSoC4/CyLib.c **** *
2697:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2698:Generated_Source\PSoC4/CyLib.c **** *  None
2699:Generated_Source\PSoC4/CyLib.c **** *
2700:Generated_Source\PSoC4/CyLib.c **** * Return:
2701:Generated_Source\PSoC4/CyLib.c **** *  None
2702:Generated_Source\PSoC4/CyLib.c **** *
2703:Generated_Source\PSoC4/CyLib.c **** * Side Effects:
2704:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2705:Generated_Source\PSoC4/CyLib.c **** *
2706:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2707:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
2708:Generated_Source\PSoC4/CyLib.c **** {
 2044              		.loc 1 2708 0
 2045              		.cfi_startproc
 2046              		@ args = 0, pretend = 0, frame = 0
 2047              		@ frame_needed = 1, uses_anonymous_args = 0
 2048 0000 80B5     		push	{r7, lr}
 2049              		.cfi_def_cfa_offset 8
 2050              		.cfi_offset 7, -8
 2051              		.cfi_offset 14, -4
 2052 0002 00AF     		add	r7, sp, #0
 2053              		.cfi_def_cfa_register 7
2709:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 2054              		.loc 1 2709 0
 2055 0004 FFF7FEFF 		bl	CySysTickEnableInterrupt
2710:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 2056              		.loc 1 2710 0
 2057 0008 044B     		ldr	r3, .L120
 2058 000a 044A     		ldr	r2, .L120
 2059 000c 1268     		ldr	r2, [r2]
 2060 000e 0121     		movs	r1, #1
 2061 0010 0A43     		orrs	r2, r1
 2062 0012 1A60     		str	r2, [r3]
2711:Generated_Source\PSoC4/CyLib.c **** }
 2063              		.loc 1 2711 0
 2064 0014 C046     		nop
 2065 0016 BD46     		mov	sp, r7
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 85


 2066              		@ sp needed
 2067 0018 80BD     		pop	{r7, pc}
 2068              	.L121:
 2069 001a C046     		.align	2
 2070              	.L120:
 2071 001c 10E000E0 		.word	-536813552
 2072              		.cfi_endproc
 2073              	.LFE31:
 2074              		.size	CySysTickEnable, .-CySysTickEnable
 2075              		.section	.text.CySysTickStop,"ax",%progbits
 2076              		.align	2
 2077              		.global	CySysTickStop
 2078              		.code	16
 2079              		.thumb_func
 2080              		.type	CySysTickStop, %function
 2081              	CySysTickStop:
 2082              	.LFB32:
2712:Generated_Source\PSoC4/CyLib.c **** 
2713:Generated_Source\PSoC4/CyLib.c **** 
2714:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2715:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
2716:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2717:Generated_Source\PSoC4/CyLib.c **** *
2718:Generated_Source\PSoC4/CyLib.c **** * Summary:
2719:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
2720:Generated_Source\PSoC4/CyLib.c **** *
2721:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2722:Generated_Source\PSoC4/CyLib.c **** *  None
2723:Generated_Source\PSoC4/CyLib.c **** *
2724:Generated_Source\PSoC4/CyLib.c **** * Return:
2725:Generated_Source\PSoC4/CyLib.c **** *  None
2726:Generated_Source\PSoC4/CyLib.c **** *
2727:Generated_Source\PSoC4/CyLib.c **** * Side Effects:
2728:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2729:Generated_Source\PSoC4/CyLib.c **** *
2730:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2731:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
2732:Generated_Source\PSoC4/CyLib.c **** {
 2083              		.loc 1 2732 0
 2084              		.cfi_startproc
 2085              		@ args = 0, pretend = 0, frame = 0
 2086              		@ frame_needed = 1, uses_anonymous_args = 0
 2087 0000 80B5     		push	{r7, lr}
 2088              		.cfi_def_cfa_offset 8
 2089              		.cfi_offset 7, -8
 2090              		.cfi_offset 14, -4
 2091 0002 00AF     		add	r7, sp, #0
 2092              		.cfi_def_cfa_register 7
2733:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 2093              		.loc 1 2733 0
 2094 0004 044B     		ldr	r3, .L123
 2095 0006 044A     		ldr	r2, .L123
 2096 0008 1268     		ldr	r2, [r2]
 2097 000a 0121     		movs	r1, #1
 2098 000c 8A43     		bics	r2, r1
 2099 000e 1A60     		str	r2, [r3]
2734:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 86


 2100              		.loc 1 2734 0
 2101 0010 C046     		nop
 2102 0012 BD46     		mov	sp, r7
 2103              		@ sp needed
 2104 0014 80BD     		pop	{r7, pc}
 2105              	.L124:
 2106 0016 C046     		.align	2
 2107              	.L123:
 2108 0018 10E000E0 		.word	-536813552
 2109              		.cfi_endproc
 2110              	.LFE32:
 2111              		.size	CySysTickStop, .-CySysTickStop
 2112              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 2113              		.align	2
 2114              		.global	CySysTickEnableInterrupt
 2115              		.code	16
 2116              		.thumb_func
 2117              		.type	CySysTickEnableInterrupt, %function
 2118              	CySysTickEnableInterrupt:
 2119              	.LFB33:
2735:Generated_Source\PSoC4/CyLib.c **** 
2736:Generated_Source\PSoC4/CyLib.c **** 
2737:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2738:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
2739:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2740:Generated_Source\PSoC4/CyLib.c **** *
2741:Generated_Source\PSoC4/CyLib.c **** * Summary:
2742:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
2743:Generated_Source\PSoC4/CyLib.c **** *
2744:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2745:Generated_Source\PSoC4/CyLib.c **** *  None
2746:Generated_Source\PSoC4/CyLib.c **** *
2747:Generated_Source\PSoC4/CyLib.c **** * Return:
2748:Generated_Source\PSoC4/CyLib.c **** *  None
2749:Generated_Source\PSoC4/CyLib.c **** *
2750:Generated_Source\PSoC4/CyLib.c **** * Side Effects:
2751:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2752:Generated_Source\PSoC4/CyLib.c **** *
2753:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2754:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
2755:Generated_Source\PSoC4/CyLib.c **** {
 2120              		.loc 1 2755 0
 2121              		.cfi_startproc
 2122              		@ args = 0, pretend = 0, frame = 0
 2123              		@ frame_needed = 1, uses_anonymous_args = 0
 2124 0000 80B5     		push	{r7, lr}
 2125              		.cfi_def_cfa_offset 8
 2126              		.cfi_offset 7, -8
 2127              		.cfi_offset 14, -4
 2128 0002 00AF     		add	r7, sp, #0
 2129              		.cfi_def_cfa_register 7
2756:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 2130              		.loc 1 2756 0
 2131 0004 044B     		ldr	r3, .L126
 2132 0006 044A     		ldr	r2, .L126
 2133 0008 1268     		ldr	r2, [r2]
 2134 000a 0221     		movs	r1, #2
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 87


 2135 000c 0A43     		orrs	r2, r1
 2136 000e 1A60     		str	r2, [r3]
2757:Generated_Source\PSoC4/CyLib.c **** }
 2137              		.loc 1 2757 0
 2138 0010 C046     		nop
 2139 0012 BD46     		mov	sp, r7
 2140              		@ sp needed
 2141 0014 80BD     		pop	{r7, pc}
 2142              	.L127:
 2143 0016 C046     		.align	2
 2144              	.L126:
 2145 0018 10E000E0 		.word	-536813552
 2146              		.cfi_endproc
 2147              	.LFE33:
 2148              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 2149              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 2150              		.align	2
 2151              		.global	CySysTickDisableInterrupt
 2152              		.code	16
 2153              		.thumb_func
 2154              		.type	CySysTickDisableInterrupt, %function
 2155              	CySysTickDisableInterrupt:
 2156              	.LFB34:
2758:Generated_Source\PSoC4/CyLib.c **** 
2759:Generated_Source\PSoC4/CyLib.c **** 
2760:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2761:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
2762:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2763:Generated_Source\PSoC4/CyLib.c **** *
2764:Generated_Source\PSoC4/CyLib.c **** * Summary:
2765:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
2766:Generated_Source\PSoC4/CyLib.c **** *
2767:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2768:Generated_Source\PSoC4/CyLib.c **** *  None
2769:Generated_Source\PSoC4/CyLib.c **** *
2770:Generated_Source\PSoC4/CyLib.c **** * Return:
2771:Generated_Source\PSoC4/CyLib.c **** *  None
2772:Generated_Source\PSoC4/CyLib.c **** *
2773:Generated_Source\PSoC4/CyLib.c **** * Side Effects:
2774:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2775:Generated_Source\PSoC4/CyLib.c **** *
2776:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2777:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
2778:Generated_Source\PSoC4/CyLib.c **** {
 2157              		.loc 1 2778 0
 2158              		.cfi_startproc
 2159              		@ args = 0, pretend = 0, frame = 0
 2160              		@ frame_needed = 1, uses_anonymous_args = 0
 2161 0000 80B5     		push	{r7, lr}
 2162              		.cfi_def_cfa_offset 8
 2163              		.cfi_offset 7, -8
 2164              		.cfi_offset 14, -4
 2165 0002 00AF     		add	r7, sp, #0
 2166              		.cfi_def_cfa_register 7
2779:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 2167              		.loc 1 2779 0
 2168 0004 044B     		ldr	r3, .L129
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 88


 2169 0006 044A     		ldr	r2, .L129
 2170 0008 1268     		ldr	r2, [r2]
 2171 000a 0221     		movs	r1, #2
 2172 000c 8A43     		bics	r2, r1
 2173 000e 1A60     		str	r2, [r3]
2780:Generated_Source\PSoC4/CyLib.c **** }
 2174              		.loc 1 2780 0
 2175 0010 C046     		nop
 2176 0012 BD46     		mov	sp, r7
 2177              		@ sp needed
 2178 0014 80BD     		pop	{r7, pc}
 2179              	.L130:
 2180 0016 C046     		.align	2
 2181              	.L129:
 2182 0018 10E000E0 		.word	-536813552
 2183              		.cfi_endproc
 2184              	.LFE34:
 2185              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 2186              		.section	.text.CySysTickSetReload,"ax",%progbits
 2187              		.align	2
 2188              		.global	CySysTickSetReload
 2189              		.code	16
 2190              		.thumb_func
 2191              		.type	CySysTickSetReload, %function
 2192              	CySysTickSetReload:
 2193              	.LFB35:
2781:Generated_Source\PSoC4/CyLib.c **** 
2782:Generated_Source\PSoC4/CyLib.c **** 
2783:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2784:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
2785:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2786:Generated_Source\PSoC4/CyLib.c **** *
2787:Generated_Source\PSoC4/CyLib.c **** * Summary:
2788:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
2789:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
2790:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
2791:Generated_Source\PSoC4/CyLib.c **** *
2792:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2793:Generated_Source\PSoC4/CyLib.c **** *  value: Valid range [0x0-0x00FFFFFF]. Counter reset value
2794:Generated_Source\PSoC4/CyLib.c **** *
2795:Generated_Source\PSoC4/CyLib.c **** * Return:
2796:Generated_Source\PSoC4/CyLib.c **** *  None
2797:Generated_Source\PSoC4/CyLib.c **** *
2798:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2799:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
2800:Generated_Source\PSoC4/CyLib.c **** {
 2194              		.loc 1 2800 0
 2195              		.cfi_startproc
 2196              		@ args = 0, pretend = 0, frame = 8
 2197              		@ frame_needed = 1, uses_anonymous_args = 0
 2198 0000 80B5     		push	{r7, lr}
 2199              		.cfi_def_cfa_offset 8
 2200              		.cfi_offset 7, -8
 2201              		.cfi_offset 14, -4
 2202 0002 82B0     		sub	sp, sp, #8
 2203              		.cfi_def_cfa_offset 16
 2204 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 89


 2205              		.cfi_def_cfa_register 7
 2206 0006 7860     		str	r0, [r7, #4]
2801:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 2207              		.loc 1 2801 0
 2208 0008 044B     		ldr	r3, .L132
 2209 000a 7A68     		ldr	r2, [r7, #4]
 2210 000c 1202     		lsls	r2, r2, #8
 2211 000e 120A     		lsrs	r2, r2, #8
 2212 0010 1A60     		str	r2, [r3]
2802:Generated_Source\PSoC4/CyLib.c **** }
 2213              		.loc 1 2802 0
 2214 0012 C046     		nop
 2215 0014 BD46     		mov	sp, r7
 2216 0016 02B0     		add	sp, sp, #8
 2217              		@ sp needed
 2218 0018 80BD     		pop	{r7, pc}
 2219              	.L133:
 2220 001a C046     		.align	2
 2221              	.L132:
 2222 001c 14E000E0 		.word	-536813548
 2223              		.cfi_endproc
 2224              	.LFE35:
 2225              		.size	CySysTickSetReload, .-CySysTickSetReload
 2226              		.section	.text.CySysTickGetReload,"ax",%progbits
 2227              		.align	2
 2228              		.global	CySysTickGetReload
 2229              		.code	16
 2230              		.thumb_func
 2231              		.type	CySysTickGetReload, %function
 2232              	CySysTickGetReload:
 2233              	.LFB36:
2803:Generated_Source\PSoC4/CyLib.c **** 
2804:Generated_Source\PSoC4/CyLib.c **** 
2805:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2806:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
2807:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2808:Generated_Source\PSoC4/CyLib.c **** *
2809:Generated_Source\PSoC4/CyLib.c **** * Summary:
2810:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero.
2811:Generated_Source\PSoC4/CyLib.c **** *
2812:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2813:Generated_Source\PSoC4/CyLib.c **** *  None
2814:Generated_Source\PSoC4/CyLib.c **** *
2815:Generated_Source\PSoC4/CyLib.c **** * Return:
2816:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
2817:Generated_Source\PSoC4/CyLib.c **** *
2818:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2819:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
2820:Generated_Source\PSoC4/CyLib.c **** {
 2234              		.loc 1 2820 0
 2235              		.cfi_startproc
 2236              		@ args = 0, pretend = 0, frame = 0
 2237              		@ frame_needed = 1, uses_anonymous_args = 0
 2238 0000 80B5     		push	{r7, lr}
 2239              		.cfi_def_cfa_offset 8
 2240              		.cfi_offset 7, -8
 2241              		.cfi_offset 14, -4
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 90


 2242 0002 00AF     		add	r7, sp, #0
 2243              		.cfi_def_cfa_register 7
2821:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 2244              		.loc 1 2821 0
 2245 0004 034B     		ldr	r3, .L136
 2246 0006 1B68     		ldr	r3, [r3]
 2247 0008 1B02     		lsls	r3, r3, #8
 2248 000a 1B0A     		lsrs	r3, r3, #8
2822:Generated_Source\PSoC4/CyLib.c **** }
 2249              		.loc 1 2822 0
 2250 000c 1800     		movs	r0, r3
 2251 000e BD46     		mov	sp, r7
 2252              		@ sp needed
 2253 0010 80BD     		pop	{r7, pc}
 2254              	.L137:
 2255 0012 C046     		.align	2
 2256              	.L136:
 2257 0014 14E000E0 		.word	-536813548
 2258              		.cfi_endproc
 2259              	.LFE36:
 2260              		.size	CySysTickGetReload, .-CySysTickGetReload
 2261              		.section	.text.CySysTickGetValue,"ax",%progbits
 2262              		.align	2
 2263              		.global	CySysTickGetValue
 2264              		.code	16
 2265              		.thumb_func
 2266              		.type	CySysTickGetValue, %function
 2267              	CySysTickGetValue:
 2268              	.LFB37:
2823:Generated_Source\PSoC4/CyLib.c **** 
2824:Generated_Source\PSoC4/CyLib.c **** 
2825:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2826:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
2827:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2828:Generated_Source\PSoC4/CyLib.c **** *
2829:Generated_Source\PSoC4/CyLib.c **** * Summary:
2830:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
2831:Generated_Source\PSoC4/CyLib.c **** *
2832:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2833:Generated_Source\PSoC4/CyLib.c **** *  None
2834:Generated_Source\PSoC4/CyLib.c **** *
2835:Generated_Source\PSoC4/CyLib.c **** * Return:
2836:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
2837:Generated_Source\PSoC4/CyLib.c **** *
2838:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2839:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
2840:Generated_Source\PSoC4/CyLib.c **** {
 2269              		.loc 1 2840 0
 2270              		.cfi_startproc
 2271              		@ args = 0, pretend = 0, frame = 0
 2272              		@ frame_needed = 1, uses_anonymous_args = 0
 2273 0000 80B5     		push	{r7, lr}
 2274              		.cfi_def_cfa_offset 8
 2275              		.cfi_offset 7, -8
 2276              		.cfi_offset 14, -4
 2277 0002 00AF     		add	r7, sp, #0
 2278              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 91


2841:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 2279              		.loc 1 2841 0
 2280 0004 034B     		ldr	r3, .L140
 2281 0006 1B68     		ldr	r3, [r3]
 2282 0008 1B02     		lsls	r3, r3, #8
 2283 000a 1B0A     		lsrs	r3, r3, #8
2842:Generated_Source\PSoC4/CyLib.c **** }
 2284              		.loc 1 2842 0
 2285 000c 1800     		movs	r0, r3
 2286 000e BD46     		mov	sp, r7
 2287              		@ sp needed
 2288 0010 80BD     		pop	{r7, pc}
 2289              	.L141:
 2290 0012 C046     		.align	2
 2291              	.L140:
 2292 0014 18E000E0 		.word	-536813544
 2293              		.cfi_endproc
 2294              	.LFE37:
 2295              		.size	CySysTickGetValue, .-CySysTickGetValue
 2296              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 2297              		.align	2
 2298              		.global	CySysTickGetCountFlag
 2299              		.code	16
 2300              		.thumb_func
 2301              		.type	CySysTickGetCountFlag, %function
 2302              	CySysTickGetCountFlag:
 2303              	.LFB38:
2843:Generated_Source\PSoC4/CyLib.c **** 
2844:Generated_Source\PSoC4/CyLib.c **** 
2845:Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
2846:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2847:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
2848:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
2849:Generated_Source\PSoC4/CyLib.c ****     *
2850:Generated_Source\PSoC4/CyLib.c ****     * Summary:
2851:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
2852:Generated_Source\PSoC4/CyLib.c ****     *
2853:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
2854:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
2855:Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
2856:Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
2857:Generated_Source\PSoC4/CyLib.c ****     *
2858:Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
2859:Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
2860:Generated_Source\PSoC4/CyLib.c ****     *
2861:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
2862:Generated_Source\PSoC4/CyLib.c ****     *  clockSource: Clock source for SysTick counter
2863:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
2864:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
2865:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2866:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2867:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2868:Generated_Source\PSoC4/CyLib.c ****     *
2869:Generated_Source\PSoC4/CyLib.c ****     * Return:
2870:Generated_Source\PSoC4/CyLib.c ****     *  None
2871:Generated_Source\PSoC4/CyLib.c ****     *
2872:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 92


2873:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
2874:Generated_Source\PSoC4/CyLib.c ****     {
2875:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
2876:Generated_Source\PSoC4/CyLib.c ****         {
2877:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
2878:Generated_Source\PSoC4/CyLib.c ****         }
2879:Generated_Source\PSoC4/CyLib.c ****         else
2880:Generated_Source\PSoC4/CyLib.c ****         {
2881:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
2882:Generated_Source\PSoC4/CyLib.c ****         }
2883:Generated_Source\PSoC4/CyLib.c ****     }
2884:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2885:Generated_Source\PSoC4/CyLib.c **** 
2886:Generated_Source\PSoC4/CyLib.c **** 
2887:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2888:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
2889:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2890:Generated_Source\PSoC4/CyLib.c **** *
2891:Generated_Source\PSoC4/CyLib.c **** * Summary:
2892:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
2893:Generated_Source\PSoC4/CyLib.c **** *   The flag cleared on read.
2894:Generated_Source\PSoC4/CyLib.c **** *
2895:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2896:Generated_Source\PSoC4/CyLib.c **** *  None
2897:Generated_Source\PSoC4/CyLib.c **** *
2898:Generated_Source\PSoC4/CyLib.c **** * Return:
2899:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
2900:Generated_Source\PSoC4/CyLib.c **** *
2901:Generated_Source\PSoC4/CyLib.c **** *
2902:Generated_Source\PSoC4/CyLib.c **** * Side Effects:
2903:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2904:Generated_Source\PSoC4/CyLib.c **** *
2905:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2906:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
2907:Generated_Source\PSoC4/CyLib.c **** {
 2304              		.loc 1 2907 0
 2305              		.cfi_startproc
 2306              		@ args = 0, pretend = 0, frame = 0
 2307              		@ frame_needed = 1, uses_anonymous_args = 0
 2308 0000 80B5     		push	{r7, lr}
 2309              		.cfi_def_cfa_offset 8
 2310              		.cfi_offset 7, -8
 2311              		.cfi_offset 14, -4
 2312 0002 00AF     		add	r7, sp, #0
 2313              		.cfi_def_cfa_register 7
2908:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG>>CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 2314              		.loc 1 2908 0
 2315 0004 034B     		ldr	r3, .L144
 2316 0006 1B68     		ldr	r3, [r3]
 2317 0008 1B0C     		lsrs	r3, r3, #16
 2318 000a 0122     		movs	r2, #1
 2319 000c 1340     		ands	r3, r2
2909:Generated_Source\PSoC4/CyLib.c **** }
 2320              		.loc 1 2909 0
 2321 000e 1800     		movs	r0, r3
 2322 0010 BD46     		mov	sp, r7
 2323              		@ sp needed
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 93


 2324 0012 80BD     		pop	{r7, pc}
 2325              	.L145:
 2326              		.align	2
 2327              	.L144:
 2328 0014 10E000E0 		.word	-536813552
 2329              		.cfi_endproc
 2330              	.LFE38:
 2331              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 2332              		.section	.text.CySysTickClear,"ax",%progbits
 2333              		.align	2
 2334              		.global	CySysTickClear
 2335              		.code	16
 2336              		.thumb_func
 2337              		.type	CySysTickClear, %function
 2338              	CySysTickClear:
 2339              	.LFB39:
2910:Generated_Source\PSoC4/CyLib.c **** 
2911:Generated_Source\PSoC4/CyLib.c **** 
2912:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2913:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
2914:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2915:Generated_Source\PSoC4/CyLib.c **** *
2916:Generated_Source\PSoC4/CyLib.c **** * Summary:
2917:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
2918:Generated_Source\PSoC4/CyLib.c **** *
2919:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2920:Generated_Source\PSoC4/CyLib.c **** *  None
2921:Generated_Source\PSoC4/CyLib.c **** *
2922:Generated_Source\PSoC4/CyLib.c **** * Return:
2923:Generated_Source\PSoC4/CyLib.c **** *  None
2924:Generated_Source\PSoC4/CyLib.c **** *
2925:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2926:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
2927:Generated_Source\PSoC4/CyLib.c **** {
 2340              		.loc 1 2927 0
 2341              		.cfi_startproc
 2342              		@ args = 0, pretend = 0, frame = 0
 2343              		@ frame_needed = 1, uses_anonymous_args = 0
 2344 0000 80B5     		push	{r7, lr}
 2345              		.cfi_def_cfa_offset 8
 2346              		.cfi_offset 7, -8
 2347              		.cfi_offset 14, -4
 2348 0002 00AF     		add	r7, sp, #0
 2349              		.cfi_def_cfa_register 7
2928:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 2350              		.loc 1 2928 0
 2351 0004 024B     		ldr	r3, .L147
 2352 0006 0022     		movs	r2, #0
 2353 0008 1A60     		str	r2, [r3]
2929:Generated_Source\PSoC4/CyLib.c **** }
 2354              		.loc 1 2929 0
 2355 000a C046     		nop
 2356 000c BD46     		mov	sp, r7
 2357              		@ sp needed
 2358 000e 80BD     		pop	{r7, pc}
 2359              	.L148:
 2360              		.align	2
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 94


 2361              	.L147:
 2362 0010 18E000E0 		.word	-536813544
 2363              		.cfi_endproc
 2364              	.LFE39:
 2365              		.size	CySysTickClear, .-CySysTickClear
 2366              		.section	.text.CySysTickSetCallback,"ax",%progbits
 2367              		.align	2
 2368              		.global	CySysTickSetCallback
 2369              		.code	16
 2370              		.thumb_func
 2371              		.type	CySysTickSetCallback, %function
 2372              	CySysTickSetCallback:
 2373              	.LFB40:
2930:Generated_Source\PSoC4/CyLib.c **** 
2931:Generated_Source\PSoC4/CyLib.c **** 
2932:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2933:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
2934:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2935:Generated_Source\PSoC4/CyLib.c **** *
2936:Generated_Source\PSoC4/CyLib.c **** * Summary:
2937:Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
2938:Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
2939:Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
2940:Generated_Source\PSoC4/CyLib.c **** *
2941:Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
2942:Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
2943:Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
2944:Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
2945:Generated_Source\PSoC4/CyLib.c **** *  functions.
2946:Generated_Source\PSoC4/CyLib.c **** *
2947:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2948:Generated_Source\PSoC4/CyLib.c **** *  number: The number of the callback function addresses to be set. The valid
2949:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2950:Generated_Source\PSoC4/CyLib.c **** *
2951:Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
2952:Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
2953:Generated_Source\PSoC4/CyLib.c **** *                                specified number.
2954:Generated_Source\PSoC4/CyLib.c **** *
2955:Generated_Source\PSoC4/CyLib.c **** * Return:
2956:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
2957:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
2958:Generated_Source\PSoC4/CyLib.c **** *
2959:Generated_Source\PSoC4/CyLib.c **** * Side Effects:
2960:Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
2961:Generated_Source\PSoC4/CyLib.c **** *
2962:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2963:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
2964:Generated_Source\PSoC4/CyLib.c **** {
 2374              		.loc 1 2964 0
 2375              		.cfi_startproc
 2376              		@ args = 0, pretend = 0, frame = 16
 2377              		@ frame_needed = 1, uses_anonymous_args = 0
 2378 0000 80B5     		push	{r7, lr}
 2379              		.cfi_def_cfa_offset 8
 2380              		.cfi_offset 7, -8
 2381              		.cfi_offset 14, -4
 2382 0002 84B0     		sub	sp, sp, #16
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 95


 2383              		.cfi_def_cfa_offset 24
 2384 0004 00AF     		add	r7, sp, #0
 2385              		.cfi_def_cfa_register 7
 2386 0006 7860     		str	r0, [r7, #4]
 2387 0008 3960     		str	r1, [r7]
2965:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
2966:Generated_Source\PSoC4/CyLib.c **** 
2967:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
 2388              		.loc 1 2967 0
 2389 000a 074B     		ldr	r3, .L151
 2390 000c 7A68     		ldr	r2, [r7, #4]
 2391 000e 9200     		lsls	r2, r2, #2
 2392 0010 D358     		ldr	r3, [r2, r3]
 2393 0012 FB60     		str	r3, [r7, #12]
2968:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 2394              		.loc 1 2968 0
 2395 0014 044B     		ldr	r3, .L151
 2396 0016 7A68     		ldr	r2, [r7, #4]
 2397 0018 9200     		lsls	r2, r2, #2
 2398 001a 3968     		ldr	r1, [r7]
 2399 001c D150     		str	r1, [r2, r3]
2969:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 2400              		.loc 1 2969 0
 2401 001e FB68     		ldr	r3, [r7, #12]
2970:Generated_Source\PSoC4/CyLib.c **** }
 2402              		.loc 1 2970 0
 2403 0020 1800     		movs	r0, r3
 2404 0022 BD46     		mov	sp, r7
 2405 0024 04B0     		add	sp, sp, #16
 2406              		@ sp needed
 2407 0026 80BD     		pop	{r7, pc}
 2408              	.L152:
 2409              		.align	2
 2410              	.L151:
 2411 0028 00000000 		.word	CySysTickCallbacks
 2412              		.cfi_endproc
 2413              	.LFE40:
 2414              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 2415              		.section	.text.CySysTickGetCallback,"ax",%progbits
 2416              		.align	2
 2417              		.global	CySysTickGetCallback
 2418              		.code	16
 2419              		.thumb_func
 2420              		.type	CySysTickGetCallback, %function
 2421              	CySysTickGetCallback:
 2422              	.LFB41:
2971:Generated_Source\PSoC4/CyLib.c **** 
2972:Generated_Source\PSoC4/CyLib.c **** 
2973:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2974:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
2975:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2976:Generated_Source\PSoC4/CyLib.c **** *
2977:Generated_Source\PSoC4/CyLib.c **** * Summary:
2978:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
2979:Generated_Source\PSoC4/CyLib.c **** *
2980:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2981:Generated_Source\PSoC4/CyLib.c **** *  number: The number of callback function address to get. The valid
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 96


2982:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2983:Generated_Source\PSoC4/CyLib.c **** *
2984:Generated_Source\PSoC4/CyLib.c **** * Return:
2985:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
2986:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
2987:Generated_Source\PSoC4/CyLib.c **** *
2988:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2989:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
2990:Generated_Source\PSoC4/CyLib.c **** {
 2423              		.loc 1 2990 0
 2424              		.cfi_startproc
 2425              		@ args = 0, pretend = 0, frame = 8
 2426              		@ frame_needed = 1, uses_anonymous_args = 0
 2427 0000 80B5     		push	{r7, lr}
 2428              		.cfi_def_cfa_offset 8
 2429              		.cfi_offset 7, -8
 2430              		.cfi_offset 14, -4
 2431 0002 82B0     		sub	sp, sp, #8
 2432              		.cfi_def_cfa_offset 16
 2433 0004 00AF     		add	r7, sp, #0
 2434              		.cfi_def_cfa_register 7
 2435 0006 7860     		str	r0, [r7, #4]
2991:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 2436              		.loc 1 2991 0
 2437 0008 034B     		ldr	r3, .L155
 2438 000a 7A68     		ldr	r2, [r7, #4]
 2439 000c 9200     		lsls	r2, r2, #2
 2440 000e D358     		ldr	r3, [r2, r3]
2992:Generated_Source\PSoC4/CyLib.c **** }
 2441              		.loc 1 2992 0
 2442 0010 1800     		movs	r0, r3
 2443 0012 BD46     		mov	sp, r7
 2444 0014 02B0     		add	sp, sp, #8
 2445              		@ sp needed
 2446 0016 80BD     		pop	{r7, pc}
 2447              	.L156:
 2448              		.align	2
 2449              	.L155:
 2450 0018 00000000 		.word	CySysTickCallbacks
 2451              		.cfi_endproc
 2452              	.LFE41:
 2453              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 2454              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 2455              		.align	2
 2456              		.code	16
 2457              		.thumb_func
 2458              		.type	CySysTickServiceCallbacks, %function
 2459              	CySysTickServiceCallbacks:
 2460              	.LFB42:
2993:Generated_Source\PSoC4/CyLib.c **** 
2994:Generated_Source\PSoC4/CyLib.c **** 
2995:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2996:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
2997:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2998:Generated_Source\PSoC4/CyLib.c **** *
2999:Generated_Source\PSoC4/CyLib.c **** * Summary:
3000:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 97


3001:Generated_Source\PSoC4/CyLib.c **** *
3002:Generated_Source\PSoC4/CyLib.c **** * Parameters:
3003:Generated_Source\PSoC4/CyLib.c **** *  None
3004:Generated_Source\PSoC4/CyLib.c **** *
3005:Generated_Source\PSoC4/CyLib.c **** * Return:
3006:Generated_Source\PSoC4/CyLib.c **** *  None
3007:Generated_Source\PSoC4/CyLib.c **** *
3008:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3009:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
3010:Generated_Source\PSoC4/CyLib.c **** {
 2461              		.loc 1 3010 0
 2462              		.cfi_startproc
 2463              		@ args = 0, pretend = 0, frame = 8
 2464              		@ frame_needed = 1, uses_anonymous_args = 0
 2465 0000 80B5     		push	{r7, lr}
 2466              		.cfi_def_cfa_offset 8
 2467              		.cfi_offset 7, -8
 2468              		.cfi_offset 14, -4
 2469 0002 82B0     		sub	sp, sp, #8
 2470              		.cfi_def_cfa_offset 16
 2471 0004 00AF     		add	r7, sp, #0
 2472              		.cfi_def_cfa_register 7
3011:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
3012:Generated_Source\PSoC4/CyLib.c **** 
3013:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
3014:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 2473              		.loc 1 3014 0
 2474 0006 FFF7FEFF 		bl	CySysTickGetCountFlag
 2475 000a 0300     		movs	r3, r0
 2476 000c 012B     		cmp	r3, #1
 2477 000e 13D1     		bne	.L162
3015:Generated_Source\PSoC4/CyLib.c ****     {
3016:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 2478              		.loc 1 3016 0
 2479 0010 0023     		movs	r3, #0
 2480 0012 7B60     		str	r3, [r7, #4]
 2481 0014 0DE0     		b	.L159
 2482              	.L161:
3017:Generated_Source\PSoC4/CyLib.c ****         {
3018:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 2483              		.loc 1 3018 0
 2484 0016 0A4B     		ldr	r3, .L163
 2485 0018 7A68     		ldr	r2, [r7, #4]
 2486 001a 9200     		lsls	r2, r2, #2
 2487 001c D358     		ldr	r3, [r2, r3]
 2488 001e 002B     		cmp	r3, #0
 2489 0020 04D0     		beq	.L160
3019:Generated_Source\PSoC4/CyLib.c ****             {
3020:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 2490              		.loc 1 3020 0
 2491 0022 074B     		ldr	r3, .L163
 2492 0024 7A68     		ldr	r2, [r7, #4]
 2493 0026 9200     		lsls	r2, r2, #2
 2494 0028 D358     		ldr	r3, [r2, r3]
 2495 002a 9847     		blx	r3
 2496              	.L160:
3016:Generated_Source\PSoC4/CyLib.c ****         {
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 98


 2497              		.loc 1 3016 0 discriminator 2
 2498 002c 7B68     		ldr	r3, [r7, #4]
 2499 002e 0133     		adds	r3, r3, #1
 2500 0030 7B60     		str	r3, [r7, #4]
 2501              	.L159:
3016:Generated_Source\PSoC4/CyLib.c ****         {
 2502              		.loc 1 3016 0 is_stmt 0 discriminator 1
 2503 0032 7B68     		ldr	r3, [r7, #4]
 2504 0034 042B     		cmp	r3, #4
 2505 0036 EED9     		bls	.L161
 2506              	.L162:
3021:Generated_Source\PSoC4/CyLib.c ****             }
3022:Generated_Source\PSoC4/CyLib.c ****         }
3023:Generated_Source\PSoC4/CyLib.c ****     }
3024:Generated_Source\PSoC4/CyLib.c **** }
 2507              		.loc 1 3024 0 is_stmt 1
 2508 0038 C046     		nop
 2509 003a BD46     		mov	sp, r7
 2510 003c 02B0     		add	sp, sp, #8
 2511              		@ sp needed
 2512 003e 80BD     		pop	{r7, pc}
 2513              	.L164:
 2514              		.align	2
 2515              	.L163:
 2516 0040 00000000 		.word	CySysTickCallbacks
 2517              		.cfi_endproc
 2518              	.LFE42:
 2519              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 2520              		.section	.text.CyGetUniqueId,"ax",%progbits
 2521              		.align	2
 2522              		.global	CyGetUniqueId
 2523              		.code	16
 2524              		.thumb_func
 2525              		.type	CyGetUniqueId, %function
 2526              	CyGetUniqueId:
 2527              	.LFB43:
3025:Generated_Source\PSoC4/CyLib.c **** 
3026:Generated_Source\PSoC4/CyLib.c **** 
3027:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3028:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
3029:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
3030:Generated_Source\PSoC4/CyLib.c **** *
3031:Generated_Source\PSoC4/CyLib.c **** * Summary:
3032:Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
3033:Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
3034:Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
3035:Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
3036:Generated_Source\PSoC4/CyLib.c **** *
3037:Generated_Source\PSoC4/CyLib.c **** * Parameters:
3038:Generated_Source\PSoC4/CyLib.c **** *  uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
3039:Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
3040:Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
3041:Generated_Source\PSoC4/CyLib.c **** *
3042:Generated_Source\PSoC4/CyLib.c **** * Return:
3043:Generated_Source\PSoC4/CyLib.c **** *  None
3044:Generated_Source\PSoC4/CyLib.c **** *
3045:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 99


3046:Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
3047:Generated_Source\PSoC4/CyLib.c **** {
 2528              		.loc 1 3047 0
 2529              		.cfi_startproc
 2530              		@ args = 0, pretend = 0, frame = 8
 2531              		@ frame_needed = 1, uses_anonymous_args = 0
 2532 0000 80B5     		push	{r7, lr}
 2533              		.cfi_def_cfa_offset 8
 2534              		.cfi_offset 7, -8
 2535              		.cfi_offset 14, -4
 2536 0002 82B0     		sub	sp, sp, #8
 2537              		.cfi_def_cfa_offset 16
 2538 0004 00AF     		add	r7, sp, #0
 2539              		.cfi_def_cfa_register 7
 2540 0006 7860     		str	r0, [r7, #4]
3048:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
3049:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 2541              		.loc 1 3049 0
 2542 0008 254B     		ldr	r3, .L166
 2543 000a 1B78     		ldrb	r3, [r3]
 2544 000c DBB2     		uxtb	r3, r3
 2545 000e 1A00     		movs	r2, r3
 2546 0010 7B68     		ldr	r3, [r7, #4]
 2547 0012 1A60     		str	r2, [r3]
3050:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2548              		.loc 1 3050 0
 2549 0014 234B     		ldr	r3, .L166+4
 2550 0016 1B78     		ldrb	r3, [r3]
 2551 0018 DBB2     		uxtb	r3, r3
 2552 001a 1A02     		lsls	r2, r3, #8
 2553 001c 7B68     		ldr	r3, [r7, #4]
 2554 001e 1B68     		ldr	r3, [r3]
 2555 0020 1A43     		orrs	r2, r3
 2556 0022 7B68     		ldr	r3, [r7, #4]
 2557 0024 1A60     		str	r2, [r3]
3051:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
 2558              		.loc 1 3051 0
 2559 0026 204B     		ldr	r3, .L166+8
 2560 0028 1B78     		ldrb	r3, [r3]
 2561 002a DBB2     		uxtb	r3, r3
 2562 002c 1A04     		lsls	r2, r3, #16
 2563 002e 7B68     		ldr	r3, [r7, #4]
 2564 0030 1B68     		ldr	r3, [r3]
 2565 0032 1A43     		orrs	r2, r3
 2566 0034 7B68     		ldr	r3, [r7, #4]
 2567 0036 1A60     		str	r2, [r3]
3052:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2568              		.loc 1 3052 0
 2569 0038 1C4B     		ldr	r3, .L166+12
 2570 003a 1B78     		ldrb	r3, [r3]
 2571 003c DBB2     		uxtb	r3, r3
 2572 003e 1A06     		lsls	r2, r3, #24
 2573 0040 7B68     		ldr	r3, [r7, #4]
 2574 0042 1B68     		ldr	r3, [r3]
 2575 0044 1A43     		orrs	r2, r3
 2576 0046 7B68     		ldr	r3, [r7, #4]
 2577 0048 1A60     		str	r2, [r3]
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 100


3053:Generated_Source\PSoC4/CyLib.c **** 
3054:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
 2578              		.loc 1 3054 0
 2579 004a 7B68     		ldr	r3, [r7, #4]
 2580 004c 0433     		adds	r3, r3, #4
 2581 004e 184A     		ldr	r2, .L166+16
 2582 0050 1278     		ldrb	r2, [r2]
 2583 0052 D2B2     		uxtb	r2, r2
 2584 0054 1A60     		str	r2, [r3]
3055:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2585              		.loc 1 3055 0
 2586 0056 174B     		ldr	r3, .L166+20
 2587 0058 1B78     		ldrb	r3, [r3]
 2588 005a DBB2     		uxtb	r3, r3
 2589 005c 1902     		lsls	r1, r3, #8
 2590 005e 7B68     		ldr	r3, [r7, #4]
 2591 0060 0433     		adds	r3, r3, #4
 2592 0062 7A68     		ldr	r2, [r7, #4]
 2593 0064 0432     		adds	r2, r2, #4
 2594 0066 1268     		ldr	r2, [r2]
 2595 0068 0A43     		orrs	r2, r1
 2596 006a 1A60     		str	r2, [r3]
3056:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2597              		.loc 1 3056 0
 2598 006c 124B     		ldr	r3, .L166+24
 2599 006e 1B78     		ldrb	r3, [r3]
 2600 0070 DBB2     		uxtb	r3, r3
 2601 0072 1904     		lsls	r1, r3, #16
 2602 0074 7B68     		ldr	r3, [r7, #4]
 2603 0076 0433     		adds	r3, r3, #4
 2604 0078 7A68     		ldr	r2, [r7, #4]
 2605 007a 0432     		adds	r2, r2, #4
 2606 007c 1268     		ldr	r2, [r2]
 2607 007e 0A43     		orrs	r2, r1
 2608 0080 1A60     		str	r2, [r3]
3057:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2609              		.loc 1 3057 0
 2610 0082 0E4B     		ldr	r3, .L166+28
 2611 0084 1B78     		ldrb	r3, [r3]
 2612 0086 DBB2     		uxtb	r3, r3
 2613 0088 1906     		lsls	r1, r3, #24
 2614 008a 7B68     		ldr	r3, [r7, #4]
 2615 008c 0433     		adds	r3, r3, #4
 2616 008e 7A68     		ldr	r2, [r7, #4]
 2617 0090 0432     		adds	r2, r2, #4
 2618 0092 1268     		ldr	r2, [r2]
 2619 0094 0A43     		orrs	r2, r1
 2620 0096 1A60     		str	r2, [r3]
3058:Generated_Source\PSoC4/CyLib.c **** #else
3059:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
3060:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
3061:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
3062:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
3063:Generated_Source\PSoC4/CyLib.c **** 
3064:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
3065:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
3066:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 101


3067:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
3068:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
3069:Generated_Source\PSoC4/CyLib.c **** }
 2621              		.loc 1 3069 0
 2622 0098 C046     		nop
 2623 009a BD46     		mov	sp, r7
 2624 009c 02B0     		add	sp, sp, #8
 2625              		@ sp needed
 2626 009e 80BD     		pop	{r7, pc}
 2627              	.L167:
 2628              		.align	2
 2629              	.L166:
 2630 00a0 78F1FF0F 		.word	268431736
 2631 00a4 79F1FF0F 		.word	268431737
 2632 00a8 7AF1FF0F 		.word	268431738
 2633 00ac 7BF1FF0F 		.word	268431739
 2634 00b0 7CF1FF0F 		.word	268431740
 2635 00b4 7DF1FF0F 		.word	268431741
 2636 00b8 7EF1FF0F 		.word	268431742
 2637 00bc 7FF1FF0F 		.word	268431743
 2638              		.cfi_endproc
 2639              	.LFE43:
 2640              		.size	CyGetUniqueId, .-CyGetUniqueId
 2641              		.text
 2642              	.Letext0:
 2643              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2644              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 2645              		.section	.debug_info,"",%progbits
 2646              	.Ldebug_info0:
 2647 0000 B4080000 		.4byte	0x8b4
 2648 0004 0400     		.2byte	0x4
 2649 0006 00000000 		.4byte	.Ldebug_abbrev0
 2650 000a 04       		.byte	0x4
 2651 000b 01       		.uleb128 0x1
 2652 000c 0B030000 		.4byte	.LASF99
 2653 0010 0C       		.byte	0xc
 2654 0011 ED050000 		.4byte	.LASF100
 2655 0015 40000000 		.4byte	.LASF101
 2656 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2657 001d 00000000 		.4byte	0
 2658 0021 00000000 		.4byte	.Ldebug_line0
 2659 0025 02       		.uleb128 0x2
 2660 0026 01       		.byte	0x1
 2661 0027 06       		.byte	0x6
 2662 0028 20010000 		.4byte	.LASF0
 2663 002c 02       		.uleb128 0x2
 2664 002d 01       		.byte	0x1
 2665 002e 08       		.byte	0x8
 2666 002f B5040000 		.4byte	.LASF1
 2667 0033 02       		.uleb128 0x2
 2668 0034 02       		.byte	0x2
 2669 0035 05       		.byte	0x5
 2670 0036 C3040000 		.4byte	.LASF2
 2671 003a 02       		.uleb128 0x2
 2672 003b 02       		.byte	0x2
 2673 003c 07       		.byte	0x7
 2674 003d C4020000 		.4byte	.LASF3
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 102


 2675 0041 02       		.uleb128 0x2
 2676 0042 04       		.byte	0x4
 2677 0043 05       		.byte	0x5
 2678 0044 5F010000 		.4byte	.LASF4
 2679 0048 02       		.uleb128 0x2
 2680 0049 04       		.byte	0x4
 2681 004a 07       		.byte	0x7
 2682 004b 63020000 		.4byte	.LASF5
 2683 004f 02       		.uleb128 0x2
 2684 0050 08       		.byte	0x8
 2685 0051 05       		.byte	0x5
 2686 0052 12010000 		.4byte	.LASF6
 2687 0056 02       		.uleb128 0x2
 2688 0057 08       		.byte	0x8
 2689 0058 07       		.byte	0x7
 2690 0059 A6000000 		.4byte	.LASF7
 2691 005d 03       		.uleb128 0x3
 2692 005e 04       		.byte	0x4
 2693 005f 05       		.byte	0x5
 2694 0060 696E7400 		.ascii	"int\000"
 2695 0064 02       		.uleb128 0x2
 2696 0065 04       		.byte	0x4
 2697 0066 07       		.byte	0x7
 2698 0067 47020000 		.4byte	.LASF8
 2699 006b 04       		.uleb128 0x4
 2700 006c 8A010000 		.4byte	.LASF9
 2701 0070 02       		.byte	0x2
 2702 0071 3801     		.2byte	0x138
 2703 0073 2C000000 		.4byte	0x2c
 2704 0077 04       		.uleb128 0x4
 2705 0078 17000000 		.4byte	.LASF10
 2706 007c 02       		.byte	0x2
 2707 007d 3901     		.2byte	0x139
 2708 007f 3A000000 		.4byte	0x3a
 2709 0083 04       		.uleb128 0x4
 2710 0084 CD010000 		.4byte	.LASF11
 2711 0088 02       		.byte	0x2
 2712 0089 3A01     		.2byte	0x13a
 2713 008b 48000000 		.4byte	0x48
 2714 008f 02       		.uleb128 0x2
 2715 0090 04       		.byte	0x4
 2716 0091 04       		.byte	0x4
 2717 0092 5C040000 		.4byte	.LASF12
 2718 0096 02       		.uleb128 0x2
 2719 0097 08       		.byte	0x8
 2720 0098 04       		.byte	0x4
 2721 0099 A9010000 		.4byte	.LASF13
 2722 009d 02       		.uleb128 0x2
 2723 009e 01       		.byte	0x1
 2724 009f 08       		.byte	0x8
 2725 00a0 FC040000 		.4byte	.LASF14
 2726 00a4 04       		.uleb128 0x4
 2727 00a5 9F040000 		.4byte	.LASF15
 2728 00a9 02       		.byte	0x2
 2729 00aa E201     		.2byte	0x1e2
 2730 00ac B0000000 		.4byte	0xb0
 2731 00b0 05       		.uleb128 0x5
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 103


 2732 00b1 6B000000 		.4byte	0x6b
 2733 00b5 04       		.uleb128 0x4
 2734 00b6 AB030000 		.4byte	.LASF16
 2735 00ba 02       		.byte	0x2
 2736 00bb E401     		.2byte	0x1e4
 2737 00bd C1000000 		.4byte	0xc1
 2738 00c1 05       		.uleb128 0x5
 2739 00c2 83000000 		.4byte	0x83
 2740 00c6 04       		.uleb128 0x4
 2741 00c7 01050000 		.4byte	.LASF17
 2742 00cb 02       		.byte	0x2
 2743 00cc F401     		.2byte	0x1f4
 2744 00ce D2000000 		.4byte	0xd2
 2745 00d2 06       		.uleb128 0x6
 2746 00d3 04       		.byte	0x4
 2747 00d4 D8000000 		.4byte	0xd8
 2748 00d8 07       		.uleb128 0x7
 2749 00d9 02       		.uleb128 0x2
 2750 00da 08       		.byte	0x8
 2751 00db 04       		.byte	0x4
 2752 00dc E8030000 		.4byte	.LASF18
 2753 00e0 02       		.uleb128 0x2
 2754 00e1 04       		.byte	0x4
 2755 00e2 07       		.byte	0x7
 2756 00e3 CD030000 		.4byte	.LASF19
 2757 00e7 08       		.uleb128 0x8
 2758 00e8 71040000 		.4byte	.LASF20
 2759 00ec 03       		.byte	0x3
 2760 00ed 6A       		.byte	0x6a
 2761 00ee D2000000 		.4byte	0xd2
 2762 00f2 09       		.uleb128 0x9
 2763 00f3 CB050000 		.4byte	.LASF21
 2764 00f7 01       		.byte	0x1
 2765 00f8 6F       		.byte	0x6f
 2766 00f9 00000000 		.4byte	.LFB0
 2767 00fd 1C000000 		.4byte	.LFE0-.LFB0
 2768 0101 01       		.uleb128 0x1
 2769 0102 9C       		.byte	0x9c
 2770 0103 09       		.uleb128 0x9
 2771 0104 90020000 		.4byte	.LASF22
 2772 0108 01       		.byte	0x1
 2773 0109 95       		.byte	0x95
 2774 010a 00000000 		.4byte	.LFB1
 2775 010e 1C000000 		.4byte	.LFE1-.LFB1
 2776 0112 01       		.uleb128 0x1
 2777 0113 9C       		.byte	0x9c
 2778 0114 0A       		.uleb128 0xa
 2779 0115 27000000 		.4byte	.LASF26
 2780 0119 01       		.byte	0x1
 2781 011a C401     		.2byte	0x1c4
 2782 011c 00000000 		.4byte	.LFB2
 2783 0120 48000000 		.4byte	.LFE2-.LFB2
 2784 0124 01       		.uleb128 0x1
 2785 0125 9C       		.byte	0x9c
 2786 0126 58010000 		.4byte	0x158
 2787 012a 0B       		.uleb128 0xb
 2788 012b EB040000 		.4byte	.LASF28
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 104


 2789 012f 01       		.byte	0x1
 2790 0130 C401     		.2byte	0x1c4
 2791 0132 83000000 		.4byte	0x83
 2792 0136 02       		.uleb128 0x2
 2793 0137 91       		.byte	0x91
 2794 0138 64       		.sleb128 -28
 2795 0139 0C       		.uleb128 0xc
 2796 013a 3D010000 		.4byte	.LASF23
 2797 013e 01       		.byte	0x1
 2798 013f C601     		.2byte	0x1c6
 2799 0141 6B000000 		.4byte	0x6b
 2800 0145 02       		.uleb128 0x2
 2801 0146 91       		.byte	0x91
 2802 0147 6F       		.sleb128 -17
 2803 0148 0C       		.uleb128 0xc
 2804 0149 19060000 		.4byte	.LASF24
 2805 014d 01       		.byte	0x1
 2806 014e C701     		.2byte	0x1c7
 2807 0150 83000000 		.4byte	0x83
 2808 0154 02       		.uleb128 0x2
 2809 0155 91       		.byte	0x91
 2810 0156 68       		.sleb128 -24
 2811 0157 00       		.byte	0
 2812 0158 0D       		.uleb128 0xd
 2813 0159 D9010000 		.4byte	.LASF41
 2814 015d 01       		.byte	0x1
 2815 015e EE01     		.2byte	0x1ee
 2816 0160 83000000 		.4byte	0x83
 2817 0164 00000000 		.4byte	.LFB3
 2818 0168 34000000 		.4byte	.LFE3-.LFB3
 2819 016c 01       		.uleb128 0x1
 2820 016d 9C       		.byte	0x9c
 2821 016e 91010000 		.4byte	0x191
 2822 0172 0C       		.uleb128 0xc
 2823 0173 3D010000 		.4byte	.LASF23
 2824 0177 01       		.byte	0x1
 2825 0178 F001     		.2byte	0x1f0
 2826 017a 6B000000 		.4byte	0x6b
 2827 017e 02       		.uleb128 0x2
 2828 017f 91       		.byte	0x91
 2829 0180 6F       		.sleb128 -17
 2830 0181 0C       		.uleb128 0xc
 2831 0182 04040000 		.4byte	.LASF25
 2832 0186 01       		.byte	0x1
 2833 0187 F101     		.2byte	0x1f1
 2834 0189 83000000 		.4byte	0x83
 2835 018d 02       		.uleb128 0x2
 2836 018e 91       		.byte	0x91
 2837 018f 68       		.sleb128 -24
 2838 0190 00       		.byte	0
 2839 0191 0A       		.uleb128 0xa
 2840 0192 1E050000 		.4byte	.LASF27
 2841 0196 01       		.byte	0x1
 2842 0197 2A02     		.2byte	0x22a
 2843 0199 00000000 		.4byte	.LFB4
 2844 019d 48000000 		.4byte	.LFE4-.LFB4
 2845 01a1 01       		.uleb128 0x1
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 105


 2846 01a2 9C       		.byte	0x9c
 2847 01a3 C6010000 		.4byte	0x1c6
 2848 01a7 0B       		.uleb128 0xb
 2849 01a8 C3050000 		.4byte	.LASF29
 2850 01ac 01       		.byte	0x1
 2851 01ad 2A02     		.2byte	0x22a
 2852 01af 83000000 		.4byte	0x83
 2853 01b3 02       		.uleb128 0x2
 2854 01b4 91       		.byte	0x91
 2855 01b5 64       		.sleb128 -28
 2856 01b6 0C       		.uleb128 0xc
 2857 01b7 3D010000 		.4byte	.LASF23
 2858 01bb 01       		.byte	0x1
 2859 01bc 2C02     		.2byte	0x22c
 2860 01be 6B000000 		.4byte	0x6b
 2861 01c2 02       		.uleb128 0x2
 2862 01c3 91       		.byte	0x91
 2863 01c4 6F       		.sleb128 -17
 2864 01c5 00       		.byte	0
 2865 01c6 0A       		.uleb128 0xa
 2866 01c7 F6020000 		.4byte	.LASF30
 2867 01cb 01       		.byte	0x1
 2868 01cc 6E02     		.2byte	0x26e
 2869 01ce 00000000 		.4byte	.LFB5
 2870 01d2 EC010000 		.4byte	.LFE5-.LFB5
 2871 01d6 01       		.uleb128 0x1
 2872 01d7 9C       		.byte	0x9c
 2873 01d8 46020000 		.4byte	0x246
 2874 01dc 0B       		.uleb128 0xb
 2875 01dd 2C010000 		.4byte	.LASF31
 2876 01e1 01       		.byte	0x1
 2877 01e2 6E02     		.2byte	0x26e
 2878 01e4 83000000 		.4byte	0x83
 2879 01e8 02       		.uleb128 0x2
 2880 01e9 91       		.byte	0x91
 2881 01ea 64       		.sleb128 -28
 2882 01eb 0C       		.uleb128 0xc
 2883 01ec 0F000000 		.4byte	.LASF32
 2884 01f0 01       		.byte	0x1
 2885 01f1 7402     		.2byte	0x274
 2886 01f3 6B000000 		.4byte	0x6b
 2887 01f7 02       		.uleb128 0x2
 2888 01f8 91       		.byte	0x91
 2889 01f9 6F       		.sleb128 -17
 2890 01fa 0C       		.uleb128 0xc
 2891 01fb FC030000 		.4byte	.LASF33
 2892 01ff 01       		.byte	0x1
 2893 0200 7502     		.2byte	0x275
 2894 0202 6B000000 		.4byte	0x6b
 2895 0206 02       		.uleb128 0x2
 2896 0207 91       		.byte	0x91
 2897 0208 6E       		.sleb128 -18
 2898 0209 0C       		.uleb128 0xc
 2899 020a DC050000 		.4byte	.LASF34
 2900 020e 01       		.byte	0x1
 2901 020f 7602     		.2byte	0x276
 2902 0211 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 106


 2903 0215 02       		.uleb128 0x2
 2904 0216 91       		.byte	0x91
 2905 0217 6B       		.sleb128 -21
 2906 0218 0C       		.uleb128 0xc
 2907 0219 91000000 		.4byte	.LASF35
 2908 021d 01       		.byte	0x1
 2909 021e 7702     		.2byte	0x277
 2910 0220 6B000000 		.4byte	0x6b
 2911 0224 02       		.uleb128 0x2
 2912 0225 91       		.byte	0x91
 2913 0226 6D       		.sleb128 -19
 2914 0227 0C       		.uleb128 0xc
 2915 0228 5D050000 		.4byte	.LASF36
 2916 022c 01       		.byte	0x1
 2917 022d 7802     		.2byte	0x278
 2918 022f 6B000000 		.4byte	0x6b
 2919 0233 02       		.uleb128 0x2
 2920 0234 91       		.byte	0x91
 2921 0235 6A       		.sleb128 -22
 2922 0236 0C       		.uleb128 0xc
 2923 0237 3D010000 		.4byte	.LASF23
 2924 023b 01       		.byte	0x1
 2925 023c 8302     		.2byte	0x283
 2926 023e 6B000000 		.4byte	0x6b
 2927 0242 02       		.uleb128 0x2
 2928 0243 91       		.byte	0x91
 2929 0244 6C       		.sleb128 -20
 2930 0245 00       		.byte	0
 2931 0246 0A       		.uleb128 0xa
 2932 0247 62040000 		.4byte	.LASF37
 2933 024b 01       		.byte	0x1
 2934 024c EA07     		.2byte	0x7ea
 2935 024e 00000000 		.4byte	.LFB6
 2936 0252 64000000 		.4byte	.LFE6-.LFB6
 2937 0256 01       		.uleb128 0x1
 2938 0257 9C       		.byte	0x9c
 2939 0258 6C020000 		.4byte	0x26c
 2940 025c 0B       		.uleb128 0xb
 2941 025d A4040000 		.4byte	.LASF38
 2942 0261 01       		.byte	0x1
 2943 0262 EA07     		.2byte	0x7ea
 2944 0264 83000000 		.4byte	0x83
 2945 0268 02       		.uleb128 0x2
 2946 0269 91       		.byte	0x91
 2947 026a 74       		.sleb128 -12
 2948 026b 00       		.byte	0
 2949 026c 0E       		.uleb128 0xe
 2950 026d 96050000 		.4byte	.LASF39
 2951 0271 01       		.byte	0x1
 2952 0272 0F08     		.2byte	0x80f
 2953 0274 00000000 		.4byte	.LFB7
 2954 0278 2C000000 		.4byte	.LFE7-.LFB7
 2955 027c 01       		.uleb128 0x1
 2956 027d 9C       		.byte	0x9c
 2957 027e 0F       		.uleb128 0xf
 2958 027f 75020000 		.4byte	.LASF81
 2959 0283 01       		.byte	0x1
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 107


 2960 0284 2508     		.2byte	0x825
 2961 0286 83000000 		.4byte	0x83
 2962 028a 00000000 		.4byte	.LFB8
 2963 028e 18000000 		.4byte	.LFE8-.LFB8
 2964 0292 01       		.uleb128 0x1
 2965 0293 9C       		.byte	0x9c
 2966 0294 0E       		.uleb128 0xe
 2967 0295 B6010000 		.4byte	.LASF40
 2968 0299 01       		.byte	0x1
 2969 029a 3908     		.2byte	0x839
 2970 029c 00000000 		.4byte	.LFB9
 2971 02a0 14000000 		.4byte	.LFE9-.LFB9
 2972 02a4 01       		.uleb128 0x1
 2973 02a5 9C       		.byte	0x9c
 2974 02a6 10       		.uleb128 0x10
 2975 02a7 B0020000 		.4byte	.LASF42
 2976 02ab 01       		.byte	0x1
 2977 02ac 5508     		.2byte	0x855
 2978 02ae 83000000 		.4byte	0x83
 2979 02b2 00000000 		.4byte	.LFB10
 2980 02b6 30000000 		.4byte	.LFE10-.LFB10
 2981 02ba 01       		.uleb128 0x1
 2982 02bb 9C       		.byte	0x9c
 2983 02bc DF020000 		.4byte	0x2df
 2984 02c0 0B       		.uleb128 0xb
 2985 02c1 F5040000 		.4byte	.LASF43
 2986 02c5 01       		.byte	0x1
 2987 02c6 5508     		.2byte	0x855
 2988 02c8 83000000 		.4byte	0x83
 2989 02cc 02       		.uleb128 0x2
 2990 02cd 91       		.byte	0x91
 2991 02ce 6C       		.sleb128 -20
 2992 02cf 0C       		.uleb128 0xc
 2993 02d0 C0030000 		.4byte	.LASF44
 2994 02d4 01       		.byte	0x1
 2995 02d5 5708     		.2byte	0x857
 2996 02d7 83000000 		.4byte	0x83
 2997 02db 02       		.uleb128 0x2
 2998 02dc 91       		.byte	0x91
 2999 02dd 74       		.sleb128 -12
 3000 02de 00       		.byte	0
 3001 02df 10       		.uleb128 0x10
 3002 02e0 83000000 		.4byte	.LASF45
 3003 02e4 01       		.byte	0x1
 3004 02e5 7008     		.2byte	0x870
 3005 02e7 83000000 		.4byte	0x83
 3006 02eb 00000000 		.4byte	.LFB11
 3007 02ef 24000000 		.4byte	.LFE11-.LFB11
 3008 02f3 01       		.uleb128 0x1
 3009 02f4 9C       		.byte	0x9c
 3010 02f5 09030000 		.4byte	0x309
 3011 02f9 0C       		.uleb128 0xc
 3012 02fa 1E000000 		.4byte	.LASF46
 3013 02fe 01       		.byte	0x1
 3014 02ff 7208     		.2byte	0x872
 3015 0301 83000000 		.4byte	0x83
 3016 0305 02       		.uleb128 0x2
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 108


 3017 0306 91       		.byte	0x91
 3018 0307 74       		.sleb128 -12
 3019 0308 00       		.byte	0
 3020 0309 11       		.uleb128 0x11
 3021 030a CE000000 		.4byte	.LASF47
 3022 030e 01       		.byte	0x1
 3023 030f 8C08     		.2byte	0x88c
 3024 0311 00000000 		.4byte	.LFB12
 3025 0315 1C000000 		.4byte	.LFE12-.LFB12
 3026 0319 01       		.uleb128 0x1
 3027 031a 9C       		.byte	0x9c
 3028 031b 2F030000 		.4byte	0x32f
 3029 031f 0B       		.uleb128 0xb
 3030 0320 D4010000 		.4byte	.LASF48
 3031 0324 01       		.byte	0x1
 3032 0325 8C08     		.2byte	0x88c
 3033 0327 83000000 		.4byte	0x83
 3034 032b 02       		.uleb128 0x2
 3035 032c 91       		.byte	0x91
 3036 032d 74       		.sleb128 -12
 3037 032e 00       		.byte	0
 3038 032f 0D       		.uleb128 0xd
 3039 0330 99030000 		.4byte	.LASF49
 3040 0334 01       		.byte	0x1
 3041 0335 A808     		.2byte	0x8a8
 3042 0337 C6000000 		.4byte	0xc6
 3043 033b 00000000 		.4byte	.LFB13
 3044 033f 48000000 		.4byte	.LFE13-.LFB13
 3045 0343 01       		.uleb128 0x1
 3046 0344 9C       		.byte	0x9c
 3047 0345 86030000 		.4byte	0x386
 3048 0349 0B       		.uleb128 0xb
 3049 034a E6020000 		.4byte	.LASF50
 3050 034e 01       		.byte	0x1
 3051 034f A808     		.2byte	0x8a8
 3052 0351 6B000000 		.4byte	0x6b
 3053 0355 02       		.uleb128 0x2
 3054 0356 91       		.byte	0x91
 3055 0357 6F       		.sleb128 -17
 3056 0358 0B       		.uleb128 0xb
 3057 0359 F4030000 		.4byte	.LASF51
 3058 035d 01       		.byte	0x1
 3059 035e A808     		.2byte	0x8a8
 3060 0360 C6000000 		.4byte	0xc6
 3061 0364 02       		.uleb128 0x2
 3062 0365 91       		.byte	0x91
 3063 0366 68       		.sleb128 -24
 3064 0367 0C       		.uleb128 0xc
 3065 0368 75000000 		.4byte	.LASF52
 3066 036c 01       		.byte	0x1
 3067 036d AA08     		.2byte	0x8aa
 3068 036f C6000000 		.4byte	0xc6
 3069 0373 02       		.uleb128 0x2
 3070 0374 91       		.byte	0x91
 3071 0375 70       		.sleb128 -16
 3072 0376 0C       		.uleb128 0xc
 3073 0377 00000000 		.4byte	.LASF53
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 109


 3074 037b 01       		.byte	0x1
 3075 037c AB08     		.2byte	0x8ab
 3076 037e 86030000 		.4byte	0x386
 3077 0382 02       		.uleb128 0x2
 3078 0383 91       		.byte	0x91
 3079 0384 74       		.sleb128 -12
 3080 0385 00       		.byte	0
 3081 0386 06       		.uleb128 0x6
 3082 0387 04       		.byte	0x4
 3083 0388 C6000000 		.4byte	0xc6
 3084 038c 0D       		.uleb128 0xd
 3085 038d D9040000 		.4byte	.LASF54
 3086 0391 01       		.byte	0x1
 3087 0392 CD08     		.2byte	0x8cd
 3088 0394 C6000000 		.4byte	0xc6
 3089 0398 00000000 		.4byte	.LFB14
 3090 039c 34000000 		.4byte	.LFE14-.LFB14
 3091 03a0 01       		.uleb128 0x1
 3092 03a1 9C       		.byte	0x9c
 3093 03a2 C5030000 		.4byte	0x3c5
 3094 03a6 0B       		.uleb128 0xb
 3095 03a7 E6020000 		.4byte	.LASF50
 3096 03ab 01       		.byte	0x1
 3097 03ac CD08     		.2byte	0x8cd
 3098 03ae 6B000000 		.4byte	0x6b
 3099 03b2 02       		.uleb128 0x2
 3100 03b3 91       		.byte	0x91
 3101 03b4 6F       		.sleb128 -17
 3102 03b5 0C       		.uleb128 0xc
 3103 03b6 00000000 		.4byte	.LASF53
 3104 03ba 01       		.byte	0x1
 3105 03bb CF08     		.2byte	0x8cf
 3106 03bd 86030000 		.4byte	0x386
 3107 03c1 02       		.uleb128 0x2
 3108 03c2 91       		.byte	0x91
 3109 03c3 74       		.sleb128 -12
 3110 03c4 00       		.byte	0
 3111 03c5 0D       		.uleb128 0xd
 3112 03c6 D7020000 		.4byte	.LASF55
 3113 03ca 01       		.byte	0x1
 3114 03cb E608     		.2byte	0x8e6
 3115 03cd C6000000 		.4byte	0xc6
 3116 03d1 00000000 		.4byte	.LFB15
 3117 03d5 4C000000 		.4byte	.LFE15-.LFB15
 3118 03d9 01       		.uleb128 0x1
 3119 03da 9C       		.byte	0x9c
 3120 03db 1C040000 		.4byte	0x41c
 3121 03df 0B       		.uleb128 0xb
 3122 03e0 E6020000 		.4byte	.LASF50
 3123 03e4 01       		.byte	0x1
 3124 03e5 E608     		.2byte	0x8e6
 3125 03e7 6B000000 		.4byte	0x6b
 3126 03eb 02       		.uleb128 0x2
 3127 03ec 91       		.byte	0x91
 3128 03ed 6F       		.sleb128 -17
 3129 03ee 0B       		.uleb128 0xb
 3130 03ef F4030000 		.4byte	.LASF51
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 110


 3131 03f3 01       		.byte	0x1
 3132 03f4 E608     		.2byte	0x8e6
 3133 03f6 C6000000 		.4byte	0xc6
 3134 03fa 02       		.uleb128 0x2
 3135 03fb 91       		.byte	0x91
 3136 03fc 68       		.sleb128 -24
 3137 03fd 0C       		.uleb128 0xc
 3138 03fe 75000000 		.4byte	.LASF52
 3139 0402 01       		.byte	0x1
 3140 0403 E808     		.2byte	0x8e8
 3141 0405 C6000000 		.4byte	0xc6
 3142 0409 02       		.uleb128 0x2
 3143 040a 91       		.byte	0x91
 3144 040b 70       		.sleb128 -16
 3145 040c 0C       		.uleb128 0xc
 3146 040d 00000000 		.4byte	.LASF53
 3147 0411 01       		.byte	0x1
 3148 0412 E908     		.2byte	0x8e9
 3149 0414 86030000 		.4byte	0x386
 3150 0418 02       		.uleb128 0x2
 3151 0419 91       		.byte	0x91
 3152 041a 74       		.sleb128 -12
 3153 041b 00       		.byte	0
 3154 041c 0D       		.uleb128 0xd
 3155 041d 83040000 		.4byte	.LASF56
 3156 0421 01       		.byte	0x1
 3157 0422 0509     		.2byte	0x905
 3158 0424 C6000000 		.4byte	0xc6
 3159 0428 00000000 		.4byte	.LFB16
 3160 042c 36000000 		.4byte	.LFE16-.LFB16
 3161 0430 01       		.uleb128 0x1
 3162 0431 9C       		.byte	0x9c
 3163 0432 55040000 		.4byte	0x455
 3164 0436 0B       		.uleb128 0xb
 3165 0437 E6020000 		.4byte	.LASF50
 3166 043b 01       		.byte	0x1
 3167 043c 0509     		.2byte	0x905
 3168 043e 6B000000 		.4byte	0x6b
 3169 0442 02       		.uleb128 0x2
 3170 0443 91       		.byte	0x91
 3171 0444 6F       		.sleb128 -17
 3172 0445 0C       		.uleb128 0xc
 3173 0446 00000000 		.4byte	.LASF53
 3174 044a 01       		.byte	0x1
 3175 044b 0709     		.2byte	0x907
 3176 044d 86030000 		.4byte	0x386
 3177 0451 02       		.uleb128 0x2
 3178 0452 91       		.byte	0x91
 3179 0453 74       		.sleb128 -12
 3180 0454 00       		.byte	0
 3181 0455 0A       		.uleb128 0xa
 3182 0456 4B040000 		.4byte	.LASF57
 3183 045a 01       		.byte	0x1
 3184 045b 1D09     		.2byte	0x91d
 3185 045d 00000000 		.4byte	.LFB17
 3186 0461 A8000000 		.4byte	.LFE17-.LFB17
 3187 0465 01       		.uleb128 0x1
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 111


 3188 0466 9C       		.byte	0x9c
 3189 0467 B7040000 		.4byte	0x4b7
 3190 046b 0B       		.uleb128 0xb
 3191 046c E6020000 		.4byte	.LASF50
 3192 0470 01       		.byte	0x1
 3193 0471 1D09     		.2byte	0x91d
 3194 0473 6B000000 		.4byte	0x6b
 3195 0477 02       		.uleb128 0x2
 3196 0478 91       		.byte	0x91
 3197 0479 5F       		.sleb128 -33
 3198 047a 0B       		.uleb128 0xb
 3199 047b ED020000 		.4byte	.LASF58
 3200 047f 01       		.byte	0x1
 3201 0480 1D09     		.2byte	0x91d
 3202 0482 6B000000 		.4byte	0x6b
 3203 0486 02       		.uleb128 0x2
 3204 0487 91       		.byte	0x91
 3205 0488 5E       		.sleb128 -34
 3206 0489 0C       		.uleb128 0xc
 3207 048a 3D010000 		.4byte	.LASF23
 3208 048e 01       		.byte	0x1
 3209 048f 1F09     		.2byte	0x91f
 3210 0491 6B000000 		.4byte	0x6b
 3211 0495 02       		.uleb128 0x2
 3212 0496 91       		.byte	0x91
 3213 0497 6B       		.sleb128 -21
 3214 0498 0C       		.uleb128 0xc
 3215 0499 B0010000 		.4byte	.LASF59
 3216 049d 01       		.byte	0x1
 3217 049e 2009     		.2byte	0x920
 3218 04a0 83000000 		.4byte	0x83
 3219 04a4 02       		.uleb128 0x2
 3220 04a5 91       		.byte	0x91
 3221 04a6 6C       		.sleb128 -20
 3222 04a7 0C       		.uleb128 0xc
 3223 04a8 1D020000 		.4byte	.LASF60
 3224 04ac 01       		.byte	0x1
 3225 04ad 2109     		.2byte	0x921
 3226 04af 83000000 		.4byte	0x83
 3227 04b3 02       		.uleb128 0x2
 3228 04b4 91       		.byte	0x91
 3229 04b5 64       		.sleb128 -28
 3230 04b6 00       		.byte	0
 3231 04b7 0D       		.uleb128 0xd
 3232 04b8 F1010000 		.4byte	.LASF61
 3233 04bc 01       		.byte	0x1
 3234 04bd 4109     		.2byte	0x941
 3235 04bf 6B000000 		.4byte	0x6b
 3236 04c3 00000000 		.4byte	.LFB18
 3237 04c7 58000000 		.4byte	.LFE18-.LFB18
 3238 04cb 01       		.uleb128 0x1
 3239 04cc 9C       		.byte	0x9c
 3240 04cd F0040000 		.4byte	0x4f0
 3241 04d1 0B       		.uleb128 0xb
 3242 04d2 E6020000 		.4byte	.LASF50
 3243 04d6 01       		.byte	0x1
 3244 04d7 4109     		.2byte	0x941
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 112


 3245 04d9 6B000000 		.4byte	0x6b
 3246 04dd 02       		.uleb128 0x2
 3247 04de 91       		.byte	0x91
 3248 04df 6F       		.sleb128 -17
 3249 04e0 0C       		.uleb128 0xc
 3250 04e1 ED020000 		.4byte	.LASF58
 3251 04e5 01       		.byte	0x1
 3252 04e6 4309     		.2byte	0x943
 3253 04e8 6B000000 		.4byte	0x6b
 3254 04ec 02       		.uleb128 0x2
 3255 04ed 91       		.byte	0x91
 3256 04ee 77       		.sleb128 -9
 3257 04ef 00       		.byte	0
 3258 04f0 11       		.uleb128 0x11
 3259 04f1 CD040000 		.4byte	.LASF62
 3260 04f5 01       		.byte	0x1
 3261 04f6 5B09     		.2byte	0x95b
 3262 04f8 00000000 		.4byte	.LFB19
 3263 04fc 2C000000 		.4byte	.LFE19-.LFB19
 3264 0500 01       		.uleb128 0x1
 3265 0501 9C       		.byte	0x9c
 3266 0502 16050000 		.4byte	0x516
 3267 0506 0B       		.uleb128 0xb
 3268 0507 E6020000 		.4byte	.LASF50
 3269 050b 01       		.byte	0x1
 3270 050c 5B09     		.2byte	0x95b
 3271 050e 6B000000 		.4byte	0x6b
 3272 0512 02       		.uleb128 0x2
 3273 0513 91       		.byte	0x91
 3274 0514 77       		.sleb128 -9
 3275 0515 00       		.byte	0
 3276 0516 10       		.uleb128 0x10
 3277 0517 04010000 		.4byte	.LASF63
 3278 051b 01       		.byte	0x1
 3279 051c 6F09     		.2byte	0x96f
 3280 051e 6B000000 		.4byte	0x6b
 3281 0522 00000000 		.4byte	.LFB20
 3282 0526 30000000 		.4byte	.LFE20-.LFB20
 3283 052a 01       		.uleb128 0x1
 3284 052b 9C       		.byte	0x9c
 3285 052c 40050000 		.4byte	0x540
 3286 0530 0B       		.uleb128 0xb
 3287 0531 E6020000 		.4byte	.LASF50
 3288 0535 01       		.byte	0x1
 3289 0536 6F09     		.2byte	0x96f
 3290 0538 6B000000 		.4byte	0x6b
 3291 053c 02       		.uleb128 0x2
 3292 053d 91       		.byte	0x91
 3293 053e 77       		.sleb128 -9
 3294 053f 00       		.byte	0
 3295 0540 11       		.uleb128 0x11
 3296 0541 68010000 		.4byte	.LASF64
 3297 0545 01       		.byte	0x1
 3298 0546 8409     		.2byte	0x984
 3299 0548 00000000 		.4byte	.LFB21
 3300 054c 2C000000 		.4byte	.LFE21-.LFB21
 3301 0550 01       		.uleb128 0x1
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 113


 3302 0551 9C       		.byte	0x9c
 3303 0552 66050000 		.4byte	0x566
 3304 0556 0B       		.uleb128 0xb
 3305 0557 E6020000 		.4byte	.LASF50
 3306 055b 01       		.byte	0x1
 3307 055c 8409     		.2byte	0x984
 3308 055e 6B000000 		.4byte	0x6b
 3309 0562 02       		.uleb128 0x2
 3310 0563 91       		.byte	0x91
 3311 0564 77       		.sleb128 -9
 3312 0565 00       		.byte	0
 3313 0566 11       		.uleb128 0x11
 3314 0567 A0020000 		.4byte	.LASF65
 3315 056b 01       		.byte	0x1
 3316 056c 9709     		.2byte	0x997
 3317 056e 00000000 		.4byte	.LFB22
 3318 0572 2C000000 		.4byte	.LFE22-.LFB22
 3319 0576 01       		.uleb128 0x1
 3320 0577 9C       		.byte	0x9c
 3321 0578 8C050000 		.4byte	0x58c
 3322 057c 0B       		.uleb128 0xb
 3323 057d E6020000 		.4byte	.LASF50
 3324 0581 01       		.byte	0x1
 3325 0582 9709     		.2byte	0x997
 3326 0584 6B000000 		.4byte	0x6b
 3327 0588 02       		.uleb128 0x2
 3328 0589 91       		.byte	0x91
 3329 058a 77       		.sleb128 -9
 3330 058b 00       		.byte	0
 3331 058c 11       		.uleb128 0x11
 3332 058d D6030000 		.4byte	.LASF66
 3333 0591 01       		.byte	0x1
 3334 0592 AB09     		.2byte	0x9ab
 3335 0594 00000000 		.4byte	.LFB23
 3336 0598 2C000000 		.4byte	.LFE23-.LFB23
 3337 059c 01       		.uleb128 0x1
 3338 059d 9C       		.byte	0x9c
 3339 059e B2050000 		.4byte	0x5b2
 3340 05a2 0B       		.uleb128 0xb
 3341 05a3 E6020000 		.4byte	.LASF50
 3342 05a7 01       		.byte	0x1
 3343 05a8 AB09     		.2byte	0x9ab
 3344 05aa 6B000000 		.4byte	0x6b
 3345 05ae 02       		.uleb128 0x2
 3346 05af 91       		.byte	0x91
 3347 05b0 77       		.sleb128 -9
 3348 05b1 00       		.byte	0
 3349 05b2 11       		.uleb128 0x11
 3350 05b3 AE040000 		.4byte	.LASF67
 3351 05b7 01       		.byte	0x1
 3352 05b8 BF09     		.2byte	0x9bf
 3353 05ba 00000000 		.4byte	.LFB24
 3354 05be 16000000 		.4byte	.LFE24-.LFB24
 3355 05c2 01       		.uleb128 0x1
 3356 05c3 9C       		.byte	0x9c
 3357 05c4 D8050000 		.4byte	0x5d8
 3358 05c8 0B       		.uleb128 0xb
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 114


 3359 05c9 F5040000 		.4byte	.LASF43
 3360 05cd 01       		.byte	0x1
 3361 05ce BF09     		.2byte	0x9bf
 3362 05d0 6B000000 		.4byte	0x6b
 3363 05d4 02       		.uleb128 0x2
 3364 05d5 91       		.byte	0x91
 3365 05d6 77       		.sleb128 -9
 3366 05d7 00       		.byte	0
 3367 05d8 0E       		.uleb128 0xe
 3368 05d9 DB000000 		.4byte	.LASF68
 3369 05dd 01       		.byte	0x1
 3370 05de DE09     		.2byte	0x9de
 3371 05e0 00000000 		.4byte	.LFB25
 3372 05e4 24000000 		.4byte	.LFE25-.LFB25
 3373 05e8 01       		.uleb128 0x1
 3374 05e9 9C       		.byte	0x9c
 3375 05ea 0A       		.uleb128 0xa
 3376 05eb 74050000 		.4byte	.LASF69
 3377 05ef 01       		.byte	0x1
 3378 05f0 F709     		.2byte	0x9f7
 3379 05f2 00000000 		.4byte	.LFB26
 3380 05f6 4C000000 		.4byte	.LFE26-.LFB26
 3381 05fa 01       		.uleb128 0x1
 3382 05fb 9C       		.byte	0x9c
 3383 05fc 10060000 		.4byte	0x610
 3384 0600 0B       		.uleb128 0xb
 3385 0601 92040000 		.4byte	.LASF70
 3386 0605 01       		.byte	0x1
 3387 0606 F709     		.2byte	0x9f7
 3388 0608 83000000 		.4byte	0x83
 3389 060c 02       		.uleb128 0x2
 3390 060d 91       		.byte	0x91
 3391 060e 74       		.sleb128 -12
 3392 060f 00       		.byte	0
 3393 0610 0A       		.uleb128 0xa
 3394 0611 9F010000 		.4byte	.LASF71
 3395 0615 01       		.byte	0x1
 3396 0616 130A     		.2byte	0xa13
 3397 0618 00000000 		.4byte	.LFB27
 3398 061c 28000000 		.4byte	.LFE27-.LFB27
 3399 0620 01       		.uleb128 0x1
 3400 0621 9C       		.byte	0x9c
 3401 0622 36060000 		.4byte	0x636
 3402 0626 0B       		.uleb128 0xb
 3403 0627 0C060000 		.4byte	.LASF72
 3404 062b 01       		.byte	0x1
 3405 062c 130A     		.2byte	0xa13
 3406 062e 77000000 		.4byte	0x77
 3407 0632 02       		.uleb128 0x2
 3408 0633 91       		.byte	0x91
 3409 0634 76       		.sleb128 -10
 3410 0635 00       		.byte	0
 3411 0636 0A       		.uleb128 0xa
 3412 0637 31010000 		.4byte	.LASF73
 3413 063b 01       		.byte	0x1
 3414 063c 260A     		.2byte	0xa26
 3415 063e 00000000 		.4byte	.LFB28
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 115


 3416 0642 84000000 		.4byte	.LFE28-.LFB28
 3417 0646 01       		.uleb128 0x1
 3418 0647 9C       		.byte	0x9c
 3419 0648 5C060000 		.4byte	0x65c
 3420 064c 0B       		.uleb128 0xb
 3421 064d 2C010000 		.4byte	.LASF31
 3422 0651 01       		.byte	0x1
 3423 0652 260A     		.2byte	0xa26
 3424 0654 83000000 		.4byte	0x83
 3425 0658 02       		.uleb128 0x2
 3426 0659 91       		.byte	0x91
 3427 065a 74       		.sleb128 -12
 3428 065b 00       		.byte	0
 3429 065c 12       		.uleb128 0x12
 3430 065d B1030000 		.4byte	.LASF74
 3431 0661 01       		.byte	0x1
 3432 0662 490A     		.2byte	0xa49
 3433 0664 00000000 		.4byte	.LFB29
 3434 0668 24000000 		.4byte	.LFE29-.LFB29
 3435 066c 01       		.uleb128 0x1
 3436 066d 9C       		.byte	0x9c
 3437 066e 0A       		.uleb128 0xa
 3438 066f 0F020000 		.4byte	.LASF75
 3439 0673 01       		.byte	0x1
 3440 0674 6D0A     		.2byte	0xa6d
 3441 0676 00000000 		.4byte	.LFB30
 3442 067a 60000000 		.4byte	.LFE30-.LFB30
 3443 067e 01       		.uleb128 0x1
 3444 067f 9C       		.byte	0x9c
 3445 0680 92060000 		.4byte	0x692
 3446 0684 13       		.uleb128 0x13
 3447 0685 6900     		.ascii	"i\000"
 3448 0687 01       		.byte	0x1
 3449 0688 6F0A     		.2byte	0xa6f
 3450 068a 83000000 		.4byte	0x83
 3451 068e 02       		.uleb128 0x2
 3452 068f 91       		.byte	0x91
 3453 0690 74       		.sleb128 -12
 3454 0691 00       		.byte	0
 3455 0692 12       		.uleb128 0x12
 3456 0693 0E050000 		.4byte	.LASF76
 3457 0697 01       		.byte	0x1
 3458 0698 930A     		.2byte	0xa93
 3459 069a 00000000 		.4byte	.LFB31
 3460 069e 20000000 		.4byte	.LFE31-.LFB31
 3461 06a2 01       		.uleb128 0x1
 3462 06a3 9C       		.byte	0x9c
 3463 06a4 0E       		.uleb128 0xe
 3464 06a5 B5050000 		.4byte	.LASF77
 3465 06a9 01       		.byte	0x1
 3466 06aa AB0A     		.2byte	0xaab
 3467 06ac 00000000 		.4byte	.LFB32
 3468 06b0 1C000000 		.4byte	.LFE32-.LFB32
 3469 06b4 01       		.uleb128 0x1
 3470 06b5 9C       		.byte	0x9c
 3471 06b6 0E       		.uleb128 0xe
 3472 06b7 EB000000 		.4byte	.LASF78
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 116


 3473 06bb 01       		.byte	0x1
 3474 06bc C20A     		.2byte	0xac2
 3475 06be 00000000 		.4byte	.LFB33
 3476 06c2 1C000000 		.4byte	.LFE33-.LFB33
 3477 06c6 01       		.uleb128 0x1
 3478 06c7 9C       		.byte	0x9c
 3479 06c8 0E       		.uleb128 0xe
 3480 06c9 7C050000 		.4byte	.LASF79
 3481 06cd 01       		.byte	0x1
 3482 06ce D90A     		.2byte	0xad9
 3483 06d0 00000000 		.4byte	.LFB34
 3484 06d4 1C000000 		.4byte	.LFE34-.LFB34
 3485 06d8 01       		.uleb128 0x1
 3486 06d9 9C       		.byte	0x9c
 3487 06da 11       		.uleb128 0x11
 3488 06db 20060000 		.4byte	.LASF80
 3489 06df 01       		.byte	0x1
 3490 06e0 EF0A     		.2byte	0xaef
 3491 06e2 00000000 		.4byte	.LFB35
 3492 06e6 20000000 		.4byte	.LFE35-.LFB35
 3493 06ea 01       		.uleb128 0x1
 3494 06eb 9C       		.byte	0x9c
 3495 06ec 00070000 		.4byte	0x700
 3496 06f0 0B       		.uleb128 0xb
 3497 06f1 1D020000 		.4byte	.LASF60
 3498 06f5 01       		.byte	0x1
 3499 06f6 EF0A     		.2byte	0xaef
 3500 06f8 83000000 		.4byte	0x83
 3501 06fc 02       		.uleb128 0x2
 3502 06fd 91       		.byte	0x91
 3503 06fe 74       		.sleb128 -12
 3504 06ff 00       		.byte	0
 3505 0700 0F       		.uleb128 0xf
 3506 0701 4C010000 		.4byte	.LASF82
 3507 0705 01       		.byte	0x1
 3508 0706 030B     		.2byte	0xb03
 3509 0708 83000000 		.4byte	0x83
 3510 070c 00000000 		.4byte	.LFB36
 3511 0710 18000000 		.4byte	.LFE36-.LFB36
 3512 0714 01       		.uleb128 0x1
 3513 0715 9C       		.byte	0x9c
 3514 0716 0F       		.uleb128 0xf
 3515 0717 2B040000 		.4byte	.LASF83
 3516 071b 01       		.byte	0x1
 3517 071c 170B     		.2byte	0xb17
 3518 071e 83000000 		.4byte	0x83
 3519 0722 00000000 		.4byte	.LFB37
 3520 0726 18000000 		.4byte	.LFE37-.LFB37
 3521 072a 01       		.uleb128 0x1
 3522 072b 9C       		.byte	0x9c
 3523 072c 0F       		.uleb128 0xf
 3524 072d 31020000 		.4byte	.LASF84
 3525 0731 01       		.byte	0x1
 3526 0732 5A0B     		.2byte	0xb5a
 3527 0734 83000000 		.4byte	0x83
 3528 0738 00000000 		.4byte	.LFB38
 3529 073c 18000000 		.4byte	.LFE38-.LFB38
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 117


 3530 0740 01       		.uleb128 0x1
 3531 0741 9C       		.byte	0x9c
 3532 0742 0E       		.uleb128 0xe
 3533 0743 54020000 		.4byte	.LASF85
 3534 0747 01       		.byte	0x1
 3535 0748 6E0B     		.2byte	0xb6e
 3536 074a 00000000 		.4byte	.LFB39
 3537 074e 14000000 		.4byte	.LFE39-.LFB39
 3538 0752 01       		.uleb128 0x1
 3539 0753 9C       		.byte	0x9c
 3540 0754 10       		.uleb128 0x10
 3541 0755 35050000 		.4byte	.LASF86
 3542 0759 01       		.byte	0x1
 3543 075a 930B     		.2byte	0xb93
 3544 075c E7000000 		.4byte	0xe7
 3545 0760 00000000 		.4byte	.LFB40
 3546 0764 2C000000 		.4byte	.LFE40-.LFB40
 3547 0768 01       		.uleb128 0x1
 3548 0769 9C       		.byte	0x9c
 3549 076a 9C070000 		.4byte	0x79c
 3550 076e 0B       		.uleb128 0xb
 3551 076f E6020000 		.4byte	.LASF50
 3552 0773 01       		.byte	0x1
 3553 0774 930B     		.2byte	0xb93
 3554 0776 83000000 		.4byte	0x83
 3555 077a 02       		.uleb128 0x2
 3556 077b 91       		.byte	0x91
 3557 077c 6C       		.sleb128 -20
 3558 077d 0B       		.uleb128 0xb
 3559 077e 11040000 		.4byte	.LASF87
 3560 0782 01       		.byte	0x1
 3561 0783 930B     		.2byte	0xb93
 3562 0785 E7000000 		.4byte	0xe7
 3563 0789 02       		.uleb128 0x2
 3564 078a 91       		.byte	0x91
 3565 078b 68       		.sleb128 -24
 3566 078c 0C       		.uleb128 0xc
 3567 078d 7C000000 		.4byte	.LASF88
 3568 0791 01       		.byte	0x1
 3569 0792 950B     		.2byte	0xb95
 3570 0794 E7000000 		.4byte	0xe7
 3571 0798 02       		.uleb128 0x2
 3572 0799 91       		.byte	0x91
 3573 079a 74       		.sleb128 -12
 3574 079b 00       		.byte	0
 3575 079c 10       		.uleb128 0x10
 3576 079d 75010000 		.4byte	.LASF89
 3577 07a1 01       		.byte	0x1
 3578 07a2 AD0B     		.2byte	0xbad
 3579 07a4 E7000000 		.4byte	0xe7
 3580 07a8 00000000 		.4byte	.LFB41
 3581 07ac 1C000000 		.4byte	.LFE41-.LFB41
 3582 07b0 01       		.uleb128 0x1
 3583 07b1 9C       		.byte	0x9c
 3584 07b2 C6070000 		.4byte	0x7c6
 3585 07b6 0B       		.uleb128 0xb
 3586 07b7 E6020000 		.4byte	.LASF50
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 118


 3587 07bb 01       		.byte	0x1
 3588 07bc AD0B     		.2byte	0xbad
 3589 07be 83000000 		.4byte	0x83
 3590 07c2 02       		.uleb128 0x2
 3591 07c3 91       		.byte	0x91
 3592 07c4 74       		.sleb128 -12
 3593 07c5 00       		.byte	0
 3594 07c6 14       		.uleb128 0x14
 3595 07c7 33060000 		.4byte	.LASF102
 3596 07cb 01       		.byte	0x1
 3597 07cc C10B     		.2byte	0xbc1
 3598 07ce 00000000 		.4byte	.LFB42
 3599 07d2 44000000 		.4byte	.LFE42-.LFB42
 3600 07d6 01       		.uleb128 0x1
 3601 07d7 9C       		.byte	0x9c
 3602 07d8 EA070000 		.4byte	0x7ea
 3603 07dc 13       		.uleb128 0x13
 3604 07dd 6900     		.ascii	"i\000"
 3605 07df 01       		.byte	0x1
 3606 07e0 C30B     		.2byte	0xbc3
 3607 07e2 83000000 		.4byte	0x83
 3608 07e6 02       		.uleb128 0x2
 3609 07e7 91       		.byte	0x91
 3610 07e8 74       		.sleb128 -12
 3611 07e9 00       		.byte	0
 3612 07ea 11       		.uleb128 0x11
 3613 07eb 23020000 		.4byte	.LASF90
 3614 07ef 01       		.byte	0x1
 3615 07f0 E60B     		.2byte	0xbe6
 3616 07f2 00000000 		.4byte	.LFB43
 3617 07f6 C0000000 		.4byte	.LFE43-.LFB43
 3618 07fa 01       		.uleb128 0x1
 3619 07fb 9C       		.byte	0x9c
 3620 07fc 10080000 		.4byte	0x810
 3621 0800 0B       		.uleb128 0xb
 3622 0801 6B050000 		.4byte	.LASF91
 3623 0805 01       		.byte	0x1
 3624 0806 E60B     		.2byte	0xbe6
 3625 0808 10080000 		.4byte	0x810
 3626 080c 02       		.uleb128 0x2
 3627 080d 91       		.byte	0x91
 3628 080e 74       		.sleb128 -12
 3629 080f 00       		.byte	0
 3630 0810 06       		.uleb128 0x6
 3631 0811 04       		.byte	0x4
 3632 0812 83000000 		.4byte	0x83
 3633 0816 15       		.uleb128 0x15
 3634 0817 E7000000 		.4byte	0xe7
 3635 081b 26080000 		.4byte	0x826
 3636 081f 16       		.uleb128 0x16
 3637 0820 E0000000 		.4byte	0xe0
 3638 0824 04       		.byte	0x4
 3639 0825 00       		.byte	0
 3640 0826 17       		.uleb128 0x17
 3641 0827 4A050000 		.4byte	.LASF92
 3642 082b 01       		.byte	0x1
 3643 082c 23       		.byte	0x23
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 119


 3644 082d 16080000 		.4byte	0x816
 3645 0831 05       		.uleb128 0x5
 3646 0832 03       		.byte	0x3
 3647 0833 00000000 		.4byte	CySysTickCallbacks
 3648 0837 18       		.uleb128 0x18
 3649 0838 BD000000 		.4byte	.LASF93
 3650 083c 01       		.byte	0x1
 3651 083d 36       		.byte	0x36
 3652 083e 83000000 		.4byte	0x83
 3653 0842 05       		.uleb128 0x5
 3654 0843 03       		.byte	0x3
 3655 0844 00000000 		.4byte	CySysTickInitVar
 3656 0848 18       		.uleb128 0x18
 3657 0849 3D040000 		.4byte	.LASF94
 3658 084d 01       		.byte	0x1
 3659 084e 1C       		.byte	0x1c
 3660 084f 83000000 		.4byte	0x83
 3661 0853 05       		.uleb128 0x5
 3662 0854 03       		.byte	0x3
 3663 0855 00000000 		.4byte	cydelayFreqHz
 3664 0859 18       		.uleb128 0x18
 3665 085a 90010000 		.4byte	.LASF95
 3666 085e 01       		.byte	0x1
 3667 085f 1D       		.byte	0x1d
 3668 0860 83000000 		.4byte	0x83
 3669 0864 05       		.uleb128 0x5
 3670 0865 03       		.byte	0x3
 3671 0866 00000000 		.4byte	cydelayFreqKhz
 3672 086a 18       		.uleb128 0x18
 3673 086b A6050000 		.4byte	.LASF96
 3674 086f 01       		.byte	0x1
 3675 0870 1E       		.byte	0x1e
 3676 0871 6B000000 		.4byte	0x6b
 3677 0875 05       		.uleb128 0x5
 3678 0876 03       		.byte	0x3
 3679 0877 00000000 		.4byte	cydelayFreqMhz
 3680 087b 18       		.uleb128 0x18
 3681 087c 02020000 		.4byte	.LASF97
 3682 0880 01       		.byte	0x1
 3683 0881 1F       		.byte	0x1f
 3684 0882 83000000 		.4byte	0x83
 3685 0886 05       		.uleb128 0x5
 3686 0887 03       		.byte	0x3
 3687 0888 00000000 		.4byte	cydelay32kMs
 3688 088c 15       		.uleb128 0x15
 3689 088d 9C080000 		.4byte	0x89c
 3690 0891 9C080000 		.4byte	0x89c
 3691 0895 16       		.uleb128 0x16
 3692 0896 E0000000 		.4byte	0xe0
 3693 089a 2D       		.byte	0x2d
 3694 089b 00       		.byte	0
 3695 089c 19       		.uleb128 0x19
 3696 089d 6B000000 		.4byte	0x6b
 3697 08a1 18       		.uleb128 0x18
 3698 08a2 1A040000 		.4byte	.LASF98
 3699 08a6 01       		.byte	0x1
 3700 08a7 3B       		.byte	0x3b
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 120


 3701 08a8 B2080000 		.4byte	0x8b2
 3702 08ac 05       		.uleb128 0x5
 3703 08ad 03       		.byte	0x3
 3704 08ae 00000000 		.4byte	cyImoFreqMhz2Reg
 3705 08b2 19       		.uleb128 0x19
 3706 08b3 8C080000 		.4byte	0x88c
 3707 08b7 00       		.byte	0
 3708              		.section	.debug_abbrev,"",%progbits
 3709              	.Ldebug_abbrev0:
 3710 0000 01       		.uleb128 0x1
 3711 0001 11       		.uleb128 0x11
 3712 0002 01       		.byte	0x1
 3713 0003 25       		.uleb128 0x25
 3714 0004 0E       		.uleb128 0xe
 3715 0005 13       		.uleb128 0x13
 3716 0006 0B       		.uleb128 0xb
 3717 0007 03       		.uleb128 0x3
 3718 0008 0E       		.uleb128 0xe
 3719 0009 1B       		.uleb128 0x1b
 3720 000a 0E       		.uleb128 0xe
 3721 000b 55       		.uleb128 0x55
 3722 000c 17       		.uleb128 0x17
 3723 000d 11       		.uleb128 0x11
 3724 000e 01       		.uleb128 0x1
 3725 000f 10       		.uleb128 0x10
 3726 0010 17       		.uleb128 0x17
 3727 0011 00       		.byte	0
 3728 0012 00       		.byte	0
 3729 0013 02       		.uleb128 0x2
 3730 0014 24       		.uleb128 0x24
 3731 0015 00       		.byte	0
 3732 0016 0B       		.uleb128 0xb
 3733 0017 0B       		.uleb128 0xb
 3734 0018 3E       		.uleb128 0x3e
 3735 0019 0B       		.uleb128 0xb
 3736 001a 03       		.uleb128 0x3
 3737 001b 0E       		.uleb128 0xe
 3738 001c 00       		.byte	0
 3739 001d 00       		.byte	0
 3740 001e 03       		.uleb128 0x3
 3741 001f 24       		.uleb128 0x24
 3742 0020 00       		.byte	0
 3743 0021 0B       		.uleb128 0xb
 3744 0022 0B       		.uleb128 0xb
 3745 0023 3E       		.uleb128 0x3e
 3746 0024 0B       		.uleb128 0xb
 3747 0025 03       		.uleb128 0x3
 3748 0026 08       		.uleb128 0x8
 3749 0027 00       		.byte	0
 3750 0028 00       		.byte	0
 3751 0029 04       		.uleb128 0x4
 3752 002a 16       		.uleb128 0x16
 3753 002b 00       		.byte	0
 3754 002c 03       		.uleb128 0x3
 3755 002d 0E       		.uleb128 0xe
 3756 002e 3A       		.uleb128 0x3a
 3757 002f 0B       		.uleb128 0xb
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 121


 3758 0030 3B       		.uleb128 0x3b
 3759 0031 05       		.uleb128 0x5
 3760 0032 49       		.uleb128 0x49
 3761 0033 13       		.uleb128 0x13
 3762 0034 00       		.byte	0
 3763 0035 00       		.byte	0
 3764 0036 05       		.uleb128 0x5
 3765 0037 35       		.uleb128 0x35
 3766 0038 00       		.byte	0
 3767 0039 49       		.uleb128 0x49
 3768 003a 13       		.uleb128 0x13
 3769 003b 00       		.byte	0
 3770 003c 00       		.byte	0
 3771 003d 06       		.uleb128 0x6
 3772 003e 0F       		.uleb128 0xf
 3773 003f 00       		.byte	0
 3774 0040 0B       		.uleb128 0xb
 3775 0041 0B       		.uleb128 0xb
 3776 0042 49       		.uleb128 0x49
 3777 0043 13       		.uleb128 0x13
 3778 0044 00       		.byte	0
 3779 0045 00       		.byte	0
 3780 0046 07       		.uleb128 0x7
 3781 0047 15       		.uleb128 0x15
 3782 0048 00       		.byte	0
 3783 0049 27       		.uleb128 0x27
 3784 004a 19       		.uleb128 0x19
 3785 004b 00       		.byte	0
 3786 004c 00       		.byte	0
 3787 004d 08       		.uleb128 0x8
 3788 004e 16       		.uleb128 0x16
 3789 004f 00       		.byte	0
 3790 0050 03       		.uleb128 0x3
 3791 0051 0E       		.uleb128 0xe
 3792 0052 3A       		.uleb128 0x3a
 3793 0053 0B       		.uleb128 0xb
 3794 0054 3B       		.uleb128 0x3b
 3795 0055 0B       		.uleb128 0xb
 3796 0056 49       		.uleb128 0x49
 3797 0057 13       		.uleb128 0x13
 3798 0058 00       		.byte	0
 3799 0059 00       		.byte	0
 3800 005a 09       		.uleb128 0x9
 3801 005b 2E       		.uleb128 0x2e
 3802 005c 00       		.byte	0
 3803 005d 3F       		.uleb128 0x3f
 3804 005e 19       		.uleb128 0x19
 3805 005f 03       		.uleb128 0x3
 3806 0060 0E       		.uleb128 0xe
 3807 0061 3A       		.uleb128 0x3a
 3808 0062 0B       		.uleb128 0xb
 3809 0063 3B       		.uleb128 0x3b
 3810 0064 0B       		.uleb128 0xb
 3811 0065 27       		.uleb128 0x27
 3812 0066 19       		.uleb128 0x19
 3813 0067 11       		.uleb128 0x11
 3814 0068 01       		.uleb128 0x1
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 122


 3815 0069 12       		.uleb128 0x12
 3816 006a 06       		.uleb128 0x6
 3817 006b 40       		.uleb128 0x40
 3818 006c 18       		.uleb128 0x18
 3819 006d 9742     		.uleb128 0x2117
 3820 006f 19       		.uleb128 0x19
 3821 0070 00       		.byte	0
 3822 0071 00       		.byte	0
 3823 0072 0A       		.uleb128 0xa
 3824 0073 2E       		.uleb128 0x2e
 3825 0074 01       		.byte	0x1
 3826 0075 3F       		.uleb128 0x3f
 3827 0076 19       		.uleb128 0x19
 3828 0077 03       		.uleb128 0x3
 3829 0078 0E       		.uleb128 0xe
 3830 0079 3A       		.uleb128 0x3a
 3831 007a 0B       		.uleb128 0xb
 3832 007b 3B       		.uleb128 0x3b
 3833 007c 05       		.uleb128 0x5
 3834 007d 27       		.uleb128 0x27
 3835 007e 19       		.uleb128 0x19
 3836 007f 11       		.uleb128 0x11
 3837 0080 01       		.uleb128 0x1
 3838 0081 12       		.uleb128 0x12
 3839 0082 06       		.uleb128 0x6
 3840 0083 40       		.uleb128 0x40
 3841 0084 18       		.uleb128 0x18
 3842 0085 9642     		.uleb128 0x2116
 3843 0087 19       		.uleb128 0x19
 3844 0088 01       		.uleb128 0x1
 3845 0089 13       		.uleb128 0x13
 3846 008a 00       		.byte	0
 3847 008b 00       		.byte	0
 3848 008c 0B       		.uleb128 0xb
 3849 008d 05       		.uleb128 0x5
 3850 008e 00       		.byte	0
 3851 008f 03       		.uleb128 0x3
 3852 0090 0E       		.uleb128 0xe
 3853 0091 3A       		.uleb128 0x3a
 3854 0092 0B       		.uleb128 0xb
 3855 0093 3B       		.uleb128 0x3b
 3856 0094 05       		.uleb128 0x5
 3857 0095 49       		.uleb128 0x49
 3858 0096 13       		.uleb128 0x13
 3859 0097 02       		.uleb128 0x2
 3860 0098 18       		.uleb128 0x18
 3861 0099 00       		.byte	0
 3862 009a 00       		.byte	0
 3863 009b 0C       		.uleb128 0xc
 3864 009c 34       		.uleb128 0x34
 3865 009d 00       		.byte	0
 3866 009e 03       		.uleb128 0x3
 3867 009f 0E       		.uleb128 0xe
 3868 00a0 3A       		.uleb128 0x3a
 3869 00a1 0B       		.uleb128 0xb
 3870 00a2 3B       		.uleb128 0x3b
 3871 00a3 05       		.uleb128 0x5
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 123


 3872 00a4 49       		.uleb128 0x49
 3873 00a5 13       		.uleb128 0x13
 3874 00a6 02       		.uleb128 0x2
 3875 00a7 18       		.uleb128 0x18
 3876 00a8 00       		.byte	0
 3877 00a9 00       		.byte	0
 3878 00aa 0D       		.uleb128 0xd
 3879 00ab 2E       		.uleb128 0x2e
 3880 00ac 01       		.byte	0x1
 3881 00ad 3F       		.uleb128 0x3f
 3882 00ae 19       		.uleb128 0x19
 3883 00af 03       		.uleb128 0x3
 3884 00b0 0E       		.uleb128 0xe
 3885 00b1 3A       		.uleb128 0x3a
 3886 00b2 0B       		.uleb128 0xb
 3887 00b3 3B       		.uleb128 0x3b
 3888 00b4 05       		.uleb128 0x5
 3889 00b5 27       		.uleb128 0x27
 3890 00b6 19       		.uleb128 0x19
 3891 00b7 49       		.uleb128 0x49
 3892 00b8 13       		.uleb128 0x13
 3893 00b9 11       		.uleb128 0x11
 3894 00ba 01       		.uleb128 0x1
 3895 00bb 12       		.uleb128 0x12
 3896 00bc 06       		.uleb128 0x6
 3897 00bd 40       		.uleb128 0x40
 3898 00be 18       		.uleb128 0x18
 3899 00bf 9642     		.uleb128 0x2116
 3900 00c1 19       		.uleb128 0x19
 3901 00c2 01       		.uleb128 0x1
 3902 00c3 13       		.uleb128 0x13
 3903 00c4 00       		.byte	0
 3904 00c5 00       		.byte	0
 3905 00c6 0E       		.uleb128 0xe
 3906 00c7 2E       		.uleb128 0x2e
 3907 00c8 00       		.byte	0
 3908 00c9 3F       		.uleb128 0x3f
 3909 00ca 19       		.uleb128 0x19
 3910 00cb 03       		.uleb128 0x3
 3911 00cc 0E       		.uleb128 0xe
 3912 00cd 3A       		.uleb128 0x3a
 3913 00ce 0B       		.uleb128 0xb
 3914 00cf 3B       		.uleb128 0x3b
 3915 00d0 05       		.uleb128 0x5
 3916 00d1 27       		.uleb128 0x27
 3917 00d2 19       		.uleb128 0x19
 3918 00d3 11       		.uleb128 0x11
 3919 00d4 01       		.uleb128 0x1
 3920 00d5 12       		.uleb128 0x12
 3921 00d6 06       		.uleb128 0x6
 3922 00d7 40       		.uleb128 0x40
 3923 00d8 18       		.uleb128 0x18
 3924 00d9 9742     		.uleb128 0x2117
 3925 00db 19       		.uleb128 0x19
 3926 00dc 00       		.byte	0
 3927 00dd 00       		.byte	0
 3928 00de 0F       		.uleb128 0xf
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 124


 3929 00df 2E       		.uleb128 0x2e
 3930 00e0 00       		.byte	0
 3931 00e1 3F       		.uleb128 0x3f
 3932 00e2 19       		.uleb128 0x19
 3933 00e3 03       		.uleb128 0x3
 3934 00e4 0E       		.uleb128 0xe
 3935 00e5 3A       		.uleb128 0x3a
 3936 00e6 0B       		.uleb128 0xb
 3937 00e7 3B       		.uleb128 0x3b
 3938 00e8 05       		.uleb128 0x5
 3939 00e9 27       		.uleb128 0x27
 3940 00ea 19       		.uleb128 0x19
 3941 00eb 49       		.uleb128 0x49
 3942 00ec 13       		.uleb128 0x13
 3943 00ed 11       		.uleb128 0x11
 3944 00ee 01       		.uleb128 0x1
 3945 00ef 12       		.uleb128 0x12
 3946 00f0 06       		.uleb128 0x6
 3947 00f1 40       		.uleb128 0x40
 3948 00f2 18       		.uleb128 0x18
 3949 00f3 9742     		.uleb128 0x2117
 3950 00f5 19       		.uleb128 0x19
 3951 00f6 00       		.byte	0
 3952 00f7 00       		.byte	0
 3953 00f8 10       		.uleb128 0x10
 3954 00f9 2E       		.uleb128 0x2e
 3955 00fa 01       		.byte	0x1
 3956 00fb 3F       		.uleb128 0x3f
 3957 00fc 19       		.uleb128 0x19
 3958 00fd 03       		.uleb128 0x3
 3959 00fe 0E       		.uleb128 0xe
 3960 00ff 3A       		.uleb128 0x3a
 3961 0100 0B       		.uleb128 0xb
 3962 0101 3B       		.uleb128 0x3b
 3963 0102 05       		.uleb128 0x5
 3964 0103 27       		.uleb128 0x27
 3965 0104 19       		.uleb128 0x19
 3966 0105 49       		.uleb128 0x49
 3967 0106 13       		.uleb128 0x13
 3968 0107 11       		.uleb128 0x11
 3969 0108 01       		.uleb128 0x1
 3970 0109 12       		.uleb128 0x12
 3971 010a 06       		.uleb128 0x6
 3972 010b 40       		.uleb128 0x40
 3973 010c 18       		.uleb128 0x18
 3974 010d 9742     		.uleb128 0x2117
 3975 010f 19       		.uleb128 0x19
 3976 0110 01       		.uleb128 0x1
 3977 0111 13       		.uleb128 0x13
 3978 0112 00       		.byte	0
 3979 0113 00       		.byte	0
 3980 0114 11       		.uleb128 0x11
 3981 0115 2E       		.uleb128 0x2e
 3982 0116 01       		.byte	0x1
 3983 0117 3F       		.uleb128 0x3f
 3984 0118 19       		.uleb128 0x19
 3985 0119 03       		.uleb128 0x3
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 125


 3986 011a 0E       		.uleb128 0xe
 3987 011b 3A       		.uleb128 0x3a
 3988 011c 0B       		.uleb128 0xb
 3989 011d 3B       		.uleb128 0x3b
 3990 011e 05       		.uleb128 0x5
 3991 011f 27       		.uleb128 0x27
 3992 0120 19       		.uleb128 0x19
 3993 0121 11       		.uleb128 0x11
 3994 0122 01       		.uleb128 0x1
 3995 0123 12       		.uleb128 0x12
 3996 0124 06       		.uleb128 0x6
 3997 0125 40       		.uleb128 0x40
 3998 0126 18       		.uleb128 0x18
 3999 0127 9742     		.uleb128 0x2117
 4000 0129 19       		.uleb128 0x19
 4001 012a 01       		.uleb128 0x1
 4002 012b 13       		.uleb128 0x13
 4003 012c 00       		.byte	0
 4004 012d 00       		.byte	0
 4005 012e 12       		.uleb128 0x12
 4006 012f 2E       		.uleb128 0x2e
 4007 0130 00       		.byte	0
 4008 0131 3F       		.uleb128 0x3f
 4009 0132 19       		.uleb128 0x19
 4010 0133 03       		.uleb128 0x3
 4011 0134 0E       		.uleb128 0xe
 4012 0135 3A       		.uleb128 0x3a
 4013 0136 0B       		.uleb128 0xb
 4014 0137 3B       		.uleb128 0x3b
 4015 0138 05       		.uleb128 0x5
 4016 0139 27       		.uleb128 0x27
 4017 013a 19       		.uleb128 0x19
 4018 013b 11       		.uleb128 0x11
 4019 013c 01       		.uleb128 0x1
 4020 013d 12       		.uleb128 0x12
 4021 013e 06       		.uleb128 0x6
 4022 013f 40       		.uleb128 0x40
 4023 0140 18       		.uleb128 0x18
 4024 0141 9642     		.uleb128 0x2116
 4025 0143 19       		.uleb128 0x19
 4026 0144 00       		.byte	0
 4027 0145 00       		.byte	0
 4028 0146 13       		.uleb128 0x13
 4029 0147 34       		.uleb128 0x34
 4030 0148 00       		.byte	0
 4031 0149 03       		.uleb128 0x3
 4032 014a 08       		.uleb128 0x8
 4033 014b 3A       		.uleb128 0x3a
 4034 014c 0B       		.uleb128 0xb
 4035 014d 3B       		.uleb128 0x3b
 4036 014e 05       		.uleb128 0x5
 4037 014f 49       		.uleb128 0x49
 4038 0150 13       		.uleb128 0x13
 4039 0151 02       		.uleb128 0x2
 4040 0152 18       		.uleb128 0x18
 4041 0153 00       		.byte	0
 4042 0154 00       		.byte	0
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 126


 4043 0155 14       		.uleb128 0x14
 4044 0156 2E       		.uleb128 0x2e
 4045 0157 01       		.byte	0x1
 4046 0158 03       		.uleb128 0x3
 4047 0159 0E       		.uleb128 0xe
 4048 015a 3A       		.uleb128 0x3a
 4049 015b 0B       		.uleb128 0xb
 4050 015c 3B       		.uleb128 0x3b
 4051 015d 05       		.uleb128 0x5
 4052 015e 27       		.uleb128 0x27
 4053 015f 19       		.uleb128 0x19
 4054 0160 11       		.uleb128 0x11
 4055 0161 01       		.uleb128 0x1
 4056 0162 12       		.uleb128 0x12
 4057 0163 06       		.uleb128 0x6
 4058 0164 40       		.uleb128 0x40
 4059 0165 18       		.uleb128 0x18
 4060 0166 9642     		.uleb128 0x2116
 4061 0168 19       		.uleb128 0x19
 4062 0169 01       		.uleb128 0x1
 4063 016a 13       		.uleb128 0x13
 4064 016b 00       		.byte	0
 4065 016c 00       		.byte	0
 4066 016d 15       		.uleb128 0x15
 4067 016e 01       		.uleb128 0x1
 4068 016f 01       		.byte	0x1
 4069 0170 49       		.uleb128 0x49
 4070 0171 13       		.uleb128 0x13
 4071 0172 01       		.uleb128 0x1
 4072 0173 13       		.uleb128 0x13
 4073 0174 00       		.byte	0
 4074 0175 00       		.byte	0
 4075 0176 16       		.uleb128 0x16
 4076 0177 21       		.uleb128 0x21
 4077 0178 00       		.byte	0
 4078 0179 49       		.uleb128 0x49
 4079 017a 13       		.uleb128 0x13
 4080 017b 2F       		.uleb128 0x2f
 4081 017c 0B       		.uleb128 0xb
 4082 017d 00       		.byte	0
 4083 017e 00       		.byte	0
 4084 017f 17       		.uleb128 0x17
 4085 0180 34       		.uleb128 0x34
 4086 0181 00       		.byte	0
 4087 0182 03       		.uleb128 0x3
 4088 0183 0E       		.uleb128 0xe
 4089 0184 3A       		.uleb128 0x3a
 4090 0185 0B       		.uleb128 0xb
 4091 0186 3B       		.uleb128 0x3b
 4092 0187 0B       		.uleb128 0xb
 4093 0188 49       		.uleb128 0x49
 4094 0189 13       		.uleb128 0x13
 4095 018a 02       		.uleb128 0x2
 4096 018b 18       		.uleb128 0x18
 4097 018c 00       		.byte	0
 4098 018d 00       		.byte	0
 4099 018e 18       		.uleb128 0x18
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 127


 4100 018f 34       		.uleb128 0x34
 4101 0190 00       		.byte	0
 4102 0191 03       		.uleb128 0x3
 4103 0192 0E       		.uleb128 0xe
 4104 0193 3A       		.uleb128 0x3a
 4105 0194 0B       		.uleb128 0xb
 4106 0195 3B       		.uleb128 0x3b
 4107 0196 0B       		.uleb128 0xb
 4108 0197 49       		.uleb128 0x49
 4109 0198 13       		.uleb128 0x13
 4110 0199 3F       		.uleb128 0x3f
 4111 019a 19       		.uleb128 0x19
 4112 019b 02       		.uleb128 0x2
 4113 019c 18       		.uleb128 0x18
 4114 019d 00       		.byte	0
 4115 019e 00       		.byte	0
 4116 019f 19       		.uleb128 0x19
 4117 01a0 26       		.uleb128 0x26
 4118 01a1 00       		.byte	0
 4119 01a2 49       		.uleb128 0x49
 4120 01a3 13       		.uleb128 0x13
 4121 01a4 00       		.byte	0
 4122 01a5 00       		.byte	0
 4123 01a6 00       		.byte	0
 4124              		.section	.debug_aranges,"",%progbits
 4125 0000 74010000 		.4byte	0x174
 4126 0004 0200     		.2byte	0x2
 4127 0006 00000000 		.4byte	.Ldebug_info0
 4128 000a 04       		.byte	0x4
 4129 000b 00       		.byte	0
 4130 000c 0000     		.2byte	0
 4131 000e 0000     		.2byte	0
 4132 0010 00000000 		.4byte	.LFB0
 4133 0014 1C000000 		.4byte	.LFE0-.LFB0
 4134 0018 00000000 		.4byte	.LFB1
 4135 001c 1C000000 		.4byte	.LFE1-.LFB1
 4136 0020 00000000 		.4byte	.LFB2
 4137 0024 48000000 		.4byte	.LFE2-.LFB2
 4138 0028 00000000 		.4byte	.LFB3
 4139 002c 34000000 		.4byte	.LFE3-.LFB3
 4140 0030 00000000 		.4byte	.LFB4
 4141 0034 48000000 		.4byte	.LFE4-.LFB4
 4142 0038 00000000 		.4byte	.LFB5
 4143 003c EC010000 		.4byte	.LFE5-.LFB5
 4144 0040 00000000 		.4byte	.LFB6
 4145 0044 64000000 		.4byte	.LFE6-.LFB6
 4146 0048 00000000 		.4byte	.LFB7
 4147 004c 2C000000 		.4byte	.LFE7-.LFB7
 4148 0050 00000000 		.4byte	.LFB8
 4149 0054 18000000 		.4byte	.LFE8-.LFB8
 4150 0058 00000000 		.4byte	.LFB9
 4151 005c 14000000 		.4byte	.LFE9-.LFB9
 4152 0060 00000000 		.4byte	.LFB10
 4153 0064 30000000 		.4byte	.LFE10-.LFB10
 4154 0068 00000000 		.4byte	.LFB11
 4155 006c 24000000 		.4byte	.LFE11-.LFB11
 4156 0070 00000000 		.4byte	.LFB12
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 128


 4157 0074 1C000000 		.4byte	.LFE12-.LFB12
 4158 0078 00000000 		.4byte	.LFB13
 4159 007c 48000000 		.4byte	.LFE13-.LFB13
 4160 0080 00000000 		.4byte	.LFB14
 4161 0084 34000000 		.4byte	.LFE14-.LFB14
 4162 0088 00000000 		.4byte	.LFB15
 4163 008c 4C000000 		.4byte	.LFE15-.LFB15
 4164 0090 00000000 		.4byte	.LFB16
 4165 0094 36000000 		.4byte	.LFE16-.LFB16
 4166 0098 00000000 		.4byte	.LFB17
 4167 009c A8000000 		.4byte	.LFE17-.LFB17
 4168 00a0 00000000 		.4byte	.LFB18
 4169 00a4 58000000 		.4byte	.LFE18-.LFB18
 4170 00a8 00000000 		.4byte	.LFB19
 4171 00ac 2C000000 		.4byte	.LFE19-.LFB19
 4172 00b0 00000000 		.4byte	.LFB20
 4173 00b4 30000000 		.4byte	.LFE20-.LFB20
 4174 00b8 00000000 		.4byte	.LFB21
 4175 00bc 2C000000 		.4byte	.LFE21-.LFB21
 4176 00c0 00000000 		.4byte	.LFB22
 4177 00c4 2C000000 		.4byte	.LFE22-.LFB22
 4178 00c8 00000000 		.4byte	.LFB23
 4179 00cc 2C000000 		.4byte	.LFE23-.LFB23
 4180 00d0 00000000 		.4byte	.LFB24
 4181 00d4 16000000 		.4byte	.LFE24-.LFB24
 4182 00d8 00000000 		.4byte	.LFB25
 4183 00dc 24000000 		.4byte	.LFE25-.LFB25
 4184 00e0 00000000 		.4byte	.LFB26
 4185 00e4 4C000000 		.4byte	.LFE26-.LFB26
 4186 00e8 00000000 		.4byte	.LFB27
 4187 00ec 28000000 		.4byte	.LFE27-.LFB27
 4188 00f0 00000000 		.4byte	.LFB28
 4189 00f4 84000000 		.4byte	.LFE28-.LFB28
 4190 00f8 00000000 		.4byte	.LFB29
 4191 00fc 24000000 		.4byte	.LFE29-.LFB29
 4192 0100 00000000 		.4byte	.LFB30
 4193 0104 60000000 		.4byte	.LFE30-.LFB30
 4194 0108 00000000 		.4byte	.LFB31
 4195 010c 20000000 		.4byte	.LFE31-.LFB31
 4196 0110 00000000 		.4byte	.LFB32
 4197 0114 1C000000 		.4byte	.LFE32-.LFB32
 4198 0118 00000000 		.4byte	.LFB33
 4199 011c 1C000000 		.4byte	.LFE33-.LFB33
 4200 0120 00000000 		.4byte	.LFB34
 4201 0124 1C000000 		.4byte	.LFE34-.LFB34
 4202 0128 00000000 		.4byte	.LFB35
 4203 012c 20000000 		.4byte	.LFE35-.LFB35
 4204 0130 00000000 		.4byte	.LFB36
 4205 0134 18000000 		.4byte	.LFE36-.LFB36
 4206 0138 00000000 		.4byte	.LFB37
 4207 013c 18000000 		.4byte	.LFE37-.LFB37
 4208 0140 00000000 		.4byte	.LFB38
 4209 0144 18000000 		.4byte	.LFE38-.LFB38
 4210 0148 00000000 		.4byte	.LFB39
 4211 014c 14000000 		.4byte	.LFE39-.LFB39
 4212 0150 00000000 		.4byte	.LFB40
 4213 0154 2C000000 		.4byte	.LFE40-.LFB40
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 129


 4214 0158 00000000 		.4byte	.LFB41
 4215 015c 1C000000 		.4byte	.LFE41-.LFB41
 4216 0160 00000000 		.4byte	.LFB42
 4217 0164 44000000 		.4byte	.LFE42-.LFB42
 4218 0168 00000000 		.4byte	.LFB43
 4219 016c C0000000 		.4byte	.LFE43-.LFB43
 4220 0170 00000000 		.4byte	0
 4221 0174 00000000 		.4byte	0
 4222              		.section	.debug_ranges,"",%progbits
 4223              	.Ldebug_ranges0:
 4224 0000 00000000 		.4byte	.LFB0
 4225 0004 1C000000 		.4byte	.LFE0
 4226 0008 00000000 		.4byte	.LFB1
 4227 000c 1C000000 		.4byte	.LFE1
 4228 0010 00000000 		.4byte	.LFB2
 4229 0014 48000000 		.4byte	.LFE2
 4230 0018 00000000 		.4byte	.LFB3
 4231 001c 34000000 		.4byte	.LFE3
 4232 0020 00000000 		.4byte	.LFB4
 4233 0024 48000000 		.4byte	.LFE4
 4234 0028 00000000 		.4byte	.LFB5
 4235 002c EC010000 		.4byte	.LFE5
 4236 0030 00000000 		.4byte	.LFB6
 4237 0034 64000000 		.4byte	.LFE6
 4238 0038 00000000 		.4byte	.LFB7
 4239 003c 2C000000 		.4byte	.LFE7
 4240 0040 00000000 		.4byte	.LFB8
 4241 0044 18000000 		.4byte	.LFE8
 4242 0048 00000000 		.4byte	.LFB9
 4243 004c 14000000 		.4byte	.LFE9
 4244 0050 00000000 		.4byte	.LFB10
 4245 0054 30000000 		.4byte	.LFE10
 4246 0058 00000000 		.4byte	.LFB11
 4247 005c 24000000 		.4byte	.LFE11
 4248 0060 00000000 		.4byte	.LFB12
 4249 0064 1C000000 		.4byte	.LFE12
 4250 0068 00000000 		.4byte	.LFB13
 4251 006c 48000000 		.4byte	.LFE13
 4252 0070 00000000 		.4byte	.LFB14
 4253 0074 34000000 		.4byte	.LFE14
 4254 0078 00000000 		.4byte	.LFB15
 4255 007c 4C000000 		.4byte	.LFE15
 4256 0080 00000000 		.4byte	.LFB16
 4257 0084 36000000 		.4byte	.LFE16
 4258 0088 00000000 		.4byte	.LFB17
 4259 008c A8000000 		.4byte	.LFE17
 4260 0090 00000000 		.4byte	.LFB18
 4261 0094 58000000 		.4byte	.LFE18
 4262 0098 00000000 		.4byte	.LFB19
 4263 009c 2C000000 		.4byte	.LFE19
 4264 00a0 00000000 		.4byte	.LFB20
 4265 00a4 30000000 		.4byte	.LFE20
 4266 00a8 00000000 		.4byte	.LFB21
 4267 00ac 2C000000 		.4byte	.LFE21
 4268 00b0 00000000 		.4byte	.LFB22
 4269 00b4 2C000000 		.4byte	.LFE22
 4270 00b8 00000000 		.4byte	.LFB23
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 130


 4271 00bc 2C000000 		.4byte	.LFE23
 4272 00c0 00000000 		.4byte	.LFB24
 4273 00c4 16000000 		.4byte	.LFE24
 4274 00c8 00000000 		.4byte	.LFB25
 4275 00cc 24000000 		.4byte	.LFE25
 4276 00d0 00000000 		.4byte	.LFB26
 4277 00d4 4C000000 		.4byte	.LFE26
 4278 00d8 00000000 		.4byte	.LFB27
 4279 00dc 28000000 		.4byte	.LFE27
 4280 00e0 00000000 		.4byte	.LFB28
 4281 00e4 84000000 		.4byte	.LFE28
 4282 00e8 00000000 		.4byte	.LFB29
 4283 00ec 24000000 		.4byte	.LFE29
 4284 00f0 00000000 		.4byte	.LFB30
 4285 00f4 60000000 		.4byte	.LFE30
 4286 00f8 00000000 		.4byte	.LFB31
 4287 00fc 20000000 		.4byte	.LFE31
 4288 0100 00000000 		.4byte	.LFB32
 4289 0104 1C000000 		.4byte	.LFE32
 4290 0108 00000000 		.4byte	.LFB33
 4291 010c 1C000000 		.4byte	.LFE33
 4292 0110 00000000 		.4byte	.LFB34
 4293 0114 1C000000 		.4byte	.LFE34
 4294 0118 00000000 		.4byte	.LFB35
 4295 011c 20000000 		.4byte	.LFE35
 4296 0120 00000000 		.4byte	.LFB36
 4297 0124 18000000 		.4byte	.LFE36
 4298 0128 00000000 		.4byte	.LFB37
 4299 012c 18000000 		.4byte	.LFE37
 4300 0130 00000000 		.4byte	.LFB38
 4301 0134 18000000 		.4byte	.LFE38
 4302 0138 00000000 		.4byte	.LFB39
 4303 013c 14000000 		.4byte	.LFE39
 4304 0140 00000000 		.4byte	.LFB40
 4305 0144 2C000000 		.4byte	.LFE40
 4306 0148 00000000 		.4byte	.LFB41
 4307 014c 1C000000 		.4byte	.LFE41
 4308 0150 00000000 		.4byte	.LFB42
 4309 0154 44000000 		.4byte	.LFE42
 4310 0158 00000000 		.4byte	.LFB43
 4311 015c C0000000 		.4byte	.LFE43
 4312 0160 00000000 		.4byte	0
 4313 0164 00000000 		.4byte	0
 4314              		.section	.debug_line,"",%progbits
 4315              	.Ldebug_line0:
 4316 0000 5B040000 		.section	.debug_str,"MS",%progbits,1
 4316      02004D00 
 4316      00000201 
 4316      FB0E0D00 
 4316      01010101 
 4317              	.LASF53:
 4318 0000 72616D56 		.ascii	"ramVectorTable\000"
 4318      6563746F 
 4318      72546162 
 4318      6C6500
 4319              	.LASF32:
 4320 000f 62675472 		.ascii	"bgTrim4\000"
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 131


 4320      696D3400 
 4321              	.LASF10:
 4322 0017 75696E74 		.ascii	"uint16\000"
 4322      313600
 4323              	.LASF46:
 4324 001e 696E7453 		.ascii	"intState\000"
 4324      74617465 
 4324      00
 4325              	.LASF26:
 4326 0027 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 4326      73436C6B 
 4326      57726974 
 4326      65486663 
 4326      6C6B4469 
 4327              	.LASF101:
 4328 0040 433A5C55 		.ascii	"C:\\Users\\fabis\\Desktop\\CE210558_GPIO_Interrupt."
 4328      73657273 
 4328      5C666162 
 4328      69735C44 
 4328      65736B74 
 4329 006f 63796473 		.ascii	"cydsn\000"
 4329      6E00
 4330              	.LASF52:
 4331 0075 6F6C6449 		.ascii	"oldIsr\000"
 4331      737200
 4332              	.LASF88:
 4333 007c 72657456 		.ascii	"retVal\000"
 4333      616C00
 4334              	.LASF45:
 4335 0083 43794469 		.ascii	"CyDisableInts\000"
 4335      7361626C 
 4335      65496E74 
 4335      7300
 4336              	.LASF35:
 4337 0091 63757272 		.ascii	"currentImoTrim2Value\000"
 4337      656E7449 
 4337      6D6F5472 
 4337      696D3256 
 4337      616C7565 
 4338              	.LASF7:
 4339 00a6 6C6F6E67 		.ascii	"long long unsigned int\000"
 4339      206C6F6E 
 4339      6720756E 
 4339      7369676E 
 4339      65642069 
 4340              	.LASF93:
 4341 00bd 43795379 		.ascii	"CySysTickInitVar\000"
 4341      73546963 
 4341      6B496E69 
 4341      74566172 
 4341      00
 4342              	.LASF47:
 4343 00ce 4379456E 		.ascii	"CyEnableInts\000"
 4343      61626C65 
 4343      496E7473 
 4343      00
 4344              	.LASF68:
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 132


 4345 00db 4379536F 		.ascii	"CySoftwareReset\000"
 4345      66747761 
 4345      72655265 
 4345      73657400 
 4346              	.LASF78:
 4347 00eb 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 4347      73546963 
 4347      6B456E61 
 4347      626C6549 
 4347      6E746572 
 4348              	.LASF63:
 4349 0104 4379496E 		.ascii	"CyIntGetState\000"
 4349      74476574 
 4349      53746174 
 4349      6500
 4350              	.LASF6:
 4351 0112 6C6F6E67 		.ascii	"long long int\000"
 4351      206C6F6E 
 4351      6720696E 
 4351      7400
 4352              	.LASF0:
 4353 0120 7369676E 		.ascii	"signed char\000"
 4353      65642063 
 4353      68617200 
 4354              	.LASF31:
 4355 012c 66726571 		.ascii	"freq\000"
 4355      00
 4356              	.LASF73:
 4357 0131 43794465 		.ascii	"CyDelayFreq\000"
 4357      6C617946 
 4357      72657100 
 4358              	.LASF23:
 4359 013d 696E7465 		.ascii	"interruptState\000"
 4359      72727570 
 4359      74537461 
 4359      746500
 4360              	.LASF82:
 4361 014c 43795379 		.ascii	"CySysTickGetReload\000"
 4361      73546963 
 4361      6B476574 
 4361      52656C6F 
 4361      616400
 4362              	.LASF4:
 4363 015f 6C6F6E67 		.ascii	"long int\000"
 4363      20696E74 
 4363      00
 4364              	.LASF64:
 4365 0168 4379496E 		.ascii	"CyIntDisable\000"
 4365      74446973 
 4365      61626C65 
 4365      00
 4366              	.LASF89:
 4367 0175 43795379 		.ascii	"CySysTickGetCallback\000"
 4367      73546963 
 4367      6B476574 
 4367      43616C6C 
 4367      6261636B 
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 133


 4368              	.LASF9:
 4369 018a 75696E74 		.ascii	"uint8\000"
 4369      3800
 4370              	.LASF95:
 4371 0190 63796465 		.ascii	"cydelayFreqKhz\000"
 4371      6C617946 
 4371      7265714B 
 4371      687A00
 4372              	.LASF71:
 4373 019f 43794465 		.ascii	"CyDelayUs\000"
 4373      6C617955 
 4373      7300
 4374              	.LASF13:
 4375 01a9 646F7562 		.ascii	"double\000"
 4375      6C6500
 4376              	.LASF59:
 4377 01b0 73686966 		.ascii	"shift\000"
 4377      7400
 4378              	.LASF40:
 4379 01b6 43795379 		.ascii	"CySysLvdClearInterrupt\000"
 4379      734C7664 
 4379      436C6561 
 4379      72496E74 
 4379      65727275 
 4380              	.LASF11:
 4381 01cd 75696E74 		.ascii	"uint32\000"
 4381      333200
 4382              	.LASF48:
 4383 01d4 6D61736B 		.ascii	"mask\000"
 4383      00
 4384              	.LASF41:
 4385 01d9 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 4385      73436C6B 
 4385      47657453 
 4385      7973636C 
 4385      6B536F75 
 4386              	.LASF61:
 4387 01f1 4379496E 		.ascii	"CyIntGetPriority\000"
 4387      74476574 
 4387      5072696F 
 4387      72697479 
 4387      00
 4388              	.LASF97:
 4389 0202 63796465 		.ascii	"cydelay32kMs\000"
 4389      6C617933 
 4389      326B4D73 
 4389      00
 4390              	.LASF75:
 4391 020f 43795379 		.ascii	"CySysTickInit\000"
 4391      73546963 
 4391      6B496E69 
 4391      7400
 4392              	.LASF60:
 4393 021d 76616C75 		.ascii	"value\000"
 4393      6500
 4394              	.LASF90:
 4395 0223 43794765 		.ascii	"CyGetUniqueId\000"
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 134


 4395      74556E69 
 4395      71756549 
 4395      6400
 4396              	.LASF84:
 4397 0231 43795379 		.ascii	"CySysTickGetCountFlag\000"
 4397      73546963 
 4397      6B476574 
 4397      436F756E 
 4397      74466C61 
 4398              	.LASF8:
 4399 0247 756E7369 		.ascii	"unsigned int\000"
 4399      676E6564 
 4399      20696E74 
 4399      00
 4400              	.LASF85:
 4401 0254 43795379 		.ascii	"CySysTickClear\000"
 4401      73546963 
 4401      6B436C65 
 4401      617200
 4402              	.LASF5:
 4403 0263 6C6F6E67 		.ascii	"long unsigned int\000"
 4403      20756E73 
 4403      69676E65 
 4403      6420696E 
 4403      7400
 4404              	.LASF81:
 4405 0275 43795379 		.ascii	"CySysLvdGetInterruptSource\000"
 4405      734C7664 
 4405      47657449 
 4405      6E746572 
 4405      72757074 
 4406              	.LASF22:
 4407 0290 43795379 		.ascii	"CySysClkImoStop\000"
 4407      73436C6B 
 4407      496D6F53 
 4407      746F7000 
 4408              	.LASF65:
 4409 02a0 4379496E 		.ascii	"CyIntSetPending\000"
 4409      74536574 
 4409      50656E64 
 4409      696E6700 
 4410              	.LASF42:
 4411 02b0 43795379 		.ascii	"CySysGetResetReason\000"
 4411      73476574 
 4411      52657365 
 4411      74526561 
 4411      736F6E00 
 4412              	.LASF3:
 4413 02c4 73686F72 		.ascii	"short unsigned int\000"
 4413      7420756E 
 4413      7369676E 
 4413      65642069 
 4413      6E7400
 4414              	.LASF55:
 4415 02d7 4379496E 		.ascii	"CyIntSetVector\000"
 4415      74536574 
 4415      56656374 
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 135


 4415      6F7200
 4416              	.LASF50:
 4417 02e6 6E756D62 		.ascii	"number\000"
 4417      657200
 4418              	.LASF58:
 4419 02ed 7072696F 		.ascii	"priority\000"
 4419      72697479 
 4419      00
 4420              	.LASF30:
 4421 02f6 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 4421      73436C6B 
 4421      57726974 
 4421      65496D6F 
 4421      46726571 
 4422              	.LASF99:
 4423 030b 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4423      43313120 
 4423      352E342E 
 4423      31203230 
 4423      31363036 
 4424 033e 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 4424      20726576 
 4424      6973696F 
 4424      6E203233 
 4424      37373135 
 4425 0371 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4425      66756E63 
 4425      74696F6E 
 4425      2D736563 
 4425      74696F6E 
 4426              	.LASF49:
 4427 0399 4379496E 		.ascii	"CyIntSetSysVector\000"
 4427      74536574 
 4427      53797356 
 4427      6563746F 
 4427      7200
 4428              	.LASF16:
 4429 03ab 72656733 		.ascii	"reg32\000"
 4429      3200
 4430              	.LASF74:
 4431 03b1 43795379 		.ascii	"CySysTickStart\000"
 4431      73546963 
 4431      6B537461 
 4431      727400
 4432              	.LASF44:
 4433 03c0 72657475 		.ascii	"returnStatus\000"
 4433      726E5374 
 4433      61747573 
 4433      00
 4434              	.LASF19:
 4435 03cd 73697A65 		.ascii	"sizetype\000"
 4435      74797065 
 4435      00
 4436              	.LASF66:
 4437 03d6 4379496E 		.ascii	"CyIntClearPending\000"
 4437      74436C65 
 4437      61725065 
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 136


 4437      6E64696E 
 4437      6700
 4438              	.LASF18:
 4439 03e8 6C6F6E67 		.ascii	"long double\000"
 4439      20646F75 
 4439      626C6500 
 4440              	.LASF51:
 4441 03f4 61646472 		.ascii	"address\000"
 4441      65737300 
 4442              	.LASF33:
 4443 03fc 62675472 		.ascii	"bgTrim5\000"
 4443      696D3500 
 4444              	.LASF25:
 4445 0404 73797363 		.ascii	"sysclkSource\000"
 4445      6C6B536F 
 4445      75726365 
 4445      00
 4446              	.LASF87:
 4447 0411 66756E63 		.ascii	"function\000"
 4447      74696F6E 
 4447      00
 4448              	.LASF98:
 4449 041a 6379496D 		.ascii	"cyImoFreqMhz2Reg\000"
 4449      6F467265 
 4449      714D687A 
 4449      32526567 
 4449      00
 4450              	.LASF83:
 4451 042b 43795379 		.ascii	"CySysTickGetValue\000"
 4451      73546963 
 4451      6B476574 
 4451      56616C75 
 4451      6500
 4452              	.LASF94:
 4453 043d 63796465 		.ascii	"cydelayFreqHz\000"
 4453      6C617946 
 4453      72657148 
 4453      7A00
 4454              	.LASF57:
 4455 044b 4379496E 		.ascii	"CyIntSetPriority\000"
 4455      74536574 
 4455      5072696F 
 4455      72697479 
 4455      00
 4456              	.LASF12:
 4457 045c 666C6F61 		.ascii	"float\000"
 4457      7400
 4458              	.LASF37:
 4459 0462 43795379 		.ascii	"CySysLvdEnable\000"
 4459      734C7664 
 4459      456E6162 
 4459      6C6500
 4460              	.LASF20:
 4461 0471 63795379 		.ascii	"cySysTickCallback\000"
 4461      73546963 
 4461      6B43616C 
 4461      6C626163 
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 137


 4461      6B00
 4462              	.LASF56:
 4463 0483 4379496E 		.ascii	"CyIntGetVector\000"
 4463      74476574 
 4463      56656374 
 4463      6F7200
 4464              	.LASF70:
 4465 0492 6D696C6C 		.ascii	"milliseconds\000"
 4465      69736563 
 4465      6F6E6473 
 4465      00
 4466              	.LASF15:
 4467 049f 72656738 		.ascii	"reg8\000"
 4467      00
 4468              	.LASF38:
 4469 04a4 74687265 		.ascii	"threshold\000"
 4469      73686F6C 
 4469      6400
 4470              	.LASF67:
 4471 04ae 43794861 		.ascii	"CyHalt\000"
 4471      6C7400
 4472              	.LASF1:
 4473 04b5 756E7369 		.ascii	"unsigned char\000"
 4473      676E6564 
 4473      20636861 
 4473      7200
 4474              	.LASF2:
 4475 04c3 73686F72 		.ascii	"short int\000"
 4475      7420696E 
 4475      7400
 4476              	.LASF62:
 4477 04cd 4379496E 		.ascii	"CyIntEnable\000"
 4477      74456E61 
 4477      626C6500 
 4478              	.LASF54:
 4479 04d9 4379496E 		.ascii	"CyIntGetSysVector\000"
 4479      74476574 
 4479      53797356 
 4479      6563746F 
 4479      7200
 4480              	.LASF28:
 4481 04eb 636C6B53 		.ascii	"clkSelect\000"
 4481      656C6563 
 4481      7400
 4482              	.LASF43:
 4483 04f5 72656173 		.ascii	"reason\000"
 4483      6F6E00
 4484              	.LASF14:
 4485 04fc 63686172 		.ascii	"char\000"
 4485      00
 4486              	.LASF17:
 4487 0501 63796973 		.ascii	"cyisraddress\000"
 4487      72616464 
 4487      72657373 
 4487      00
 4488              	.LASF76:
 4489 050e 43795379 		.ascii	"CySysTickEnable\000"
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 138


 4489      73546963 
 4489      6B456E61 
 4489      626C6500 
 4490              	.LASF27:
 4491 051e 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 4491      73436C6B 
 4491      57726974 
 4491      65537973 
 4491      636C6B44 
 4492              	.LASF86:
 4493 0535 43795379 		.ascii	"CySysTickSetCallback\000"
 4493      73546963 
 4493      6B536574 
 4493      43616C6C 
 4493      6261636B 
 4494              	.LASF92:
 4495 054a 43795379 		.ascii	"CySysTickCallbacks\000"
 4495      73546963 
 4495      6B43616C 
 4495      6C626163 
 4495      6B7300
 4496              	.LASF36:
 4497 055d 696D6F54 		.ascii	"imoTrim1Value\000"
 4497      72696D31 
 4497      56616C75 
 4497      6500
 4498              	.LASF91:
 4499 056b 756E6971 		.ascii	"uniqueId\000"
 4499      75654964 
 4499      00
 4500              	.LASF69:
 4501 0574 43794465 		.ascii	"CyDelay\000"
 4501      6C617900 
 4502              	.LASF79:
 4503 057c 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 4503      73546963 
 4503      6B446973 
 4503      61626C65 
 4503      496E7465 
 4504              	.LASF39:
 4505 0596 43795379 		.ascii	"CySysLvdDisable\000"
 4505      734C7664 
 4505      44697361 
 4505      626C6500 
 4506              	.LASF96:
 4507 05a6 63796465 		.ascii	"cydelayFreqMhz\000"
 4507      6C617946 
 4507      7265714D 
 4507      687A00
 4508              	.LASF77:
 4509 05b5 43795379 		.ascii	"CySysTickStop\000"
 4509      73546963 
 4509      6B53746F 
 4509      7000
 4510              	.LASF29:
 4511 05c3 64697669 		.ascii	"divider\000"
 4511      64657200 
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccQYDyTN.s 			page 139


 4512              	.LASF21:
 4513 05cb 43795379 		.ascii	"CySysClkImoStart\000"
 4513      73436C6B 
 4513      496D6F53 
 4513      74617274 
 4513      00
 4514              	.LASF34:
 4515 05dc 6E657749 		.ascii	"newImoTrim2Value\000"
 4515      6D6F5472 
 4515      696D3256 
 4515      616C7565 
 4515      00
 4516              	.LASF100:
 4517 05ed 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
 4517      72617465 
 4517      645F536F 
 4517      75726365 
 4517      5C50536F 
 4518              	.LASF72:
 4519 060c 6D696372 		.ascii	"microseconds\000"
 4519      6F736563 
 4519      6F6E6473 
 4519      00
 4520              	.LASF24:
 4521 0619 746D7052 		.ascii	"tmpReg\000"
 4521      656700
 4522              	.LASF80:
 4523 0620 43795379 		.ascii	"CySysTickSetReload\000"
 4523      73546963 
 4523      6B536574 
 4523      52656C6F 
 4523      616400
 4524              	.LASF102:
 4525 0633 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 4525      73546963 
 4525      6B536572 
 4525      76696365 
 4525      43616C6C 
 4526              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
