ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccFtSeLW.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"Columns.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.Columns_SetDriveMode,"ax",%progbits
  20              		.align	2
  21              		.global	Columns_SetDriveMode
  22              		.code	16
  23              		.thumb_func
  24              		.type	Columns_SetDriveMode, %function
  25              	Columns_SetDriveMode:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC4\\Columns.c"
   1:Generated_Source\PSoC4/Columns.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/Columns.c **** * File Name: Columns.c  
   3:Generated_Source\PSoC4/Columns.c **** * Version 2.20
   4:Generated_Source\PSoC4/Columns.c **** *
   5:Generated_Source\PSoC4/Columns.c **** * Description:
   6:Generated_Source\PSoC4/Columns.c **** *  This file contains API to enable firmware control of a Pins component.
   7:Generated_Source\PSoC4/Columns.c **** *
   8:Generated_Source\PSoC4/Columns.c **** ********************************************************************************
   9:Generated_Source\PSoC4/Columns.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  10:Generated_Source\PSoC4/Columns.c **** * You may use this file only in accordance with the license, terms, conditions, 
  11:Generated_Source\PSoC4/Columns.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  12:Generated_Source\PSoC4/Columns.c **** * the software package with which this file was provided.
  13:Generated_Source\PSoC4/Columns.c **** *******************************************************************************/
  14:Generated_Source\PSoC4/Columns.c **** 
  15:Generated_Source\PSoC4/Columns.c **** #include "cytypes.h"
  16:Generated_Source\PSoC4/Columns.c **** #include "Columns.h"
  17:Generated_Source\PSoC4/Columns.c **** 
  18:Generated_Source\PSoC4/Columns.c **** 
  19:Generated_Source\PSoC4/Columns.c **** #if defined(Columns__PC)
  20:Generated_Source\PSoC4/Columns.c ****     #define Columns_SetP4PinDriveMode(shift, mode)  \
  21:Generated_Source\PSoC4/Columns.c ****     do { \
  22:Generated_Source\PSoC4/Columns.c ****         Columns_PC =   (Columns_PC & \
  23:Generated_Source\PSoC4/Columns.c ****                                 (uint32)(~(uint32)(Columns_DRIVE_MODE_IND_MASK << \
  24:Generated_Source\PSoC4/Columns.c ****                                 (Columns_DRIVE_MODE_BITS * (shift))))) | \
  25:Generated_Source\PSoC4/Columns.c ****                                 (uint32)((uint32)(mode) << \
  26:Generated_Source\PSoC4/Columns.c ****                                 (Columns_DRIVE_MODE_BITS * (shift))); \
  27:Generated_Source\PSoC4/Columns.c ****     } while (0)
  28:Generated_Source\PSoC4/Columns.c **** #else
  29:Generated_Source\PSoC4/Columns.c ****     #if (CY_PSOC4_4200L)
  30:Generated_Source\PSoC4/Columns.c ****         #define Columns_SetP4PinDriveMode(shift, mode)  \
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccFtSeLW.s 			page 2


  31:Generated_Source\PSoC4/Columns.c ****         do { \
  32:Generated_Source\PSoC4/Columns.c ****             Columns_USBIO_CTRL_REG = (Columns_USBIO_CTRL_REG & \
  33:Generated_Source\PSoC4/Columns.c ****                                     (uint32)(~(uint32)(Columns_DRIVE_MODE_IND_MASK << \
  34:Generated_Source\PSoC4/Columns.c ****                                     (Columns_DRIVE_MODE_BITS * (shift))))) | \
  35:Generated_Source\PSoC4/Columns.c ****                                     (uint32)((uint32)(mode) << \
  36:Generated_Source\PSoC4/Columns.c ****                                     (Columns_DRIVE_MODE_BITS * (shift))); \
  37:Generated_Source\PSoC4/Columns.c ****         } while (0)
  38:Generated_Source\PSoC4/Columns.c ****     #endif
  39:Generated_Source\PSoC4/Columns.c **** #endif
  40:Generated_Source\PSoC4/Columns.c ****   
  41:Generated_Source\PSoC4/Columns.c **** 
  42:Generated_Source\PSoC4/Columns.c **** #if defined(Columns__PC) || (CY_PSOC4_4200L) 
  43:Generated_Source\PSoC4/Columns.c ****     /*******************************************************************************
  44:Generated_Source\PSoC4/Columns.c ****     * Function Name: Columns_SetDriveMode
  45:Generated_Source\PSoC4/Columns.c ****     ****************************************************************************//**
  46:Generated_Source\PSoC4/Columns.c ****     *
  47:Generated_Source\PSoC4/Columns.c ****     * \brief Sets the drive mode for each of the Pins component's pins.
  48:Generated_Source\PSoC4/Columns.c ****     * 
  49:Generated_Source\PSoC4/Columns.c ****     * <b>Note</b> This affects all pins in the Pins component instance. Use the
  50:Generated_Source\PSoC4/Columns.c ****     * Per-Pin APIs if you wish to control individual pin's drive modes.
  51:Generated_Source\PSoC4/Columns.c ****     *
  52:Generated_Source\PSoC4/Columns.c ****     * <b>Note</b> USBIOs have limited drive functionality. Refer to the Drive Mode
  53:Generated_Source\PSoC4/Columns.c ****     * parameter for more information.
  54:Generated_Source\PSoC4/Columns.c ****     *
  55:Generated_Source\PSoC4/Columns.c ****     * \param mode
  56:Generated_Source\PSoC4/Columns.c ****     *  Mode for the selected signals. Valid options are documented in 
  57:Generated_Source\PSoC4/Columns.c ****     *  \ref driveMode.
  58:Generated_Source\PSoC4/Columns.c ****     *
  59:Generated_Source\PSoC4/Columns.c ****     * \return
  60:Generated_Source\PSoC4/Columns.c ****     *  None
  61:Generated_Source\PSoC4/Columns.c ****     *
  62:Generated_Source\PSoC4/Columns.c ****     * \sideeffect
  63:Generated_Source\PSoC4/Columns.c ****     *  If you use read-modify-write operations that are not atomic, the ISR can
  64:Generated_Source\PSoC4/Columns.c ****     *  cause corruption of this function. An ISR that interrupts this function 
  65:Generated_Source\PSoC4/Columns.c ****     *  and performs writes to the Pins component Drive Mode registers can cause 
  66:Generated_Source\PSoC4/Columns.c ****     *  corrupted port data. To avoid this issue, you should either use the Per-Pin
  67:Generated_Source\PSoC4/Columns.c ****     *  APIs (primary method) or disable interrupts around this function.
  68:Generated_Source\PSoC4/Columns.c ****     *
  69:Generated_Source\PSoC4/Columns.c ****     * \funcusage
  70:Generated_Source\PSoC4/Columns.c ****     *  \snippet Columns_SUT.c usage_Columns_SetDriveMode
  71:Generated_Source\PSoC4/Columns.c ****     *******************************************************************************/
  72:Generated_Source\PSoC4/Columns.c ****     void Columns_SetDriveMode(uint8 mode)
  73:Generated_Source\PSoC4/Columns.c ****     {
  28              		.loc 1 73 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 82B0     		sub	sp, sp, #8
  37              		.cfi_def_cfa_offset 16
  38 0004 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  40 0006 0200     		movs	r2, r0
  41 0008 FB1D     		adds	r3, r7, #7
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccFtSeLW.s 			page 3


  42 000a 1A70     		strb	r2, [r3]
  74:Generated_Source\PSoC4/Columns.c **** 		Columns_SetP4PinDriveMode(Columns__0__SHIFT, mode);
  43              		.loc 1 74 0
  44 000c 154B     		ldr	r3, .L2
  45 000e 154A     		ldr	r2, .L2
  46 0010 1268     		ldr	r2, [r2]
  47 0012 1549     		ldr	r1, .L2+4
  48 0014 1140     		ands	r1, r2
  49 0016 FA1D     		adds	r2, r7, #7
  50 0018 1278     		ldrb	r2, [r2]
  51 001a 1203     		lsls	r2, r2, #12
  52 001c 0A43     		orrs	r2, r1
  53 001e 1A60     		str	r2, [r3]
  75:Generated_Source\PSoC4/Columns.c **** 		Columns_SetP4PinDriveMode(Columns__1__SHIFT, mode);
  54              		.loc 1 75 0
  55 0020 104B     		ldr	r3, .L2
  56 0022 104A     		ldr	r2, .L2
  57 0024 1268     		ldr	r2, [r2]
  58 0026 1149     		ldr	r1, .L2+8
  59 0028 1140     		ands	r1, r2
  60 002a FA1D     		adds	r2, r7, #7
  61 002c 1278     		ldrb	r2, [r2]
  62 002e D203     		lsls	r2, r2, #15
  63 0030 0A43     		orrs	r2, r1
  64 0032 1A60     		str	r2, [r3]
  76:Generated_Source\PSoC4/Columns.c **** 		Columns_SetP4PinDriveMode(Columns__2__SHIFT, mode);
  65              		.loc 1 76 0
  66 0034 0B4B     		ldr	r3, .L2
  67 0036 0B4A     		ldr	r2, .L2
  68 0038 1268     		ldr	r2, [r2]
  69 003a 0D49     		ldr	r1, .L2+12
  70 003c 1140     		ands	r1, r2
  71 003e FA1D     		adds	r2, r7, #7
  72 0040 1278     		ldrb	r2, [r2]
  73 0042 9204     		lsls	r2, r2, #18
  74 0044 0A43     		orrs	r2, r1
  75 0046 1A60     		str	r2, [r3]
  77:Generated_Source\PSoC4/Columns.c **** 		Columns_SetP4PinDriveMode(Columns__3__SHIFT, mode);
  76              		.loc 1 77 0
  77 0048 064B     		ldr	r3, .L2
  78 004a 064A     		ldr	r2, .L2
  79 004c 1268     		ldr	r2, [r2]
  80 004e 0949     		ldr	r1, .L2+16
  81 0050 1140     		ands	r1, r2
  82 0052 FA1D     		adds	r2, r7, #7
  83 0054 1278     		ldrb	r2, [r2]
  84 0056 5205     		lsls	r2, r2, #21
  85 0058 0A43     		orrs	r2, r1
  86 005a 1A60     		str	r2, [r3]
  78:Generated_Source\PSoC4/Columns.c ****     }
  87              		.loc 1 78 0
  88 005c C046     		nop
  89 005e BD46     		mov	sp, r7
  90 0060 02B0     		add	sp, sp, #8
  91              		@ sp needed
  92 0062 80BD     		pop	{r7, pc}
  93              	.L3:
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccFtSeLW.s 			page 4


  94              		.align	2
  95              	.L2:
  96 0064 08020440 		.word	1074004488
  97 0068 FF8FFFFF 		.word	-28673
  98 006c FF7FFCFF 		.word	-229377
  99 0070 FFFFE3FF 		.word	-1835009
 100 0074 FFFF1FFF 		.word	-14680065
 101              		.cfi_endproc
 102              	.LFE0:
 103              		.size	Columns_SetDriveMode, .-Columns_SetDriveMode
 104              		.section	.text.Columns_Write,"ax",%progbits
 105              		.align	2
 106              		.global	Columns_Write
 107              		.code	16
 108              		.thumb_func
 109              		.type	Columns_Write, %function
 110              	Columns_Write:
 111              	.LFB1:
  79:Generated_Source\PSoC4/Columns.c **** #endif
  80:Generated_Source\PSoC4/Columns.c **** 
  81:Generated_Source\PSoC4/Columns.c **** 
  82:Generated_Source\PSoC4/Columns.c **** /*******************************************************************************
  83:Generated_Source\PSoC4/Columns.c **** * Function Name: Columns_Write
  84:Generated_Source\PSoC4/Columns.c **** ****************************************************************************//**
  85:Generated_Source\PSoC4/Columns.c **** *
  86:Generated_Source\PSoC4/Columns.c **** * \brief Writes the value to the physical port (data output register), masking
  87:Generated_Source\PSoC4/Columns.c **** *  and shifting the bits appropriately. 
  88:Generated_Source\PSoC4/Columns.c **** *
  89:Generated_Source\PSoC4/Columns.c **** * The data output register controls the signal applied to the physical pin in 
  90:Generated_Source\PSoC4/Columns.c **** * conjunction with the drive mode parameter. This function avoids changing 
  91:Generated_Source\PSoC4/Columns.c **** * other bits in the port by using the appropriate method (read-modify-write or
  92:Generated_Source\PSoC4/Columns.c **** * bit banding).
  93:Generated_Source\PSoC4/Columns.c **** *
  94:Generated_Source\PSoC4/Columns.c **** * <b>Note</b> This function should not be used on a hardware digital output pin 
  95:Generated_Source\PSoC4/Columns.c **** * as it is driven by the hardware signal attached to it.
  96:Generated_Source\PSoC4/Columns.c **** *
  97:Generated_Source\PSoC4/Columns.c **** * \param value
  98:Generated_Source\PSoC4/Columns.c **** *  Value to write to the component instance.
  99:Generated_Source\PSoC4/Columns.c **** *
 100:Generated_Source\PSoC4/Columns.c **** * \return 
 101:Generated_Source\PSoC4/Columns.c **** *  None 
 102:Generated_Source\PSoC4/Columns.c **** *
 103:Generated_Source\PSoC4/Columns.c **** * \sideeffect
 104:Generated_Source\PSoC4/Columns.c **** *  If you use read-modify-write operations that are not atomic; the Interrupt 
 105:Generated_Source\PSoC4/Columns.c **** *  Service Routines (ISR) can cause corruption of this function. An ISR that 
 106:Generated_Source\PSoC4/Columns.c **** *  interrupts this function and performs writes to the Pins component data 
 107:Generated_Source\PSoC4/Columns.c **** *  register can cause corrupted port data. To avoid this issue, you should 
 108:Generated_Source\PSoC4/Columns.c **** *  either use the Per-Pin APIs (primary method) or disable interrupts around 
 109:Generated_Source\PSoC4/Columns.c **** *  this function.
 110:Generated_Source\PSoC4/Columns.c **** *
 111:Generated_Source\PSoC4/Columns.c **** * \funcusage
 112:Generated_Source\PSoC4/Columns.c **** *  \snippet Columns_SUT.c usage_Columns_Write
 113:Generated_Source\PSoC4/Columns.c **** *******************************************************************************/
 114:Generated_Source\PSoC4/Columns.c **** void Columns_Write(uint8 value)
 115:Generated_Source\PSoC4/Columns.c **** {
 112              		.loc 1 115 0
 113              		.cfi_startproc
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccFtSeLW.s 			page 5


 114              		@ args = 0, pretend = 0, frame = 16
 115              		@ frame_needed = 1, uses_anonymous_args = 0
 116 0000 80B5     		push	{r7, lr}
 117              		.cfi_def_cfa_offset 8
 118              		.cfi_offset 7, -8
 119              		.cfi_offset 14, -4
 120 0002 84B0     		sub	sp, sp, #16
 121              		.cfi_def_cfa_offset 24
 122 0004 00AF     		add	r7, sp, #0
 123              		.cfi_def_cfa_register 7
 124 0006 0200     		movs	r2, r0
 125 0008 FB1D     		adds	r3, r7, #7
 126 000a 1A70     		strb	r2, [r3]
 116:Generated_Source\PSoC4/Columns.c ****     uint8 drVal = (uint8)(Columns_DR & (uint8)(~Columns_MASK));
 127              		.loc 1 116 0
 128 000c 0D4B     		ldr	r3, .L5
 129 000e 1B68     		ldr	r3, [r3]
 130 0010 DAB2     		uxtb	r2, r3
 131 0012 0F23     		movs	r3, #15
 132 0014 FB18     		adds	r3, r7, r3
 133 0016 0F21     		movs	r1, #15
 134 0018 0A40     		ands	r2, r1
 135 001a 1A70     		strb	r2, [r3]
 117:Generated_Source\PSoC4/Columns.c ****     drVal = (drVal | ((uint8)(value << Columns_SHIFT) & Columns_MASK));
 136              		.loc 1 117 0
 137 001c FB1D     		adds	r3, r7, #7
 138 001e 1B78     		ldrb	r3, [r3]
 139 0020 1B01     		lsls	r3, r3, #4
 140 0022 D9B2     		uxtb	r1, r3
 141 0024 0F23     		movs	r3, #15
 142 0026 FB18     		adds	r3, r7, r3
 143 0028 0F22     		movs	r2, #15
 144 002a BA18     		adds	r2, r7, r2
 145 002c 1278     		ldrb	r2, [r2]
 146 002e 0A43     		orrs	r2, r1
 147 0030 1A70     		strb	r2, [r3]
 118:Generated_Source\PSoC4/Columns.c ****     Columns_DR = (uint32)drVal;
 148              		.loc 1 118 0
 149 0032 044B     		ldr	r3, .L5
 150 0034 0F22     		movs	r2, #15
 151 0036 BA18     		adds	r2, r7, r2
 152 0038 1278     		ldrb	r2, [r2]
 153 003a 1A60     		str	r2, [r3]
 119:Generated_Source\PSoC4/Columns.c **** }
 154              		.loc 1 119 0
 155 003c C046     		nop
 156 003e BD46     		mov	sp, r7
 157 0040 04B0     		add	sp, sp, #16
 158              		@ sp needed
 159 0042 80BD     		pop	{r7, pc}
 160              	.L6:
 161              		.align	2
 162              	.L5:
 163 0044 00020440 		.word	1074004480
 164              		.cfi_endproc
 165              	.LFE1:
 166              		.size	Columns_Write, .-Columns_Write
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccFtSeLW.s 			page 6


 167              		.section	.text.Columns_Read,"ax",%progbits
 168              		.align	2
 169              		.global	Columns_Read
 170              		.code	16
 171              		.thumb_func
 172              		.type	Columns_Read, %function
 173              	Columns_Read:
 174              	.LFB2:
 120:Generated_Source\PSoC4/Columns.c **** 
 121:Generated_Source\PSoC4/Columns.c **** 
 122:Generated_Source\PSoC4/Columns.c **** /*******************************************************************************
 123:Generated_Source\PSoC4/Columns.c **** * Function Name: Columns_Read
 124:Generated_Source\PSoC4/Columns.c **** ****************************************************************************//**
 125:Generated_Source\PSoC4/Columns.c **** *
 126:Generated_Source\PSoC4/Columns.c **** * \brief Reads the associated physical port (pin status register) and masks 
 127:Generated_Source\PSoC4/Columns.c **** *  the required bits according to the width and bit position of the component
 128:Generated_Source\PSoC4/Columns.c **** *  instance. 
 129:Generated_Source\PSoC4/Columns.c **** *
 130:Generated_Source\PSoC4/Columns.c **** * The pin's status register returns the current logic level present on the 
 131:Generated_Source\PSoC4/Columns.c **** * physical pin.
 132:Generated_Source\PSoC4/Columns.c **** *
 133:Generated_Source\PSoC4/Columns.c **** * \return 
 134:Generated_Source\PSoC4/Columns.c **** *  The current value for the pins in the component as a right justified number.
 135:Generated_Source\PSoC4/Columns.c **** *
 136:Generated_Source\PSoC4/Columns.c **** * \funcusage
 137:Generated_Source\PSoC4/Columns.c **** *  \snippet Columns_SUT.c usage_Columns_Read  
 138:Generated_Source\PSoC4/Columns.c **** *******************************************************************************/
 139:Generated_Source\PSoC4/Columns.c **** uint8 Columns_Read(void)
 140:Generated_Source\PSoC4/Columns.c **** {
 175              		.loc 1 140 0
 176              		.cfi_startproc
 177              		@ args = 0, pretend = 0, frame = 0
 178              		@ frame_needed = 1, uses_anonymous_args = 0
 179 0000 80B5     		push	{r7, lr}
 180              		.cfi_def_cfa_offset 8
 181              		.cfi_offset 7, -8
 182              		.cfi_offset 14, -4
 183 0002 00AF     		add	r7, sp, #0
 184              		.cfi_def_cfa_register 7
 141:Generated_Source\PSoC4/Columns.c ****     return (uint8)((Columns_PS & Columns_MASK) >> Columns_SHIFT);
 185              		.loc 1 141 0
 186 0004 044B     		ldr	r3, .L9
 187 0006 1B68     		ldr	r3, [r3]
 188 0008 F022     		movs	r2, #240
 189 000a 1340     		ands	r3, r2
 190 000c 1B09     		lsrs	r3, r3, #4
 191 000e DBB2     		uxtb	r3, r3
 142:Generated_Source\PSoC4/Columns.c **** }
 192              		.loc 1 142 0
 193 0010 1800     		movs	r0, r3
 194 0012 BD46     		mov	sp, r7
 195              		@ sp needed
 196 0014 80BD     		pop	{r7, pc}
 197              	.L10:
 198 0016 C046     		.align	2
 199              	.L9:
 200 0018 04020440 		.word	1074004484
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccFtSeLW.s 			page 7


 201              		.cfi_endproc
 202              	.LFE2:
 203              		.size	Columns_Read, .-Columns_Read
 204              		.section	.text.Columns_ReadDataReg,"ax",%progbits
 205              		.align	2
 206              		.global	Columns_ReadDataReg
 207              		.code	16
 208              		.thumb_func
 209              		.type	Columns_ReadDataReg, %function
 210              	Columns_ReadDataReg:
 211              	.LFB3:
 143:Generated_Source\PSoC4/Columns.c **** 
 144:Generated_Source\PSoC4/Columns.c **** 
 145:Generated_Source\PSoC4/Columns.c **** /*******************************************************************************
 146:Generated_Source\PSoC4/Columns.c **** * Function Name: Columns_ReadDataReg
 147:Generated_Source\PSoC4/Columns.c **** ****************************************************************************//**
 148:Generated_Source\PSoC4/Columns.c **** *
 149:Generated_Source\PSoC4/Columns.c **** * \brief Reads the associated physical port's data output register and masks 
 150:Generated_Source\PSoC4/Columns.c **** *  the correct bits according to the width and bit position of the component 
 151:Generated_Source\PSoC4/Columns.c **** *  instance. 
 152:Generated_Source\PSoC4/Columns.c **** *
 153:Generated_Source\PSoC4/Columns.c **** * The data output register controls the signal applied to the physical pin in 
 154:Generated_Source\PSoC4/Columns.c **** * conjunction with the drive mode parameter. This is not the same as the 
 155:Generated_Source\PSoC4/Columns.c **** * preferred Columns_Read() API because the 
 156:Generated_Source\PSoC4/Columns.c **** * Columns_ReadDataReg() reads the data register instead of the status 
 157:Generated_Source\PSoC4/Columns.c **** * register. For output pins this is a useful function to determine the value 
 158:Generated_Source\PSoC4/Columns.c **** * just written to the pin.
 159:Generated_Source\PSoC4/Columns.c **** *
 160:Generated_Source\PSoC4/Columns.c **** * \return 
 161:Generated_Source\PSoC4/Columns.c **** *  The current value of the data register masked and shifted into a right 
 162:Generated_Source\PSoC4/Columns.c **** *  justified number for the component instance.
 163:Generated_Source\PSoC4/Columns.c **** *
 164:Generated_Source\PSoC4/Columns.c **** * \funcusage
 165:Generated_Source\PSoC4/Columns.c **** *  \snippet Columns_SUT.c usage_Columns_ReadDataReg 
 166:Generated_Source\PSoC4/Columns.c **** *******************************************************************************/
 167:Generated_Source\PSoC4/Columns.c **** uint8 Columns_ReadDataReg(void)
 168:Generated_Source\PSoC4/Columns.c **** {
 212              		.loc 1 168 0
 213              		.cfi_startproc
 214              		@ args = 0, pretend = 0, frame = 0
 215              		@ frame_needed = 1, uses_anonymous_args = 0
 216 0000 80B5     		push	{r7, lr}
 217              		.cfi_def_cfa_offset 8
 218              		.cfi_offset 7, -8
 219              		.cfi_offset 14, -4
 220 0002 00AF     		add	r7, sp, #0
 221              		.cfi_def_cfa_register 7
 169:Generated_Source\PSoC4/Columns.c ****     return (uint8)((Columns_DR & Columns_MASK) >> Columns_SHIFT);
 222              		.loc 1 169 0
 223 0004 044B     		ldr	r3, .L13
 224 0006 1B68     		ldr	r3, [r3]
 225 0008 F022     		movs	r2, #240
 226 000a 1340     		ands	r3, r2
 227 000c 1B09     		lsrs	r3, r3, #4
 228 000e DBB2     		uxtb	r3, r3
 170:Generated_Source\PSoC4/Columns.c **** }
 229              		.loc 1 170 0
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccFtSeLW.s 			page 8


 230 0010 1800     		movs	r0, r3
 231 0012 BD46     		mov	sp, r7
 232              		@ sp needed
 233 0014 80BD     		pop	{r7, pc}
 234              	.L14:
 235 0016 C046     		.align	2
 236              	.L13:
 237 0018 00020440 		.word	1074004480
 238              		.cfi_endproc
 239              	.LFE3:
 240              		.size	Columns_ReadDataReg, .-Columns_ReadDataReg
 241              		.section	.text.Columns_SetInterruptMode,"ax",%progbits
 242              		.align	2
 243              		.global	Columns_SetInterruptMode
 244              		.code	16
 245              		.thumb_func
 246              		.type	Columns_SetInterruptMode, %function
 247              	Columns_SetInterruptMode:
 248              	.LFB4:
 171:Generated_Source\PSoC4/Columns.c **** 
 172:Generated_Source\PSoC4/Columns.c **** 
 173:Generated_Source\PSoC4/Columns.c **** /*******************************************************************************
 174:Generated_Source\PSoC4/Columns.c **** * Function Name: Columns_SetInterruptMode
 175:Generated_Source\PSoC4/Columns.c **** ****************************************************************************//**
 176:Generated_Source\PSoC4/Columns.c **** *
 177:Generated_Source\PSoC4/Columns.c **** * \brief Configures the interrupt mode for each of the Pins component's
 178:Generated_Source\PSoC4/Columns.c **** *  pins. Alternatively you may set the interrupt mode for all the pins
 179:Generated_Source\PSoC4/Columns.c **** *  specified in the Pins component.
 180:Generated_Source\PSoC4/Columns.c **** *
 181:Generated_Source\PSoC4/Columns.c **** *  <b>Note</b> The interrupt is port-wide and therefore any enabled pin
 182:Generated_Source\PSoC4/Columns.c **** *  interrupt may trigger it.
 183:Generated_Source\PSoC4/Columns.c **** *
 184:Generated_Source\PSoC4/Columns.c **** * \param position
 185:Generated_Source\PSoC4/Columns.c **** *  The pin position as listed in the Pins component. You may OR these to be 
 186:Generated_Source\PSoC4/Columns.c **** *  able to configure the interrupt mode of multiple pins within a Pins 
 187:Generated_Source\PSoC4/Columns.c **** *  component. Or you may use Columns_INTR_ALL to configure the
 188:Generated_Source\PSoC4/Columns.c **** *  interrupt mode of all the pins in the Pins component.       
 189:Generated_Source\PSoC4/Columns.c **** *  - Columns_0_INTR       (First pin in the list)
 190:Generated_Source\PSoC4/Columns.c **** *  - Columns_1_INTR       (Second pin in the list)
 191:Generated_Source\PSoC4/Columns.c **** *  - ...
 192:Generated_Source\PSoC4/Columns.c **** *  - Columns_INTR_ALL     (All pins in Pins component)
 193:Generated_Source\PSoC4/Columns.c **** *
 194:Generated_Source\PSoC4/Columns.c **** * \param mode
 195:Generated_Source\PSoC4/Columns.c **** *  Interrupt mode for the selected pins. Valid options are documented in
 196:Generated_Source\PSoC4/Columns.c **** *  \ref intrMode.
 197:Generated_Source\PSoC4/Columns.c **** *
 198:Generated_Source\PSoC4/Columns.c **** * \return 
 199:Generated_Source\PSoC4/Columns.c **** *  None
 200:Generated_Source\PSoC4/Columns.c **** *  
 201:Generated_Source\PSoC4/Columns.c **** * \sideeffect
 202:Generated_Source\PSoC4/Columns.c **** *  It is recommended that the interrupt be disabled before calling this 
 203:Generated_Source\PSoC4/Columns.c **** *  function to avoid unintended interrupt requests. Note that the interrupt
 204:Generated_Source\PSoC4/Columns.c **** *  type is port wide, and therefore will trigger for any enabled pin on the 
 205:Generated_Source\PSoC4/Columns.c **** *  port.
 206:Generated_Source\PSoC4/Columns.c **** *
 207:Generated_Source\PSoC4/Columns.c **** * \funcusage
 208:Generated_Source\PSoC4/Columns.c **** *  \snippet Columns_SUT.c usage_Columns_SetInterruptMode
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccFtSeLW.s 			page 9


 209:Generated_Source\PSoC4/Columns.c **** *******************************************************************************/
 210:Generated_Source\PSoC4/Columns.c **** void Columns_SetInterruptMode(uint16 position, uint16 mode)
 211:Generated_Source\PSoC4/Columns.c **** {
 249              		.loc 1 211 0
 250              		.cfi_startproc
 251              		@ args = 0, pretend = 0, frame = 16
 252              		@ frame_needed = 1, uses_anonymous_args = 0
 253 0000 80B5     		push	{r7, lr}
 254              		.cfi_def_cfa_offset 8
 255              		.cfi_offset 7, -8
 256              		.cfi_offset 14, -4
 257 0002 84B0     		sub	sp, sp, #16
 258              		.cfi_def_cfa_offset 24
 259 0004 00AF     		add	r7, sp, #0
 260              		.cfi_def_cfa_register 7
 261 0006 0200     		movs	r2, r0
 262 0008 BB1D     		adds	r3, r7, #6
 263 000a 1A80     		strh	r2, [r3]
 264 000c 3B1D     		adds	r3, r7, #4
 265 000e 0A1C     		adds	r2, r1, #0
 266 0010 1A80     		strh	r2, [r3]
 212:Generated_Source\PSoC4/Columns.c ****     uint32 intrCfg;
 213:Generated_Source\PSoC4/Columns.c ****     
 214:Generated_Source\PSoC4/Columns.c ****     intrCfg =  Columns_INTCFG & (uint32)(~(uint32)position);
 267              		.loc 1 214 0
 268 0012 0B4B     		ldr	r3, .L16
 269 0014 1B68     		ldr	r3, [r3]
 270 0016 BA1D     		adds	r2, r7, #6
 271 0018 1288     		ldrh	r2, [r2]
 272 001a D243     		mvns	r2, r2
 273 001c 1340     		ands	r3, r2
 274 001e FB60     		str	r3, [r7, #12]
 215:Generated_Source\PSoC4/Columns.c ****     Columns_INTCFG = intrCfg | ((uint32)position & (uint32)mode);
 275              		.loc 1 215 0
 276 0020 074B     		ldr	r3, .L16
 277 0022 BA1D     		adds	r2, r7, #6
 278 0024 391D     		adds	r1, r7, #4
 279 0026 1288     		ldrh	r2, [r2]
 280 0028 0988     		ldrh	r1, [r1]
 281 002a 0A40     		ands	r2, r1
 282 002c 92B2     		uxth	r2, r2
 283 002e 1100     		movs	r1, r2
 284 0030 FA68     		ldr	r2, [r7, #12]
 285 0032 0A43     		orrs	r2, r1
 286 0034 1A60     		str	r2, [r3]
 216:Generated_Source\PSoC4/Columns.c **** }
 287              		.loc 1 216 0
 288 0036 C046     		nop
 289 0038 BD46     		mov	sp, r7
 290 003a 04B0     		add	sp, sp, #16
 291              		@ sp needed
 292 003c 80BD     		pop	{r7, pc}
 293              	.L17:
 294 003e C046     		.align	2
 295              	.L16:
 296 0040 0C020440 		.word	1074004492
 297              		.cfi_endproc
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccFtSeLW.s 			page 10


 298              	.LFE4:
 299              		.size	Columns_SetInterruptMode, .-Columns_SetInterruptMode
 300              		.section	.text.Columns_ClearInterrupt,"ax",%progbits
 301              		.align	2
 302              		.global	Columns_ClearInterrupt
 303              		.code	16
 304              		.thumb_func
 305              		.type	Columns_ClearInterrupt, %function
 306              	Columns_ClearInterrupt:
 307              	.LFB5:
 217:Generated_Source\PSoC4/Columns.c **** 
 218:Generated_Source\PSoC4/Columns.c **** 
 219:Generated_Source\PSoC4/Columns.c **** /*******************************************************************************
 220:Generated_Source\PSoC4/Columns.c **** * Function Name: Columns_ClearInterrupt
 221:Generated_Source\PSoC4/Columns.c **** ****************************************************************************//**
 222:Generated_Source\PSoC4/Columns.c **** *
 223:Generated_Source\PSoC4/Columns.c **** * \brief Clears any active interrupts attached with the component and returns 
 224:Generated_Source\PSoC4/Columns.c **** *  the value of the interrupt status register allowing determination of which
 225:Generated_Source\PSoC4/Columns.c **** *  pins generated an interrupt event.
 226:Generated_Source\PSoC4/Columns.c **** *
 227:Generated_Source\PSoC4/Columns.c **** * \return 
 228:Generated_Source\PSoC4/Columns.c **** *  The right-shifted current value of the interrupt status register. Each pin 
 229:Generated_Source\PSoC4/Columns.c **** *  has one bit set if it generated an interrupt event. For example, bit 0 is 
 230:Generated_Source\PSoC4/Columns.c **** *  for pin 0 and bit 1 is for pin 1 of the Pins component.
 231:Generated_Source\PSoC4/Columns.c **** *  
 232:Generated_Source\PSoC4/Columns.c **** * \sideeffect
 233:Generated_Source\PSoC4/Columns.c **** *  Clears all bits of the physical port's interrupt status register, not just
 234:Generated_Source\PSoC4/Columns.c **** *  those associated with the Pins component.
 235:Generated_Source\PSoC4/Columns.c **** *
 236:Generated_Source\PSoC4/Columns.c **** * \funcusage
 237:Generated_Source\PSoC4/Columns.c **** *  \snippet Columns_SUT.c usage_Columns_ClearInterrupt
 238:Generated_Source\PSoC4/Columns.c **** *******************************************************************************/
 239:Generated_Source\PSoC4/Columns.c **** uint8 Columns_ClearInterrupt(void)
 240:Generated_Source\PSoC4/Columns.c **** {
 308              		.loc 1 240 0
 309              		.cfi_startproc
 310              		@ args = 0, pretend = 0, frame = 8
 311              		@ frame_needed = 1, uses_anonymous_args = 0
 312 0000 80B5     		push	{r7, lr}
 313              		.cfi_def_cfa_offset 8
 314              		.cfi_offset 7, -8
 315              		.cfi_offset 14, -4
 316 0002 82B0     		sub	sp, sp, #8
 317              		.cfi_def_cfa_offset 16
 318 0004 00AF     		add	r7, sp, #0
 319              		.cfi_def_cfa_register 7
 241:Generated_Source\PSoC4/Columns.c **** 	uint8 maskedStatus = (uint8)(Columns_INTSTAT & Columns_MASK);
 320              		.loc 1 241 0
 321 0006 094B     		ldr	r3, .L20
 322 0008 1B68     		ldr	r3, [r3]
 323 000a DAB2     		uxtb	r2, r3
 324 000c FB1D     		adds	r3, r7, #7
 325 000e 0F21     		movs	r1, #15
 326 0010 8A43     		bics	r2, r1
 327 0012 1A70     		strb	r2, [r3]
 242:Generated_Source\PSoC4/Columns.c **** 	Columns_INTSTAT = maskedStatus;
 328              		.loc 1 242 0
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccFtSeLW.s 			page 11


 329 0014 054B     		ldr	r3, .L20
 330 0016 FA1D     		adds	r2, r7, #7
 331 0018 1278     		ldrb	r2, [r2]
 332 001a 1A60     		str	r2, [r3]
 243:Generated_Source\PSoC4/Columns.c ****     return maskedStatus >> Columns_SHIFT;
 333              		.loc 1 243 0
 334 001c FB1D     		adds	r3, r7, #7
 335 001e 1B78     		ldrb	r3, [r3]
 336 0020 1B09     		lsrs	r3, r3, #4
 337 0022 DBB2     		uxtb	r3, r3
 244:Generated_Source\PSoC4/Columns.c **** }
 338              		.loc 1 244 0
 339 0024 1800     		movs	r0, r3
 340 0026 BD46     		mov	sp, r7
 341 0028 02B0     		add	sp, sp, #8
 342              		@ sp needed
 343 002a 80BD     		pop	{r7, pc}
 344              	.L21:
 345              		.align	2
 346              	.L20:
 347 002c 10020440 		.word	1074004496
 348              		.cfi_endproc
 349              	.LFE5:
 350              		.size	Columns_ClearInterrupt, .-Columns_ClearInterrupt
 351              		.text
 352              	.Letext0:
 353              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 354              		.section	.debug_info,"",%progbits
 355              	.Ldebug_info0:
 356 0000 96010000 		.4byte	0x196
 357 0004 0400     		.2byte	0x4
 358 0006 00000000 		.4byte	.Ldebug_abbrev0
 359 000a 04       		.byte	0x4
 360 000b 01       		.uleb128 0x1
 361 000c 81000000 		.4byte	.LASF28
 362 0010 0C       		.byte	0xc
 363 0011 21000000 		.4byte	.LASF29
 364 0015 B9010000 		.4byte	.LASF30
 365 0019 00000000 		.4byte	.Ldebug_ranges0+0
 366 001d 00000000 		.4byte	0
 367 0021 00000000 		.4byte	.Ldebug_line0
 368 0025 02       		.uleb128 0x2
 369 0026 01       		.byte	0x1
 370 0027 06       		.byte	0x6
 371 0028 10020000 		.4byte	.LASF0
 372 002c 02       		.uleb128 0x2
 373 002d 01       		.byte	0x1
 374 002e 08       		.byte	0x8
 375 002f 48000000 		.4byte	.LASF1
 376 0033 02       		.uleb128 0x2
 377 0034 02       		.byte	0x2
 378 0035 05       		.byte	0x5
 379 0036 A9010000 		.4byte	.LASF2
 380 003a 02       		.uleb128 0x2
 381 003b 02       		.byte	0x2
 382 003c 07       		.byte	0x7
 383 003d 6E000000 		.4byte	.LASF3
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccFtSeLW.s 			page 12


 384 0041 02       		.uleb128 0x2
 385 0042 04       		.byte	0x4
 386 0043 05       		.byte	0x5
 387 0044 EE010000 		.4byte	.LASF4
 388 0048 02       		.uleb128 0x2
 389 0049 04       		.byte	0x4
 390 004a 07       		.byte	0x7
 391 004b 5C000000 		.4byte	.LASF5
 392 004f 02       		.uleb128 0x2
 393 0050 08       		.byte	0x8
 394 0051 05       		.byte	0x5
 395 0052 89010000 		.4byte	.LASF6
 396 0056 02       		.uleb128 0x2
 397 0057 08       		.byte	0x8
 398 0058 07       		.byte	0x7
 399 0059 56010000 		.4byte	.LASF7
 400 005d 03       		.uleb128 0x3
 401 005e 04       		.byte	0x4
 402 005f 05       		.byte	0x5
 403 0060 696E7400 		.ascii	"int\000"
 404 0064 02       		.uleb128 0x2
 405 0065 04       		.byte	0x4
 406 0066 07       		.byte	0x7
 407 0067 35010000 		.4byte	.LASF8
 408 006b 04       		.uleb128 0x4
 409 006c B3010000 		.4byte	.LASF9
 410 0070 02       		.byte	0x2
 411 0071 3801     		.2byte	0x138
 412 0073 2C000000 		.4byte	0x2c
 413 0077 04       		.uleb128 0x4
 414 0078 16010000 		.4byte	.LASF10
 415 007c 02       		.byte	0x2
 416 007d 3901     		.2byte	0x139
 417 007f 3A000000 		.4byte	0x3a
 418 0083 04       		.uleb128 0x4
 419 0084 26010000 		.4byte	.LASF11
 420 0088 02       		.byte	0x2
 421 0089 3A01     		.2byte	0x13a
 422 008b 48000000 		.4byte	0x48
 423 008f 02       		.uleb128 0x2
 424 0090 04       		.byte	0x4
 425 0091 04       		.byte	0x4
 426 0092 42000000 		.4byte	.LASF12
 427 0096 02       		.uleb128 0x2
 428 0097 08       		.byte	0x8
 429 0098 04       		.byte	0x4
 430 0099 0F010000 		.4byte	.LASF13
 431 009d 02       		.uleb128 0x2
 432 009e 01       		.byte	0x1
 433 009f 08       		.byte	0x8
 434 00a0 A4010000 		.4byte	.LASF14
 435 00a4 04       		.uleb128 0x4
 436 00a5 00000000 		.4byte	.LASF15
 437 00a9 02       		.byte	0x2
 438 00aa E401     		.2byte	0x1e4
 439 00ac B0000000 		.4byte	0xb0
 440 00b0 05       		.uleb128 0x5
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccFtSeLW.s 			page 13


 441 00b1 83000000 		.4byte	0x83
 442 00b5 06       		.uleb128 0x6
 443 00b6 06000000 		.4byte	.LASF16
 444 00ba 01       		.byte	0x1
 445 00bb 48       		.byte	0x48
 446 00bc 00000000 		.4byte	.LFB0
 447 00c0 78000000 		.4byte	.LFE0-.LFB0
 448 00c4 01       		.uleb128 0x1
 449 00c5 9C       		.byte	0x9c
 450 00c6 D9000000 		.4byte	0xd9
 451 00ca 07       		.uleb128 0x7
 452 00cb 84010000 		.4byte	.LASF18
 453 00cf 01       		.byte	0x1
 454 00d0 48       		.byte	0x48
 455 00d1 6B000000 		.4byte	0x6b
 456 00d5 02       		.uleb128 0x2
 457 00d6 91       		.byte	0x91
 458 00d7 77       		.sleb128 -9
 459 00d8 00       		.byte	0
 460 00d9 06       		.uleb128 0x6
 461 00da 29020000 		.4byte	.LASF17
 462 00de 01       		.byte	0x1
 463 00df 72       		.byte	0x72
 464 00e0 00000000 		.4byte	.LFB1
 465 00e4 48000000 		.4byte	.LFE1-.LFB1
 466 00e8 01       		.uleb128 0x1
 467 00e9 9C       		.byte	0x9c
 468 00ea 0B010000 		.4byte	0x10b
 469 00ee 07       		.uleb128 0x7
 470 00ef 1B000000 		.4byte	.LASF19
 471 00f3 01       		.byte	0x1
 472 00f4 72       		.byte	0x72
 473 00f5 6B000000 		.4byte	0x6b
 474 00f9 02       		.uleb128 0x2
 475 00fa 91       		.byte	0x91
 476 00fb 6F       		.sleb128 -17
 477 00fc 08       		.uleb128 0x8
 478 00fd 56000000 		.4byte	.LASF24
 479 0101 01       		.byte	0x1
 480 0102 74       		.byte	0x74
 481 0103 6B000000 		.4byte	0x6b
 482 0107 02       		.uleb128 0x2
 483 0108 91       		.byte	0x91
 484 0109 77       		.sleb128 -9
 485 010a 00       		.byte	0
 486 010b 09       		.uleb128 0x9
 487 010c 1C020000 		.4byte	.LASF20
 488 0110 01       		.byte	0x1
 489 0111 8B       		.byte	0x8b
 490 0112 6B000000 		.4byte	0x6b
 491 0116 00000000 		.4byte	.LFB2
 492 011a 1C000000 		.4byte	.LFE2-.LFB2
 493 011e 01       		.uleb128 0x1
 494 011f 9C       		.byte	0x9c
 495 0120 09       		.uleb128 0x9
 496 0121 42010000 		.4byte	.LASF21
 497 0125 01       		.byte	0x1
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccFtSeLW.s 			page 14


 498 0126 A7       		.byte	0xa7
 499 0127 6B000000 		.4byte	0x6b
 500 012b 00000000 		.4byte	.LFB3
 501 012f 1C000000 		.4byte	.LFE3-.LFB3
 502 0133 01       		.uleb128 0x1
 503 0134 9C       		.byte	0x9c
 504 0135 06       		.uleb128 0x6
 505 0136 F7010000 		.4byte	.LASF22
 506 013a 01       		.byte	0x1
 507 013b D2       		.byte	0xd2
 508 013c 00000000 		.4byte	.LFB4
 509 0140 44000000 		.4byte	.LFE4-.LFB4
 510 0144 01       		.uleb128 0x1
 511 0145 9C       		.byte	0x9c
 512 0146 75010000 		.4byte	0x175
 513 014a 07       		.uleb128 0x7
 514 014b 1D010000 		.4byte	.LASF23
 515 014f 01       		.byte	0x1
 516 0150 D2       		.byte	0xd2
 517 0151 77000000 		.4byte	0x77
 518 0155 02       		.uleb128 0x2
 519 0156 91       		.byte	0x91
 520 0157 6E       		.sleb128 -18
 521 0158 07       		.uleb128 0x7
 522 0159 84010000 		.4byte	.LASF18
 523 015d 01       		.byte	0x1
 524 015e D2       		.byte	0xd2
 525 015f 77000000 		.4byte	0x77
 526 0163 02       		.uleb128 0x2
 527 0164 91       		.byte	0x91
 528 0165 6C       		.sleb128 -20
 529 0166 08       		.uleb128 0x8
 530 0167 2D010000 		.4byte	.LASF25
 531 016b 01       		.byte	0x1
 532 016c D4       		.byte	0xd4
 533 016d 83000000 		.4byte	0x83
 534 0171 02       		.uleb128 0x2
 535 0172 91       		.byte	0x91
 536 0173 74       		.sleb128 -12
 537 0174 00       		.byte	0
 538 0175 0A       		.uleb128 0xa
 539 0176 6D010000 		.4byte	.LASF26
 540 017a 01       		.byte	0x1
 541 017b EF       		.byte	0xef
 542 017c 6B000000 		.4byte	0x6b
 543 0180 00000000 		.4byte	.LFB5
 544 0184 30000000 		.4byte	.LFE5-.LFB5
 545 0188 01       		.uleb128 0x1
 546 0189 9C       		.byte	0x9c
 547 018a 08       		.uleb128 0x8
 548 018b 97010000 		.4byte	.LASF27
 549 018f 01       		.byte	0x1
 550 0190 F1       		.byte	0xf1
 551 0191 6B000000 		.4byte	0x6b
 552 0195 02       		.uleb128 0x2
 553 0196 91       		.byte	0x91
 554 0197 77       		.sleb128 -9
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccFtSeLW.s 			page 15


 555 0198 00       		.byte	0
 556 0199 00       		.byte	0
 557              		.section	.debug_abbrev,"",%progbits
 558              	.Ldebug_abbrev0:
 559 0000 01       		.uleb128 0x1
 560 0001 11       		.uleb128 0x11
 561 0002 01       		.byte	0x1
 562 0003 25       		.uleb128 0x25
 563 0004 0E       		.uleb128 0xe
 564 0005 13       		.uleb128 0x13
 565 0006 0B       		.uleb128 0xb
 566 0007 03       		.uleb128 0x3
 567 0008 0E       		.uleb128 0xe
 568 0009 1B       		.uleb128 0x1b
 569 000a 0E       		.uleb128 0xe
 570 000b 55       		.uleb128 0x55
 571 000c 17       		.uleb128 0x17
 572 000d 11       		.uleb128 0x11
 573 000e 01       		.uleb128 0x1
 574 000f 10       		.uleb128 0x10
 575 0010 17       		.uleb128 0x17
 576 0011 00       		.byte	0
 577 0012 00       		.byte	0
 578 0013 02       		.uleb128 0x2
 579 0014 24       		.uleb128 0x24
 580 0015 00       		.byte	0
 581 0016 0B       		.uleb128 0xb
 582 0017 0B       		.uleb128 0xb
 583 0018 3E       		.uleb128 0x3e
 584 0019 0B       		.uleb128 0xb
 585 001a 03       		.uleb128 0x3
 586 001b 0E       		.uleb128 0xe
 587 001c 00       		.byte	0
 588 001d 00       		.byte	0
 589 001e 03       		.uleb128 0x3
 590 001f 24       		.uleb128 0x24
 591 0020 00       		.byte	0
 592 0021 0B       		.uleb128 0xb
 593 0022 0B       		.uleb128 0xb
 594 0023 3E       		.uleb128 0x3e
 595 0024 0B       		.uleb128 0xb
 596 0025 03       		.uleb128 0x3
 597 0026 08       		.uleb128 0x8
 598 0027 00       		.byte	0
 599 0028 00       		.byte	0
 600 0029 04       		.uleb128 0x4
 601 002a 16       		.uleb128 0x16
 602 002b 00       		.byte	0
 603 002c 03       		.uleb128 0x3
 604 002d 0E       		.uleb128 0xe
 605 002e 3A       		.uleb128 0x3a
 606 002f 0B       		.uleb128 0xb
 607 0030 3B       		.uleb128 0x3b
 608 0031 05       		.uleb128 0x5
 609 0032 49       		.uleb128 0x49
 610 0033 13       		.uleb128 0x13
 611 0034 00       		.byte	0
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccFtSeLW.s 			page 16


 612 0035 00       		.byte	0
 613 0036 05       		.uleb128 0x5
 614 0037 35       		.uleb128 0x35
 615 0038 00       		.byte	0
 616 0039 49       		.uleb128 0x49
 617 003a 13       		.uleb128 0x13
 618 003b 00       		.byte	0
 619 003c 00       		.byte	0
 620 003d 06       		.uleb128 0x6
 621 003e 2E       		.uleb128 0x2e
 622 003f 01       		.byte	0x1
 623 0040 3F       		.uleb128 0x3f
 624 0041 19       		.uleb128 0x19
 625 0042 03       		.uleb128 0x3
 626 0043 0E       		.uleb128 0xe
 627 0044 3A       		.uleb128 0x3a
 628 0045 0B       		.uleb128 0xb
 629 0046 3B       		.uleb128 0x3b
 630 0047 0B       		.uleb128 0xb
 631 0048 27       		.uleb128 0x27
 632 0049 19       		.uleb128 0x19
 633 004a 11       		.uleb128 0x11
 634 004b 01       		.uleb128 0x1
 635 004c 12       		.uleb128 0x12
 636 004d 06       		.uleb128 0x6
 637 004e 40       		.uleb128 0x40
 638 004f 18       		.uleb128 0x18
 639 0050 9742     		.uleb128 0x2117
 640 0052 19       		.uleb128 0x19
 641 0053 01       		.uleb128 0x1
 642 0054 13       		.uleb128 0x13
 643 0055 00       		.byte	0
 644 0056 00       		.byte	0
 645 0057 07       		.uleb128 0x7
 646 0058 05       		.uleb128 0x5
 647 0059 00       		.byte	0
 648 005a 03       		.uleb128 0x3
 649 005b 0E       		.uleb128 0xe
 650 005c 3A       		.uleb128 0x3a
 651 005d 0B       		.uleb128 0xb
 652 005e 3B       		.uleb128 0x3b
 653 005f 0B       		.uleb128 0xb
 654 0060 49       		.uleb128 0x49
 655 0061 13       		.uleb128 0x13
 656 0062 02       		.uleb128 0x2
 657 0063 18       		.uleb128 0x18
 658 0064 00       		.byte	0
 659 0065 00       		.byte	0
 660 0066 08       		.uleb128 0x8
 661 0067 34       		.uleb128 0x34
 662 0068 00       		.byte	0
 663 0069 03       		.uleb128 0x3
 664 006a 0E       		.uleb128 0xe
 665 006b 3A       		.uleb128 0x3a
 666 006c 0B       		.uleb128 0xb
 667 006d 3B       		.uleb128 0x3b
 668 006e 0B       		.uleb128 0xb
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccFtSeLW.s 			page 17


 669 006f 49       		.uleb128 0x49
 670 0070 13       		.uleb128 0x13
 671 0071 02       		.uleb128 0x2
 672 0072 18       		.uleb128 0x18
 673 0073 00       		.byte	0
 674 0074 00       		.byte	0
 675 0075 09       		.uleb128 0x9
 676 0076 2E       		.uleb128 0x2e
 677 0077 00       		.byte	0
 678 0078 3F       		.uleb128 0x3f
 679 0079 19       		.uleb128 0x19
 680 007a 03       		.uleb128 0x3
 681 007b 0E       		.uleb128 0xe
 682 007c 3A       		.uleb128 0x3a
 683 007d 0B       		.uleb128 0xb
 684 007e 3B       		.uleb128 0x3b
 685 007f 0B       		.uleb128 0xb
 686 0080 27       		.uleb128 0x27
 687 0081 19       		.uleb128 0x19
 688 0082 49       		.uleb128 0x49
 689 0083 13       		.uleb128 0x13
 690 0084 11       		.uleb128 0x11
 691 0085 01       		.uleb128 0x1
 692 0086 12       		.uleb128 0x12
 693 0087 06       		.uleb128 0x6
 694 0088 40       		.uleb128 0x40
 695 0089 18       		.uleb128 0x18
 696 008a 9742     		.uleb128 0x2117
 697 008c 19       		.uleb128 0x19
 698 008d 00       		.byte	0
 699 008e 00       		.byte	0
 700 008f 0A       		.uleb128 0xa
 701 0090 2E       		.uleb128 0x2e
 702 0091 01       		.byte	0x1
 703 0092 3F       		.uleb128 0x3f
 704 0093 19       		.uleb128 0x19
 705 0094 03       		.uleb128 0x3
 706 0095 0E       		.uleb128 0xe
 707 0096 3A       		.uleb128 0x3a
 708 0097 0B       		.uleb128 0xb
 709 0098 3B       		.uleb128 0x3b
 710 0099 0B       		.uleb128 0xb
 711 009a 27       		.uleb128 0x27
 712 009b 19       		.uleb128 0x19
 713 009c 49       		.uleb128 0x49
 714 009d 13       		.uleb128 0x13
 715 009e 11       		.uleb128 0x11
 716 009f 01       		.uleb128 0x1
 717 00a0 12       		.uleb128 0x12
 718 00a1 06       		.uleb128 0x6
 719 00a2 40       		.uleb128 0x40
 720 00a3 18       		.uleb128 0x18
 721 00a4 9742     		.uleb128 0x2117
 722 00a6 19       		.uleb128 0x19
 723 00a7 00       		.byte	0
 724 00a8 00       		.byte	0
 725 00a9 00       		.byte	0
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccFtSeLW.s 			page 18


 726              		.section	.debug_aranges,"",%progbits
 727 0000 44000000 		.4byte	0x44
 728 0004 0200     		.2byte	0x2
 729 0006 00000000 		.4byte	.Ldebug_info0
 730 000a 04       		.byte	0x4
 731 000b 00       		.byte	0
 732 000c 0000     		.2byte	0
 733 000e 0000     		.2byte	0
 734 0010 00000000 		.4byte	.LFB0
 735 0014 78000000 		.4byte	.LFE0-.LFB0
 736 0018 00000000 		.4byte	.LFB1
 737 001c 48000000 		.4byte	.LFE1-.LFB1
 738 0020 00000000 		.4byte	.LFB2
 739 0024 1C000000 		.4byte	.LFE2-.LFB2
 740 0028 00000000 		.4byte	.LFB3
 741 002c 1C000000 		.4byte	.LFE3-.LFB3
 742 0030 00000000 		.4byte	.LFB4
 743 0034 44000000 		.4byte	.LFE4-.LFB4
 744 0038 00000000 		.4byte	.LFB5
 745 003c 30000000 		.4byte	.LFE5-.LFB5
 746 0040 00000000 		.4byte	0
 747 0044 00000000 		.4byte	0
 748              		.section	.debug_ranges,"",%progbits
 749              	.Ldebug_ranges0:
 750 0000 00000000 		.4byte	.LFB0
 751 0004 78000000 		.4byte	.LFE0
 752 0008 00000000 		.4byte	.LFB1
 753 000c 48000000 		.4byte	.LFE1
 754 0010 00000000 		.4byte	.LFB2
 755 0014 1C000000 		.4byte	.LFE2
 756 0018 00000000 		.4byte	.LFB3
 757 001c 1C000000 		.4byte	.LFE3
 758 0020 00000000 		.4byte	.LFB4
 759 0024 44000000 		.4byte	.LFE4
 760 0028 00000000 		.4byte	.LFB5
 761 002c 30000000 		.4byte	.LFE5
 762 0030 00000000 		.4byte	0
 763 0034 00000000 		.4byte	0
 764              		.section	.debug_line,"",%progbits
 765              	.Ldebug_line0:
 766 0000 BE000000 		.section	.debug_str,"MS",%progbits,1
 766      02004400 
 766      00000201 
 766      FB0E0D00 
 766      01010101 
 767              	.LASF15:
 768 0000 72656733 		.ascii	"reg32\000"
 768      3200
 769              	.LASF16:
 770 0006 436F6C75 		.ascii	"Columns_SetDriveMode\000"
 770      6D6E735F 
 770      53657444 
 770      72697665 
 770      4D6F6465 
 771              	.LASF19:
 772 001b 76616C75 		.ascii	"value\000"
 772      6500
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccFtSeLW.s 			page 19


 773              	.LASF29:
 774 0021 47656E65 		.ascii	"Generated_Source\\PSoC4\\Columns.c\000"
 774      72617465 
 774      645F536F 
 774      75726365 
 774      5C50536F 
 775              	.LASF12:
 776 0042 666C6F61 		.ascii	"float\000"
 776      7400
 777              	.LASF1:
 778 0048 756E7369 		.ascii	"unsigned char\000"
 778      676E6564 
 778      20636861 
 778      7200
 779              	.LASF24:
 780 0056 64725661 		.ascii	"drVal\000"
 780      6C00
 781              	.LASF5:
 782 005c 6C6F6E67 		.ascii	"long unsigned int\000"
 782      20756E73 
 782      69676E65 
 782      6420696E 
 782      7400
 783              	.LASF3:
 784 006e 73686F72 		.ascii	"short unsigned int\000"
 784      7420756E 
 784      7369676E 
 784      65642069 
 784      6E7400
 785              	.LASF28:
 786 0081 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 786      43313120 
 786      352E342E 
 786      31203230 
 786      31363036 
 787 00b4 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 787      20726576 
 787      6973696F 
 787      6E203233 
 787      37373135 
 788 00e7 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 788      66756E63 
 788      74696F6E 
 788      2D736563 
 788      74696F6E 
 789              	.LASF13:
 790 010f 646F7562 		.ascii	"double\000"
 790      6C6500
 791              	.LASF10:
 792 0116 75696E74 		.ascii	"uint16\000"
 792      313600
 793              	.LASF23:
 794 011d 706F7369 		.ascii	"position\000"
 794      74696F6E 
 794      00
 795              	.LASF11:
 796 0126 75696E74 		.ascii	"uint32\000"
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccFtSeLW.s 			page 20


 796      333200
 797              	.LASF25:
 798 012d 696E7472 		.ascii	"intrCfg\000"
 798      43666700 
 799              	.LASF8:
 800 0135 756E7369 		.ascii	"unsigned int\000"
 800      676E6564 
 800      20696E74 
 800      00
 801              	.LASF21:
 802 0142 436F6C75 		.ascii	"Columns_ReadDataReg\000"
 802      6D6E735F 
 802      52656164 
 802      44617461 
 802      52656700 
 803              	.LASF7:
 804 0156 6C6F6E67 		.ascii	"long long unsigned int\000"
 804      206C6F6E 
 804      6720756E 
 804      7369676E 
 804      65642069 
 805              	.LASF26:
 806 016d 436F6C75 		.ascii	"Columns_ClearInterrupt\000"
 806      6D6E735F 
 806      436C6561 
 806      72496E74 
 806      65727275 
 807              	.LASF18:
 808 0184 6D6F6465 		.ascii	"mode\000"
 808      00
 809              	.LASF6:
 810 0189 6C6F6E67 		.ascii	"long long int\000"
 810      206C6F6E 
 810      6720696E 
 810      7400
 811              	.LASF27:
 812 0197 6D61736B 		.ascii	"maskedStatus\000"
 812      65645374 
 812      61747573 
 812      00
 813              	.LASF14:
 814 01a4 63686172 		.ascii	"char\000"
 814      00
 815              	.LASF2:
 816 01a9 73686F72 		.ascii	"short int\000"
 816      7420696E 
 816      7400
 817              	.LASF9:
 818 01b3 75696E74 		.ascii	"uint8\000"
 818      3800
 819              	.LASF30:
 820 01b9 433A5C55 		.ascii	"C:\\Users\\fabis\\Desktop\\CE210558_GPIO_Interrupt."
 820      73657273 
 820      5C666162 
 820      69735C44 
 820      65736B74 
 821 01e8 63796473 		.ascii	"cydsn\000"
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccFtSeLW.s 			page 21


 821      6E00
 822              	.LASF4:
 823 01ee 6C6F6E67 		.ascii	"long int\000"
 823      20696E74 
 823      00
 824              	.LASF22:
 825 01f7 436F6C75 		.ascii	"Columns_SetInterruptMode\000"
 825      6D6E735F 
 825      53657449 
 825      6E746572 
 825      72757074 
 826              	.LASF0:
 827 0210 7369676E 		.ascii	"signed char\000"
 827      65642063 
 827      68617200 
 828              	.LASF20:
 829 021c 436F6C75 		.ascii	"Columns_Read\000"
 829      6D6E735F 
 829      52656164 
 829      00
 830              	.LASF17:
 831 0229 436F6C75 		.ascii	"Columns_Write\000"
 831      6D6E735F 
 831      57726974 
 831      6500
 832              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
