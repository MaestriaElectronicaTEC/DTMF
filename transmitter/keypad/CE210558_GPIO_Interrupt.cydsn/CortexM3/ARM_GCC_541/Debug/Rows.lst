ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccwi5RGX.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"Rows.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.Rows_Write,"ax",%progbits
  20              		.align	2
  21              		.global	Rows_Write
  22              		.thumb
  23              		.thumb_func
  24              		.type	Rows_Write, %function
  25              	Rows_Write:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC5\\Rows.c"
   1:Generated_Source\PSoC5/Rows.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/Rows.c **** * File Name: Rows.c  
   3:Generated_Source\PSoC5/Rows.c **** * Version 2.20
   4:Generated_Source\PSoC5/Rows.c **** *
   5:Generated_Source\PSoC5/Rows.c **** * Description:
   6:Generated_Source\PSoC5/Rows.c **** *  This file contains API to enable firmware control of a Pins component.
   7:Generated_Source\PSoC5/Rows.c **** *
   8:Generated_Source\PSoC5/Rows.c **** * Note:
   9:Generated_Source\PSoC5/Rows.c **** *
  10:Generated_Source\PSoC5/Rows.c **** ********************************************************************************
  11:Generated_Source\PSoC5/Rows.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:Generated_Source\PSoC5/Rows.c **** * You may use this file only in accordance with the license, terms, conditions, 
  13:Generated_Source\PSoC5/Rows.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  14:Generated_Source\PSoC5/Rows.c **** * the software package with which this file was provided.
  15:Generated_Source\PSoC5/Rows.c **** *******************************************************************************/
  16:Generated_Source\PSoC5/Rows.c **** 
  17:Generated_Source\PSoC5/Rows.c **** #include "cytypes.h"
  18:Generated_Source\PSoC5/Rows.c **** #include "Rows.h"
  19:Generated_Source\PSoC5/Rows.c **** 
  20:Generated_Source\PSoC5/Rows.c **** /* APIs are not generated for P15[7:6] on PSoC 5 */
  21:Generated_Source\PSoC5/Rows.c **** #if !(CY_PSOC5A &&\
  22:Generated_Source\PSoC5/Rows.c **** 	 Rows__PORT == 15 && ((Rows__MASK & 0xC0) != 0))
  23:Generated_Source\PSoC5/Rows.c **** 
  24:Generated_Source\PSoC5/Rows.c **** 
  25:Generated_Source\PSoC5/Rows.c **** /*******************************************************************************
  26:Generated_Source\PSoC5/Rows.c **** * Function Name: Rows_Write
  27:Generated_Source\PSoC5/Rows.c **** ****************************************************************************//**
  28:Generated_Source\PSoC5/Rows.c **** *
  29:Generated_Source\PSoC5/Rows.c **** * \brief Writes the value to the physical port (data output register), masking
  30:Generated_Source\PSoC5/Rows.c **** *  and shifting the bits appropriately. 
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccwi5RGX.s 			page 2


  31:Generated_Source\PSoC5/Rows.c **** *
  32:Generated_Source\PSoC5/Rows.c **** * The data output register controls the signal applied to the physical pin in 
  33:Generated_Source\PSoC5/Rows.c **** * conjunction with the drive mode parameter. This function avoids changing 
  34:Generated_Source\PSoC5/Rows.c **** * other bits in the port by using the appropriate method (read-modify-write or
  35:Generated_Source\PSoC5/Rows.c **** * bit banding).
  36:Generated_Source\PSoC5/Rows.c **** *
  37:Generated_Source\PSoC5/Rows.c **** * <b>Note</b> This function should not be used on a hardware digital output pin 
  38:Generated_Source\PSoC5/Rows.c **** * as it is driven by the hardware signal attached to it.
  39:Generated_Source\PSoC5/Rows.c **** *
  40:Generated_Source\PSoC5/Rows.c **** * \param value
  41:Generated_Source\PSoC5/Rows.c **** *  Value to write to the component instance.
  42:Generated_Source\PSoC5/Rows.c **** *
  43:Generated_Source\PSoC5/Rows.c **** * \return 
  44:Generated_Source\PSoC5/Rows.c **** *  None 
  45:Generated_Source\PSoC5/Rows.c **** *
  46:Generated_Source\PSoC5/Rows.c **** * \sideeffect
  47:Generated_Source\PSoC5/Rows.c **** *  If you use read-modify-write operations that are not atomic; the Interrupt 
  48:Generated_Source\PSoC5/Rows.c **** *  Service Routines (ISR) can cause corruption of this function. An ISR that 
  49:Generated_Source\PSoC5/Rows.c **** *  interrupts this function and performs writes to the Pins component data 
  50:Generated_Source\PSoC5/Rows.c **** *  register can cause corrupted port data. To avoid this issue, you should 
  51:Generated_Source\PSoC5/Rows.c **** *  either use the Per-Pin APIs (primary method) or disable interrupts around 
  52:Generated_Source\PSoC5/Rows.c **** *  this function.
  53:Generated_Source\PSoC5/Rows.c **** *
  54:Generated_Source\PSoC5/Rows.c **** * \funcusage
  55:Generated_Source\PSoC5/Rows.c **** *  \snippet Rows_SUT.c usage_Rows_Write
  56:Generated_Source\PSoC5/Rows.c **** *******************************************************************************/
  57:Generated_Source\PSoC5/Rows.c **** void Rows_Write(uint8 value)
  58:Generated_Source\PSoC5/Rows.c **** {
  28              		.loc 1 58 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 16
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
  36 0002 85B0     		sub	sp, sp, #20
  37              		.cfi_def_cfa_offset 24
  38 0004 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  40 0006 0346     		mov	r3, r0
  41 0008 FB71     		strb	r3, [r7, #7]
  59:Generated_Source\PSoC5/Rows.c ****     uint8 staticBits = (Rows_DR & (uint8)(~Rows_MASK));
  42              		.loc 1 59 0
  43 000a 0A4B     		ldr	r3, .L2
  44 000c 1B78     		ldrb	r3, [r3]
  45 000e DBB2     		uxtb	r3, r3
  46 0010 23F00F03 		bic	r3, r3, #15
  47 0014 FB73     		strb	r3, [r7, #15]
  60:Generated_Source\PSoC5/Rows.c ****     Rows_DR = staticBits | ((uint8)(value << Rows_SHIFT) & Rows_MASK);
  48              		.loc 1 60 0
  49 0016 0749     		ldr	r1, .L2
  50 0018 FB79     		ldrb	r3, [r7, #7]
  51 001a 03F00F03 		and	r3, r3, #15
  52 001e DAB2     		uxtb	r2, r3
  53 0020 FB7B     		ldrb	r3, [r7, #15]
  54 0022 1343     		orrs	r3, r3, r2
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccwi5RGX.s 			page 3


  55 0024 DBB2     		uxtb	r3, r3
  56 0026 0B70     		strb	r3, [r1]
  61:Generated_Source\PSoC5/Rows.c **** }
  57              		.loc 1 61 0
  58 0028 00BF     		nop
  59 002a 1437     		adds	r7, r7, #20
  60              		.cfi_def_cfa_offset 4
  61 002c BD46     		mov	sp, r7
  62              		.cfi_def_cfa_register 13
  63              		@ sp needed
  64 002e 80BC     		pop	{r7}
  65              		.cfi_restore 7
  66              		.cfi_def_cfa_offset 0
  67 0030 7047     		bx	lr
  68              	.L3:
  69 0032 00BF     		.align	2
  70              	.L2:
  71 0034 20510040 		.word	1073762592
  72              		.cfi_endproc
  73              	.LFE0:
  74              		.size	Rows_Write, .-Rows_Write
  75              		.section	.text.Rows_SetDriveMode,"ax",%progbits
  76              		.align	2
  77              		.global	Rows_SetDriveMode
  78              		.thumb
  79              		.thumb_func
  80              		.type	Rows_SetDriveMode, %function
  81              	Rows_SetDriveMode:
  82              	.LFB1:
  62:Generated_Source\PSoC5/Rows.c **** 
  63:Generated_Source\PSoC5/Rows.c **** 
  64:Generated_Source\PSoC5/Rows.c **** /*******************************************************************************
  65:Generated_Source\PSoC5/Rows.c **** * Function Name: Rows_SetDriveMode
  66:Generated_Source\PSoC5/Rows.c **** ****************************************************************************//**
  67:Generated_Source\PSoC5/Rows.c **** *
  68:Generated_Source\PSoC5/Rows.c **** * \brief Sets the drive mode for each of the Pins component's pins.
  69:Generated_Source\PSoC5/Rows.c **** * 
  70:Generated_Source\PSoC5/Rows.c **** * <b>Note</b> This affects all pins in the Pins component instance. Use the
  71:Generated_Source\PSoC5/Rows.c **** * Per-Pin APIs if you wish to control individual pin's drive modes.
  72:Generated_Source\PSoC5/Rows.c **** *
  73:Generated_Source\PSoC5/Rows.c **** * \param mode
  74:Generated_Source\PSoC5/Rows.c **** *  Mode for the selected signals. Valid options are documented in 
  75:Generated_Source\PSoC5/Rows.c **** *  \ref driveMode.
  76:Generated_Source\PSoC5/Rows.c **** *
  77:Generated_Source\PSoC5/Rows.c **** * \return
  78:Generated_Source\PSoC5/Rows.c **** *  None
  79:Generated_Source\PSoC5/Rows.c **** *
  80:Generated_Source\PSoC5/Rows.c **** * \sideeffect
  81:Generated_Source\PSoC5/Rows.c **** *  If you use read-modify-write operations that are not atomic, the ISR can
  82:Generated_Source\PSoC5/Rows.c **** *  cause corruption of this function. An ISR that interrupts this function 
  83:Generated_Source\PSoC5/Rows.c **** *  and performs writes to the Pins component Drive Mode registers can cause 
  84:Generated_Source\PSoC5/Rows.c **** *  corrupted port data. To avoid this issue, you should either use the Per-Pin
  85:Generated_Source\PSoC5/Rows.c **** *  APIs (primary method) or disable interrupts around this function.
  86:Generated_Source\PSoC5/Rows.c **** *
  87:Generated_Source\PSoC5/Rows.c **** * \funcusage
  88:Generated_Source\PSoC5/Rows.c **** *  \snippet Rows_SUT.c usage_Rows_SetDriveMode
  89:Generated_Source\PSoC5/Rows.c **** *******************************************************************************/
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccwi5RGX.s 			page 4


  90:Generated_Source\PSoC5/Rows.c **** void Rows_SetDriveMode(uint8 mode)
  91:Generated_Source\PSoC5/Rows.c **** {
  83              		.loc 1 91 0
  84              		.cfi_startproc
  85              		@ args = 0, pretend = 0, frame = 8
  86              		@ frame_needed = 1, uses_anonymous_args = 0
  87              		@ link register save eliminated.
  88 0000 80B4     		push	{r7}
  89              		.cfi_def_cfa_offset 4
  90              		.cfi_offset 7, -4
  91 0002 83B0     		sub	sp, sp, #12
  92              		.cfi_def_cfa_offset 16
  93 0004 00AF     		add	r7, sp, #0
  94              		.cfi_def_cfa_register 7
  95 0006 0346     		mov	r3, r0
  96 0008 FB71     		strb	r3, [r7, #7]
  92:Generated_Source\PSoC5/Rows.c **** 	CyPins_SetPinDriveMode(Rows_0, mode);
  97              		.loc 1 92 0
  98 000a 2449     		ldr	r1, .L5
  99 000c 234B     		ldr	r3, .L5
 100 000e 1B78     		ldrb	r3, [r3]
 101 0010 DBB2     		uxtb	r3, r3
 102 0012 5BB2     		sxtb	r3, r3
 103 0014 23F00E03 		bic	r3, r3, #14
 104 0018 5AB2     		sxtb	r2, r3
 105 001a 97F90730 		ldrsb	r3, [r7, #7]
 106 001e 03F00E03 		and	r3, r3, #14
 107 0022 5BB2     		sxtb	r3, r3
 108 0024 1343     		orrs	r3, r3, r2
 109 0026 5BB2     		sxtb	r3, r3
 110 0028 DBB2     		uxtb	r3, r3
 111 002a 0B70     		strb	r3, [r1]
  93:Generated_Source\PSoC5/Rows.c **** 	CyPins_SetPinDriveMode(Rows_1, mode);
 112              		.loc 1 93 0
 113 002c 1C49     		ldr	r1, .L5+4
 114 002e 1C4B     		ldr	r3, .L5+4
 115 0030 1B78     		ldrb	r3, [r3]
 116 0032 DBB2     		uxtb	r3, r3
 117 0034 5BB2     		sxtb	r3, r3
 118 0036 23F00E03 		bic	r3, r3, #14
 119 003a 5AB2     		sxtb	r2, r3
 120 003c 97F90730 		ldrsb	r3, [r7, #7]
 121 0040 03F00E03 		and	r3, r3, #14
 122 0044 5BB2     		sxtb	r3, r3
 123 0046 1343     		orrs	r3, r3, r2
 124 0048 5BB2     		sxtb	r3, r3
 125 004a DBB2     		uxtb	r3, r3
 126 004c 0B70     		strb	r3, [r1]
  94:Generated_Source\PSoC5/Rows.c **** 	CyPins_SetPinDriveMode(Rows_2, mode);
 127              		.loc 1 94 0
 128 004e 1549     		ldr	r1, .L5+8
 129 0050 144B     		ldr	r3, .L5+8
 130 0052 1B78     		ldrb	r3, [r3]
 131 0054 DBB2     		uxtb	r3, r3
 132 0056 5BB2     		sxtb	r3, r3
 133 0058 23F00E03 		bic	r3, r3, #14
 134 005c 5AB2     		sxtb	r2, r3
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccwi5RGX.s 			page 5


 135 005e 97F90730 		ldrsb	r3, [r7, #7]
 136 0062 03F00E03 		and	r3, r3, #14
 137 0066 5BB2     		sxtb	r3, r3
 138 0068 1343     		orrs	r3, r3, r2
 139 006a 5BB2     		sxtb	r3, r3
 140 006c DBB2     		uxtb	r3, r3
 141 006e 0B70     		strb	r3, [r1]
  95:Generated_Source\PSoC5/Rows.c **** 	CyPins_SetPinDriveMode(Rows_3, mode);
 142              		.loc 1 95 0
 143 0070 0D49     		ldr	r1, .L5+12
 144 0072 0D4B     		ldr	r3, .L5+12
 145 0074 1B78     		ldrb	r3, [r3]
 146 0076 DBB2     		uxtb	r3, r3
 147 0078 5BB2     		sxtb	r3, r3
 148 007a 23F00E03 		bic	r3, r3, #14
 149 007e 5AB2     		sxtb	r2, r3
 150 0080 97F90730 		ldrsb	r3, [r7, #7]
 151 0084 03F00E03 		and	r3, r3, #14
 152 0088 5BB2     		sxtb	r3, r3
 153 008a 1343     		orrs	r3, r3, r2
 154 008c 5BB2     		sxtb	r3, r3
 155 008e DBB2     		uxtb	r3, r3
 156 0090 0B70     		strb	r3, [r1]
  96:Generated_Source\PSoC5/Rows.c **** }
 157              		.loc 1 96 0
 158 0092 00BF     		nop
 159 0094 0C37     		adds	r7, r7, #12
 160              		.cfi_def_cfa_offset 4
 161 0096 BD46     		mov	sp, r7
 162              		.cfi_def_cfa_register 13
 163              		@ sp needed
 164 0098 80BC     		pop	{r7}
 165              		.cfi_restore 7
 166              		.cfi_def_cfa_offset 0
 167 009a 7047     		bx	lr
 168              	.L6:
 169              		.align	2
 170              	.L5:
 171 009c 10500040 		.word	1073762320
 172 00a0 11500040 		.word	1073762321
 173 00a4 12500040 		.word	1073762322
 174 00a8 13500040 		.word	1073762323
 175              		.cfi_endproc
 176              	.LFE1:
 177              		.size	Rows_SetDriveMode, .-Rows_SetDriveMode
 178              		.section	.text.Rows_Read,"ax",%progbits
 179              		.align	2
 180              		.global	Rows_Read
 181              		.thumb
 182              		.thumb_func
 183              		.type	Rows_Read, %function
 184              	Rows_Read:
 185              	.LFB2:
  97:Generated_Source\PSoC5/Rows.c **** 
  98:Generated_Source\PSoC5/Rows.c **** 
  99:Generated_Source\PSoC5/Rows.c **** /*******************************************************************************
 100:Generated_Source\PSoC5/Rows.c **** * Function Name: Rows_Read
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccwi5RGX.s 			page 6


 101:Generated_Source\PSoC5/Rows.c **** ****************************************************************************//**
 102:Generated_Source\PSoC5/Rows.c **** *
 103:Generated_Source\PSoC5/Rows.c **** * \brief Reads the associated physical port (pin status register) and masks 
 104:Generated_Source\PSoC5/Rows.c **** *  the required bits according to the width and bit position of the component
 105:Generated_Source\PSoC5/Rows.c **** *  instance. 
 106:Generated_Source\PSoC5/Rows.c **** *
 107:Generated_Source\PSoC5/Rows.c **** * The pin's status register returns the current logic level present on the 
 108:Generated_Source\PSoC5/Rows.c **** * physical pin.
 109:Generated_Source\PSoC5/Rows.c **** *
 110:Generated_Source\PSoC5/Rows.c **** * \return 
 111:Generated_Source\PSoC5/Rows.c **** *  The current value for the pins in the component as a right justified number.
 112:Generated_Source\PSoC5/Rows.c **** *
 113:Generated_Source\PSoC5/Rows.c **** * \funcusage
 114:Generated_Source\PSoC5/Rows.c **** *  \snippet Rows_SUT.c usage_Rows_Read  
 115:Generated_Source\PSoC5/Rows.c **** *******************************************************************************/
 116:Generated_Source\PSoC5/Rows.c **** uint8 Rows_Read(void)
 117:Generated_Source\PSoC5/Rows.c **** {
 186              		.loc 1 117 0
 187              		.cfi_startproc
 188              		@ args = 0, pretend = 0, frame = 0
 189              		@ frame_needed = 1, uses_anonymous_args = 0
 190              		@ link register save eliminated.
 191 0000 80B4     		push	{r7}
 192              		.cfi_def_cfa_offset 4
 193              		.cfi_offset 7, -4
 194 0002 00AF     		add	r7, sp, #0
 195              		.cfi_def_cfa_register 7
 118:Generated_Source\PSoC5/Rows.c ****     return (Rows_PS & Rows_MASK) >> Rows_SHIFT;
 196              		.loc 1 118 0
 197 0004 044B     		ldr	r3, .L9
 198 0006 1B78     		ldrb	r3, [r3]
 199 0008 DBB2     		uxtb	r3, r3
 200 000a 03F00F03 		and	r3, r3, #15
 201 000e DBB2     		uxtb	r3, r3
 119:Generated_Source\PSoC5/Rows.c **** }
 202              		.loc 1 119 0
 203 0010 1846     		mov	r0, r3
 204 0012 BD46     		mov	sp, r7
 205              		.cfi_def_cfa_register 13
 206              		@ sp needed
 207 0014 80BC     		pop	{r7}
 208              		.cfi_restore 7
 209              		.cfi_def_cfa_offset 0
 210 0016 7047     		bx	lr
 211              	.L10:
 212              		.align	2
 213              	.L9:
 214 0018 21510040 		.word	1073762593
 215              		.cfi_endproc
 216              	.LFE2:
 217              		.size	Rows_Read, .-Rows_Read
 218              		.section	.text.Rows_ReadDataReg,"ax",%progbits
 219              		.align	2
 220              		.global	Rows_ReadDataReg
 221              		.thumb
 222              		.thumb_func
 223              		.type	Rows_ReadDataReg, %function
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccwi5RGX.s 			page 7


 224              	Rows_ReadDataReg:
 225              	.LFB3:
 120:Generated_Source\PSoC5/Rows.c **** 
 121:Generated_Source\PSoC5/Rows.c **** 
 122:Generated_Source\PSoC5/Rows.c **** /*******************************************************************************
 123:Generated_Source\PSoC5/Rows.c **** * Function Name: Rows_ReadDataReg
 124:Generated_Source\PSoC5/Rows.c **** ****************************************************************************//**
 125:Generated_Source\PSoC5/Rows.c **** *
 126:Generated_Source\PSoC5/Rows.c **** * \brief Reads the associated physical port's data output register and masks 
 127:Generated_Source\PSoC5/Rows.c **** *  the correct bits according to the width and bit position of the component 
 128:Generated_Source\PSoC5/Rows.c **** *  instance. 
 129:Generated_Source\PSoC5/Rows.c **** *
 130:Generated_Source\PSoC5/Rows.c **** * The data output register controls the signal applied to the physical pin in 
 131:Generated_Source\PSoC5/Rows.c **** * conjunction with the drive mode parameter. This is not the same as the 
 132:Generated_Source\PSoC5/Rows.c **** * preferred Rows_Read() API because the 
 133:Generated_Source\PSoC5/Rows.c **** * Rows_ReadDataReg() reads the data register instead of the status 
 134:Generated_Source\PSoC5/Rows.c **** * register. For output pins this is a useful function to determine the value 
 135:Generated_Source\PSoC5/Rows.c **** * just written to the pin.
 136:Generated_Source\PSoC5/Rows.c **** *
 137:Generated_Source\PSoC5/Rows.c **** * \return 
 138:Generated_Source\PSoC5/Rows.c **** *  The current value of the data register masked and shifted into a right 
 139:Generated_Source\PSoC5/Rows.c **** *  justified number for the component instance.
 140:Generated_Source\PSoC5/Rows.c **** *
 141:Generated_Source\PSoC5/Rows.c **** * \funcusage
 142:Generated_Source\PSoC5/Rows.c **** *  \snippet Rows_SUT.c usage_Rows_ReadDataReg 
 143:Generated_Source\PSoC5/Rows.c **** *******************************************************************************/
 144:Generated_Source\PSoC5/Rows.c **** uint8 Rows_ReadDataReg(void)
 145:Generated_Source\PSoC5/Rows.c **** {
 226              		.loc 1 145 0
 227              		.cfi_startproc
 228              		@ args = 0, pretend = 0, frame = 0
 229              		@ frame_needed = 1, uses_anonymous_args = 0
 230              		@ link register save eliminated.
 231 0000 80B4     		push	{r7}
 232              		.cfi_def_cfa_offset 4
 233              		.cfi_offset 7, -4
 234 0002 00AF     		add	r7, sp, #0
 235              		.cfi_def_cfa_register 7
 146:Generated_Source\PSoC5/Rows.c ****     return (Rows_DR & Rows_MASK) >> Rows_SHIFT;
 236              		.loc 1 146 0
 237 0004 044B     		ldr	r3, .L13
 238 0006 1B78     		ldrb	r3, [r3]
 239 0008 DBB2     		uxtb	r3, r3
 240 000a 03F00F03 		and	r3, r3, #15
 241 000e DBB2     		uxtb	r3, r3
 147:Generated_Source\PSoC5/Rows.c **** }
 242              		.loc 1 147 0
 243 0010 1846     		mov	r0, r3
 244 0012 BD46     		mov	sp, r7
 245              		.cfi_def_cfa_register 13
 246              		@ sp needed
 247 0014 80BC     		pop	{r7}
 248              		.cfi_restore 7
 249              		.cfi_def_cfa_offset 0
 250 0016 7047     		bx	lr
 251              	.L14:
 252              		.align	2
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccwi5RGX.s 			page 8


 253              	.L13:
 254 0018 20510040 		.word	1073762592
 255              		.cfi_endproc
 256              	.LFE3:
 257              		.size	Rows_ReadDataReg, .-Rows_ReadDataReg
 258              		.section	.text.Rows_SetInterruptMode,"ax",%progbits
 259              		.align	2
 260              		.global	Rows_SetInterruptMode
 261              		.thumb
 262              		.thumb_func
 263              		.type	Rows_SetInterruptMode, %function
 264              	Rows_SetInterruptMode:
 265              	.LFB4:
 148:Generated_Source\PSoC5/Rows.c **** 
 149:Generated_Source\PSoC5/Rows.c **** 
 150:Generated_Source\PSoC5/Rows.c **** /* If interrupt is connected for this Pins component */ 
 151:Generated_Source\PSoC5/Rows.c **** #if defined(Rows_INTSTAT) 
 152:Generated_Source\PSoC5/Rows.c **** 
 153:Generated_Source\PSoC5/Rows.c ****     /*******************************************************************************
 154:Generated_Source\PSoC5/Rows.c ****     * Function Name: Rows_SetInterruptMode
 155:Generated_Source\PSoC5/Rows.c ****     ****************************************************************************//**
 156:Generated_Source\PSoC5/Rows.c ****     *
 157:Generated_Source\PSoC5/Rows.c ****     * \brief Configures the interrupt mode for each of the Pins component's
 158:Generated_Source\PSoC5/Rows.c ****     *  pins. Alternatively you may set the interrupt mode for all the pins
 159:Generated_Source\PSoC5/Rows.c ****     *  specified in the Pins component.
 160:Generated_Source\PSoC5/Rows.c ****     *
 161:Generated_Source\PSoC5/Rows.c ****     *  <b>Note</b> The interrupt is port-wide and therefore any enabled pin
 162:Generated_Source\PSoC5/Rows.c ****     *  interrupt may trigger it.
 163:Generated_Source\PSoC5/Rows.c ****     *
 164:Generated_Source\PSoC5/Rows.c ****     * \param position
 165:Generated_Source\PSoC5/Rows.c ****     *  The pin position as listed in the Pins component. You may OR these to be 
 166:Generated_Source\PSoC5/Rows.c ****     *  able to configure the interrupt mode of multiple pins within a Pins 
 167:Generated_Source\PSoC5/Rows.c ****     *  component. Or you may use Rows_INTR_ALL to configure the
 168:Generated_Source\PSoC5/Rows.c ****     *  interrupt mode of all the pins in the Pins component.       
 169:Generated_Source\PSoC5/Rows.c ****     *  - Rows_0_INTR       (First pin in the list)
 170:Generated_Source\PSoC5/Rows.c ****     *  - Rows_1_INTR       (Second pin in the list)
 171:Generated_Source\PSoC5/Rows.c ****     *  - ...
 172:Generated_Source\PSoC5/Rows.c ****     *  - Rows_INTR_ALL     (All pins in Pins component)
 173:Generated_Source\PSoC5/Rows.c ****     *
 174:Generated_Source\PSoC5/Rows.c ****     * \param mode
 175:Generated_Source\PSoC5/Rows.c ****     *  Interrupt mode for the selected pins. Valid options are documented in
 176:Generated_Source\PSoC5/Rows.c ****     *  \ref intrMode.
 177:Generated_Source\PSoC5/Rows.c ****     *
 178:Generated_Source\PSoC5/Rows.c ****     * \return 
 179:Generated_Source\PSoC5/Rows.c ****     *  None
 180:Generated_Source\PSoC5/Rows.c ****     *  
 181:Generated_Source\PSoC5/Rows.c ****     * \sideeffect
 182:Generated_Source\PSoC5/Rows.c ****     *  It is recommended that the interrupt be disabled before calling this 
 183:Generated_Source\PSoC5/Rows.c ****     *  function to avoid unintended interrupt requests. Note that the interrupt
 184:Generated_Source\PSoC5/Rows.c ****     *  type is port wide, and therefore will trigger for any enabled pin on the 
 185:Generated_Source\PSoC5/Rows.c ****     *  port.
 186:Generated_Source\PSoC5/Rows.c ****     *
 187:Generated_Source\PSoC5/Rows.c ****     * \funcusage
 188:Generated_Source\PSoC5/Rows.c ****     *  \snippet Rows_SUT.c usage_Rows_SetInterruptMode
 189:Generated_Source\PSoC5/Rows.c ****     *******************************************************************************/
 190:Generated_Source\PSoC5/Rows.c ****     void Rows_SetInterruptMode(uint16 position, uint16 mode)
 191:Generated_Source\PSoC5/Rows.c ****     {
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccwi5RGX.s 			page 9


 266              		.loc 1 191 0
 267              		.cfi_startproc
 268              		@ args = 0, pretend = 0, frame = 8
 269              		@ frame_needed = 1, uses_anonymous_args = 0
 270              		@ link register save eliminated.
 271 0000 80B4     		push	{r7}
 272              		.cfi_def_cfa_offset 4
 273              		.cfi_offset 7, -4
 274 0002 83B0     		sub	sp, sp, #12
 275              		.cfi_def_cfa_offset 16
 276 0004 00AF     		add	r7, sp, #0
 277              		.cfi_def_cfa_register 7
 278 0006 0346     		mov	r3, r0
 279 0008 0A46     		mov	r2, r1
 280 000a FB80     		strh	r3, [r7, #6]	@ movhi
 281 000c 1346     		mov	r3, r2	@ movhi
 282 000e BB80     		strh	r3, [r7, #4]	@ movhi
 192:Generated_Source\PSoC5/Rows.c **** 		if((position & Rows_0_INTR) != 0u) 
 283              		.loc 1 192 0
 284 0010 FB88     		ldrh	r3, [r7, #6]
 285 0012 03F00103 		and	r3, r3, #1
 286 0016 002B     		cmp	r3, #0
 287 0018 03D0     		beq	.L16
 193:Generated_Source\PSoC5/Rows.c **** 		{ 
 194:Generated_Source\PSoC5/Rows.c **** 			 Rows_0_INTTYPE_REG = (uint8)mode; 
 288              		.loc 1 194 0
 289 001a 124B     		ldr	r3, .L21
 290 001c BA88     		ldrh	r2, [r7, #4]	@ movhi
 291 001e D2B2     		uxtb	r2, r2
 292 0020 1A70     		strb	r2, [r3]
 293              	.L16:
 195:Generated_Source\PSoC5/Rows.c **** 		} 
 196:Generated_Source\PSoC5/Rows.c **** 		if((position & Rows_1_INTR) != 0u) 
 294              		.loc 1 196 0
 295 0022 FB88     		ldrh	r3, [r7, #6]
 296 0024 03F00203 		and	r3, r3, #2
 297 0028 002B     		cmp	r3, #0
 298 002a 03D0     		beq	.L17
 197:Generated_Source\PSoC5/Rows.c **** 		{ 
 198:Generated_Source\PSoC5/Rows.c **** 			 Rows_1_INTTYPE_REG = (uint8)mode; 
 299              		.loc 1 198 0
 300 002c 0E4B     		ldr	r3, .L21+4
 301 002e BA88     		ldrh	r2, [r7, #4]	@ movhi
 302 0030 D2B2     		uxtb	r2, r2
 303 0032 1A70     		strb	r2, [r3]
 304              	.L17:
 199:Generated_Source\PSoC5/Rows.c **** 		} 
 200:Generated_Source\PSoC5/Rows.c **** 		if((position & Rows_2_INTR) != 0u) 
 305              		.loc 1 200 0
 306 0034 FB88     		ldrh	r3, [r7, #6]
 307 0036 03F00403 		and	r3, r3, #4
 308 003a 002B     		cmp	r3, #0
 309 003c 03D0     		beq	.L18
 201:Generated_Source\PSoC5/Rows.c **** 		{ 
 202:Generated_Source\PSoC5/Rows.c **** 			 Rows_2_INTTYPE_REG = (uint8)mode; 
 310              		.loc 1 202 0
 311 003e 0B4B     		ldr	r3, .L21+8
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccwi5RGX.s 			page 10


 312 0040 BA88     		ldrh	r2, [r7, #4]	@ movhi
 313 0042 D2B2     		uxtb	r2, r2
 314 0044 1A70     		strb	r2, [r3]
 315              	.L18:
 203:Generated_Source\PSoC5/Rows.c **** 		} 
 204:Generated_Source\PSoC5/Rows.c **** 		if((position & Rows_3_INTR) != 0u) 
 316              		.loc 1 204 0
 317 0046 FB88     		ldrh	r3, [r7, #6]
 318 0048 03F00803 		and	r3, r3, #8
 319 004c 002B     		cmp	r3, #0
 320 004e 03D0     		beq	.L20
 205:Generated_Source\PSoC5/Rows.c **** 		{ 
 206:Generated_Source\PSoC5/Rows.c **** 			 Rows_3_INTTYPE_REG = (uint8)mode; 
 321              		.loc 1 206 0
 322 0050 074B     		ldr	r3, .L21+12
 323 0052 BA88     		ldrh	r2, [r7, #4]	@ movhi
 324 0054 D2B2     		uxtb	r2, r2
 325 0056 1A70     		strb	r2, [r3]
 326              	.L20:
 207:Generated_Source\PSoC5/Rows.c **** 		}
 208:Generated_Source\PSoC5/Rows.c ****     }
 327              		.loc 1 208 0
 328 0058 00BF     		nop
 329 005a 0C37     		adds	r7, r7, #12
 330              		.cfi_def_cfa_offset 4
 331 005c BD46     		mov	sp, r7
 332              		.cfi_def_cfa_register 13
 333              		@ sp needed
 334 005e 80BC     		pop	{r7}
 335              		.cfi_restore 7
 336              		.cfi_def_cfa_offset 0
 337 0060 7047     		bx	lr
 338              	.L22:
 339 0062 00BF     		.align	2
 340              	.L21:
 341 0064 10450040 		.word	1073759504
 342 0068 11450040 		.word	1073759505
 343 006c 12450040 		.word	1073759506
 344 0070 13450040 		.word	1073759507
 345              		.cfi_endproc
 346              	.LFE4:
 347              		.size	Rows_SetInterruptMode, .-Rows_SetInterruptMode
 348              		.section	.text.Rows_ClearInterrupt,"ax",%progbits
 349              		.align	2
 350              		.global	Rows_ClearInterrupt
 351              		.thumb
 352              		.thumb_func
 353              		.type	Rows_ClearInterrupt, %function
 354              	Rows_ClearInterrupt:
 355              	.LFB5:
 209:Generated_Source\PSoC5/Rows.c ****     
 210:Generated_Source\PSoC5/Rows.c ****     
 211:Generated_Source\PSoC5/Rows.c ****     /*******************************************************************************
 212:Generated_Source\PSoC5/Rows.c ****     * Function Name: Rows_ClearInterrupt
 213:Generated_Source\PSoC5/Rows.c ****     ****************************************************************************//**
 214:Generated_Source\PSoC5/Rows.c ****     *
 215:Generated_Source\PSoC5/Rows.c ****     * \brief Clears any active interrupts attached with the component and returns 
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccwi5RGX.s 			page 11


 216:Generated_Source\PSoC5/Rows.c ****     *  the value of the interrupt status register allowing determination of which
 217:Generated_Source\PSoC5/Rows.c ****     *  pins generated an interrupt event.
 218:Generated_Source\PSoC5/Rows.c ****     *
 219:Generated_Source\PSoC5/Rows.c ****     * \return 
 220:Generated_Source\PSoC5/Rows.c ****     *  The right-shifted current value of the interrupt status register. Each pin 
 221:Generated_Source\PSoC5/Rows.c ****     *  has one bit set if it generated an interrupt event. For example, bit 0 is 
 222:Generated_Source\PSoC5/Rows.c ****     *  for pin 0 and bit 1 is for pin 1 of the Pins component.
 223:Generated_Source\PSoC5/Rows.c ****     *  
 224:Generated_Source\PSoC5/Rows.c ****     * \sideeffect
 225:Generated_Source\PSoC5/Rows.c ****     *  Clears all bits of the physical port's interrupt status register, not just
 226:Generated_Source\PSoC5/Rows.c ****     *  those associated with the Pins component.
 227:Generated_Source\PSoC5/Rows.c ****     *
 228:Generated_Source\PSoC5/Rows.c ****     * \funcusage
 229:Generated_Source\PSoC5/Rows.c ****     *  \snippet Rows_SUT.c usage_Rows_ClearInterrupt
 230:Generated_Source\PSoC5/Rows.c ****     *******************************************************************************/
 231:Generated_Source\PSoC5/Rows.c ****     uint8 Rows_ClearInterrupt(void)
 232:Generated_Source\PSoC5/Rows.c ****     {
 356              		.loc 1 232 0
 357              		.cfi_startproc
 358              		@ args = 0, pretend = 0, frame = 0
 359              		@ frame_needed = 1, uses_anonymous_args = 0
 360              		@ link register save eliminated.
 361 0000 80B4     		push	{r7}
 362              		.cfi_def_cfa_offset 4
 363              		.cfi_offset 7, -4
 364 0002 00AF     		add	r7, sp, #0
 365              		.cfi_def_cfa_register 7
 233:Generated_Source\PSoC5/Rows.c ****         return (Rows_INTSTAT & Rows_MASK) >> Rows_SHIFT;
 366              		.loc 1 233 0
 367 0004 044B     		ldr	r3, .L25
 368 0006 1B78     		ldrb	r3, [r3]
 369 0008 DBB2     		uxtb	r3, r3
 370 000a 03F00F03 		and	r3, r3, #15
 371 000e DBB2     		uxtb	r3, r3
 234:Generated_Source\PSoC5/Rows.c ****     }
 372              		.loc 1 234 0
 373 0010 1846     		mov	r0, r3
 374 0012 BD46     		mov	sp, r7
 375              		.cfi_def_cfa_register 13
 376              		@ sp needed
 377 0014 80BC     		pop	{r7}
 378              		.cfi_restore 7
 379              		.cfi_def_cfa_offset 0
 380 0016 7047     		bx	lr
 381              	.L26:
 382              		.align	2
 383              	.L25:
 384 0018 82450040 		.word	1073759618
 385              		.cfi_endproc
 386              	.LFE5:
 387              		.size	Rows_ClearInterrupt, .-Rows_ClearInterrupt
 388              		.text
 389              	.Letext0:
 390              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 391              		.section	.debug_info,"",%progbits
 392              	.Ldebug_info0:
 393 0000 6D010000 		.4byte	0x16d
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccwi5RGX.s 			page 12


 394 0004 0400     		.2byte	0x4
 395 0006 00000000 		.4byte	.Ldebug_abbrev0
 396 000a 04       		.byte	0x4
 397 000b 01       		.uleb128 0x1
 398 000c 16000000 		.4byte	.LASF24
 399 0010 0C       		.byte	0xc
 400 0011 D8000000 		.4byte	.LASF25
 401 0015 B6010000 		.4byte	.LASF26
 402 0019 00000000 		.4byte	.Ldebug_ranges0+0
 403 001d 00000000 		.4byte	0
 404 0021 00000000 		.4byte	.Ldebug_line0
 405 0025 02       		.uleb128 0x2
 406 0026 01       		.byte	0x1
 407 0027 06       		.byte	0x6
 408 0028 F4010000 		.4byte	.LASF0
 409 002c 02       		.uleb128 0x2
 410 002d 01       		.byte	0x1
 411 002e 08       		.byte	0x8
 412 002f 10010000 		.4byte	.LASF1
 413 0033 02       		.uleb128 0x2
 414 0034 02       		.byte	0x2
 415 0035 05       		.byte	0x5
 416 0036 9B010000 		.4byte	.LASF2
 417 003a 02       		.uleb128 0x2
 418 003b 02       		.byte	0x2
 419 003c 07       		.byte	0x7
 420 003d 35010000 		.4byte	.LASF3
 421 0041 02       		.uleb128 0x2
 422 0042 04       		.byte	0x4
 423 0043 05       		.byte	0x5
 424 0044 EB010000 		.4byte	.LASF4
 425 0048 02       		.uleb128 0x2
 426 0049 04       		.byte	0x4
 427 004a 07       		.byte	0x7
 428 004b 23010000 		.4byte	.LASF5
 429 004f 02       		.uleb128 0x2
 430 0050 08       		.byte	0x8
 431 0051 05       		.byte	0x5
 432 0052 88010000 		.4byte	.LASF6
 433 0056 02       		.uleb128 0x2
 434 0057 08       		.byte	0x8
 435 0058 07       		.byte	0x7
 436 0059 6C010000 		.4byte	.LASF7
 437 005d 03       		.uleb128 0x3
 438 005e 04       		.byte	0x4
 439 005f 05       		.byte	0x5
 440 0060 696E7400 		.ascii	"int\000"
 441 0064 02       		.uleb128 0x2
 442 0065 04       		.byte	0x4
 443 0066 07       		.byte	0x7
 444 0067 5F010000 		.4byte	.LASF8
 445 006b 04       		.uleb128 0x4
 446 006c A5010000 		.4byte	.LASF9
 447 0070 02       		.byte	0x2
 448 0071 3801     		.2byte	0x138
 449 0073 2C000000 		.4byte	0x2c
 450 0077 04       		.uleb128 0x4
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccwi5RGX.s 			page 13


 451 0078 4F010000 		.4byte	.LASF10
 452 007c 02       		.byte	0x2
 453 007d 3901     		.2byte	0x139
 454 007f 3A000000 		.4byte	0x3a
 455 0083 02       		.uleb128 0x2
 456 0084 04       		.byte	0x4
 457 0085 04       		.byte	0x4
 458 0086 F6000000 		.4byte	.LASF11
 459 008a 02       		.uleb128 0x2
 460 008b 08       		.byte	0x8
 461 008c 04       		.byte	0x4
 462 008d 48010000 		.4byte	.LASF12
 463 0091 02       		.uleb128 0x2
 464 0092 01       		.byte	0x1
 465 0093 08       		.byte	0x8
 466 0094 96010000 		.4byte	.LASF13
 467 0098 04       		.uleb128 0x4
 468 0099 1E010000 		.4byte	.LASF14
 469 009d 02       		.byte	0x2
 470 009e E201     		.2byte	0x1e2
 471 00a0 A4000000 		.4byte	0xa4
 472 00a4 05       		.uleb128 0x5
 473 00a5 6B000000 		.4byte	0x6b
 474 00a9 06       		.uleb128 0x6
 475 00aa AB010000 		.4byte	.LASF15
 476 00ae 01       		.byte	0x1
 477 00af 39       		.byte	0x39
 478 00b0 00000000 		.4byte	.LFB0
 479 00b4 38000000 		.4byte	.LFE0-.LFB0
 480 00b8 01       		.uleb128 0x1
 481 00b9 9C       		.byte	0x9c
 482 00ba DB000000 		.4byte	0xdb
 483 00be 07       		.uleb128 0x7
 484 00bf C7000000 		.4byte	.LASF17
 485 00c3 01       		.byte	0x1
 486 00c4 39       		.byte	0x39
 487 00c5 6B000000 		.4byte	0x6b
 488 00c9 02       		.uleb128 0x2
 489 00ca 91       		.byte	0x91
 490 00cb 6F       		.sleb128 -17
 491 00cc 08       		.uleb128 0x8
 492 00cd CD000000 		.4byte	.LASF27
 493 00d1 01       		.byte	0x1
 494 00d2 3B       		.byte	0x3b
 495 00d3 6B000000 		.4byte	0x6b
 496 00d7 02       		.uleb128 0x2
 497 00d8 91       		.byte	0x91
 498 00d9 77       		.sleb128 -9
 499 00da 00       		.byte	0
 500 00db 06       		.uleb128 0x6
 501 00dc A4000000 		.4byte	.LASF16
 502 00e0 01       		.byte	0x1
 503 00e1 5A       		.byte	0x5a
 504 00e2 00000000 		.4byte	.LFB1
 505 00e6 AC000000 		.4byte	.LFE1-.LFB1
 506 00ea 01       		.uleb128 0x1
 507 00eb 9C       		.byte	0x9c
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccwi5RGX.s 			page 14


 508 00ec FF000000 		.4byte	0xff
 509 00f0 07       		.uleb128 0x7
 510 00f1 83010000 		.4byte	.LASF18
 511 00f5 01       		.byte	0x1
 512 00f6 5A       		.byte	0x5a
 513 00f7 6B000000 		.4byte	0x6b
 514 00fb 02       		.uleb128 0x2
 515 00fc 91       		.byte	0x91
 516 00fd 77       		.sleb128 -9
 517 00fe 00       		.byte	0
 518 00ff 09       		.uleb128 0x9
 519 0100 00020000 		.4byte	.LASF19
 520 0104 01       		.byte	0x1
 521 0105 74       		.byte	0x74
 522 0106 6B000000 		.4byte	0x6b
 523 010a 00000000 		.4byte	.LFB2
 524 010e 1C000000 		.4byte	.LFE2-.LFB2
 525 0112 01       		.uleb128 0x1
 526 0113 9C       		.byte	0x9c
 527 0114 09       		.uleb128 0x9
 528 0115 B6000000 		.4byte	.LASF20
 529 0119 01       		.byte	0x1
 530 011a 90       		.byte	0x90
 531 011b 6B000000 		.4byte	0x6b
 532 011f 00000000 		.4byte	.LFB3
 533 0123 1C000000 		.4byte	.LFE3-.LFB3
 534 0127 01       		.uleb128 0x1
 535 0128 9C       		.byte	0x9c
 536 0129 06       		.uleb128 0x6
 537 012a 00000000 		.4byte	.LASF21
 538 012e 01       		.byte	0x1
 539 012f BE       		.byte	0xbe
 540 0130 00000000 		.4byte	.LFB4
 541 0134 74000000 		.4byte	.LFE4-.LFB4
 542 0138 01       		.uleb128 0x1
 543 0139 9C       		.byte	0x9c
 544 013a 5B010000 		.4byte	0x15b
 545 013e 07       		.uleb128 0x7
 546 013f 56010000 		.4byte	.LASF22
 547 0143 01       		.byte	0x1
 548 0144 BE       		.byte	0xbe
 549 0145 77000000 		.4byte	0x77
 550 0149 02       		.uleb128 0x2
 551 014a 91       		.byte	0x91
 552 014b 76       		.sleb128 -10
 553 014c 07       		.uleb128 0x7
 554 014d 83010000 		.4byte	.LASF18
 555 0151 01       		.byte	0x1
 556 0152 BE       		.byte	0xbe
 557 0153 77000000 		.4byte	0x77
 558 0157 02       		.uleb128 0x2
 559 0158 91       		.byte	0x91
 560 0159 74       		.sleb128 -12
 561 015a 00       		.byte	0
 562 015b 09       		.uleb128 0x9
 563 015c FC000000 		.4byte	.LASF23
 564 0160 01       		.byte	0x1
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccwi5RGX.s 			page 15


 565 0161 E7       		.byte	0xe7
 566 0162 6B000000 		.4byte	0x6b
 567 0166 00000000 		.4byte	.LFB5
 568 016a 1C000000 		.4byte	.LFE5-.LFB5
 569 016e 01       		.uleb128 0x1
 570 016f 9C       		.byte	0x9c
 571 0170 00       		.byte	0
 572              		.section	.debug_abbrev,"",%progbits
 573              	.Ldebug_abbrev0:
 574 0000 01       		.uleb128 0x1
 575 0001 11       		.uleb128 0x11
 576 0002 01       		.byte	0x1
 577 0003 25       		.uleb128 0x25
 578 0004 0E       		.uleb128 0xe
 579 0005 13       		.uleb128 0x13
 580 0006 0B       		.uleb128 0xb
 581 0007 03       		.uleb128 0x3
 582 0008 0E       		.uleb128 0xe
 583 0009 1B       		.uleb128 0x1b
 584 000a 0E       		.uleb128 0xe
 585 000b 55       		.uleb128 0x55
 586 000c 17       		.uleb128 0x17
 587 000d 11       		.uleb128 0x11
 588 000e 01       		.uleb128 0x1
 589 000f 10       		.uleb128 0x10
 590 0010 17       		.uleb128 0x17
 591 0011 00       		.byte	0
 592 0012 00       		.byte	0
 593 0013 02       		.uleb128 0x2
 594 0014 24       		.uleb128 0x24
 595 0015 00       		.byte	0
 596 0016 0B       		.uleb128 0xb
 597 0017 0B       		.uleb128 0xb
 598 0018 3E       		.uleb128 0x3e
 599 0019 0B       		.uleb128 0xb
 600 001a 03       		.uleb128 0x3
 601 001b 0E       		.uleb128 0xe
 602 001c 00       		.byte	0
 603 001d 00       		.byte	0
 604 001e 03       		.uleb128 0x3
 605 001f 24       		.uleb128 0x24
 606 0020 00       		.byte	0
 607 0021 0B       		.uleb128 0xb
 608 0022 0B       		.uleb128 0xb
 609 0023 3E       		.uleb128 0x3e
 610 0024 0B       		.uleb128 0xb
 611 0025 03       		.uleb128 0x3
 612 0026 08       		.uleb128 0x8
 613 0027 00       		.byte	0
 614 0028 00       		.byte	0
 615 0029 04       		.uleb128 0x4
 616 002a 16       		.uleb128 0x16
 617 002b 00       		.byte	0
 618 002c 03       		.uleb128 0x3
 619 002d 0E       		.uleb128 0xe
 620 002e 3A       		.uleb128 0x3a
 621 002f 0B       		.uleb128 0xb
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccwi5RGX.s 			page 16


 622 0030 3B       		.uleb128 0x3b
 623 0031 05       		.uleb128 0x5
 624 0032 49       		.uleb128 0x49
 625 0033 13       		.uleb128 0x13
 626 0034 00       		.byte	0
 627 0035 00       		.byte	0
 628 0036 05       		.uleb128 0x5
 629 0037 35       		.uleb128 0x35
 630 0038 00       		.byte	0
 631 0039 49       		.uleb128 0x49
 632 003a 13       		.uleb128 0x13
 633 003b 00       		.byte	0
 634 003c 00       		.byte	0
 635 003d 06       		.uleb128 0x6
 636 003e 2E       		.uleb128 0x2e
 637 003f 01       		.byte	0x1
 638 0040 3F       		.uleb128 0x3f
 639 0041 19       		.uleb128 0x19
 640 0042 03       		.uleb128 0x3
 641 0043 0E       		.uleb128 0xe
 642 0044 3A       		.uleb128 0x3a
 643 0045 0B       		.uleb128 0xb
 644 0046 3B       		.uleb128 0x3b
 645 0047 0B       		.uleb128 0xb
 646 0048 27       		.uleb128 0x27
 647 0049 19       		.uleb128 0x19
 648 004a 11       		.uleb128 0x11
 649 004b 01       		.uleb128 0x1
 650 004c 12       		.uleb128 0x12
 651 004d 06       		.uleb128 0x6
 652 004e 40       		.uleb128 0x40
 653 004f 18       		.uleb128 0x18
 654 0050 9742     		.uleb128 0x2117
 655 0052 19       		.uleb128 0x19
 656 0053 01       		.uleb128 0x1
 657 0054 13       		.uleb128 0x13
 658 0055 00       		.byte	0
 659 0056 00       		.byte	0
 660 0057 07       		.uleb128 0x7
 661 0058 05       		.uleb128 0x5
 662 0059 00       		.byte	0
 663 005a 03       		.uleb128 0x3
 664 005b 0E       		.uleb128 0xe
 665 005c 3A       		.uleb128 0x3a
 666 005d 0B       		.uleb128 0xb
 667 005e 3B       		.uleb128 0x3b
 668 005f 0B       		.uleb128 0xb
 669 0060 49       		.uleb128 0x49
 670 0061 13       		.uleb128 0x13
 671 0062 02       		.uleb128 0x2
 672 0063 18       		.uleb128 0x18
 673 0064 00       		.byte	0
 674 0065 00       		.byte	0
 675 0066 08       		.uleb128 0x8
 676 0067 34       		.uleb128 0x34
 677 0068 00       		.byte	0
 678 0069 03       		.uleb128 0x3
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccwi5RGX.s 			page 17


 679 006a 0E       		.uleb128 0xe
 680 006b 3A       		.uleb128 0x3a
 681 006c 0B       		.uleb128 0xb
 682 006d 3B       		.uleb128 0x3b
 683 006e 0B       		.uleb128 0xb
 684 006f 49       		.uleb128 0x49
 685 0070 13       		.uleb128 0x13
 686 0071 02       		.uleb128 0x2
 687 0072 18       		.uleb128 0x18
 688 0073 00       		.byte	0
 689 0074 00       		.byte	0
 690 0075 09       		.uleb128 0x9
 691 0076 2E       		.uleb128 0x2e
 692 0077 00       		.byte	0
 693 0078 3F       		.uleb128 0x3f
 694 0079 19       		.uleb128 0x19
 695 007a 03       		.uleb128 0x3
 696 007b 0E       		.uleb128 0xe
 697 007c 3A       		.uleb128 0x3a
 698 007d 0B       		.uleb128 0xb
 699 007e 3B       		.uleb128 0x3b
 700 007f 0B       		.uleb128 0xb
 701 0080 27       		.uleb128 0x27
 702 0081 19       		.uleb128 0x19
 703 0082 49       		.uleb128 0x49
 704 0083 13       		.uleb128 0x13
 705 0084 11       		.uleb128 0x11
 706 0085 01       		.uleb128 0x1
 707 0086 12       		.uleb128 0x12
 708 0087 06       		.uleb128 0x6
 709 0088 40       		.uleb128 0x40
 710 0089 18       		.uleb128 0x18
 711 008a 9742     		.uleb128 0x2117
 712 008c 19       		.uleb128 0x19
 713 008d 00       		.byte	0
 714 008e 00       		.byte	0
 715 008f 00       		.byte	0
 716              		.section	.debug_aranges,"",%progbits
 717 0000 44000000 		.4byte	0x44
 718 0004 0200     		.2byte	0x2
 719 0006 00000000 		.4byte	.Ldebug_info0
 720 000a 04       		.byte	0x4
 721 000b 00       		.byte	0
 722 000c 0000     		.2byte	0
 723 000e 0000     		.2byte	0
 724 0010 00000000 		.4byte	.LFB0
 725 0014 38000000 		.4byte	.LFE0-.LFB0
 726 0018 00000000 		.4byte	.LFB1
 727 001c AC000000 		.4byte	.LFE1-.LFB1
 728 0020 00000000 		.4byte	.LFB2
 729 0024 1C000000 		.4byte	.LFE2-.LFB2
 730 0028 00000000 		.4byte	.LFB3
 731 002c 1C000000 		.4byte	.LFE3-.LFB3
 732 0030 00000000 		.4byte	.LFB4
 733 0034 74000000 		.4byte	.LFE4-.LFB4
 734 0038 00000000 		.4byte	.LFB5
 735 003c 1C000000 		.4byte	.LFE5-.LFB5
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccwi5RGX.s 			page 18


 736 0040 00000000 		.4byte	0
 737 0044 00000000 		.4byte	0
 738              		.section	.debug_ranges,"",%progbits
 739              	.Ldebug_ranges0:
 740 0000 00000000 		.4byte	.LFB0
 741 0004 38000000 		.4byte	.LFE0
 742 0008 00000000 		.4byte	.LFB1
 743 000c AC000000 		.4byte	.LFE1
 744 0010 00000000 		.4byte	.LFB2
 745 0014 1C000000 		.4byte	.LFE2
 746 0018 00000000 		.4byte	.LFB3
 747 001c 1C000000 		.4byte	.LFE3
 748 0020 00000000 		.4byte	.LFB4
 749 0024 74000000 		.4byte	.LFE4
 750 0028 00000000 		.4byte	.LFB5
 751 002c 1C000000 		.4byte	.LFE5
 752 0030 00000000 		.4byte	0
 753 0034 00000000 		.4byte	0
 754              		.section	.debug_line,"",%progbits
 755              	.Ldebug_line0:
 756 0000 C1000000 		.section	.debug_str,"MS",%progbits,1
 756      02004100 
 756      00000201 
 756      FB0E0D00 
 756      01010101 
 757              	.LASF21:
 758 0000 526F7773 		.ascii	"Rows_SetInterruptMode\000"
 758      5F536574 
 758      496E7465 
 758      72727570 
 758      744D6F64 
 759              	.LASF24:
 760 0016 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 760      43313120 
 760      352E342E 
 760      31203230 
 760      31363036 
 761 0049 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 761      20726576 
 761      6973696F 
 761      6E203233 
 761      37373135 
 762 007c 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 762      66756E63 
 762      74696F6E 
 762      2D736563 
 762      74696F6E 
 763              	.LASF16:
 764 00a4 526F7773 		.ascii	"Rows_SetDriveMode\000"
 764      5F536574 
 764      44726976 
 764      654D6F64 
 764      6500
 765              	.LASF20:
 766 00b6 526F7773 		.ascii	"Rows_ReadDataReg\000"
 766      5F526561 
 766      64446174 
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccwi5RGX.s 			page 19


 766      61526567 
 766      00
 767              	.LASF17:
 768 00c7 76616C75 		.ascii	"value\000"
 768      6500
 769              	.LASF27:
 770 00cd 73746174 		.ascii	"staticBits\000"
 770      69634269 
 770      747300
 771              	.LASF25:
 772 00d8 47656E65 		.ascii	"Generated_Source\\PSoC5\\Rows.c\000"
 772      72617465 
 772      645F536F 
 772      75726365 
 772      5C50536F 
 773              	.LASF11:
 774 00f6 666C6F61 		.ascii	"float\000"
 774      7400
 775              	.LASF23:
 776 00fc 526F7773 		.ascii	"Rows_ClearInterrupt\000"
 776      5F436C65 
 776      6172496E 
 776      74657272 
 776      75707400 
 777              	.LASF1:
 778 0110 756E7369 		.ascii	"unsigned char\000"
 778      676E6564 
 778      20636861 
 778      7200
 779              	.LASF14:
 780 011e 72656738 		.ascii	"reg8\000"
 780      00
 781              	.LASF5:
 782 0123 6C6F6E67 		.ascii	"long unsigned int\000"
 782      20756E73 
 782      69676E65 
 782      6420696E 
 782      7400
 783              	.LASF3:
 784 0135 73686F72 		.ascii	"short unsigned int\000"
 784      7420756E 
 784      7369676E 
 784      65642069 
 784      6E7400
 785              	.LASF12:
 786 0148 646F7562 		.ascii	"double\000"
 786      6C6500
 787              	.LASF10:
 788 014f 75696E74 		.ascii	"uint16\000"
 788      313600
 789              	.LASF22:
 790 0156 706F7369 		.ascii	"position\000"
 790      74696F6E 
 790      00
 791              	.LASF8:
 792 015f 756E7369 		.ascii	"unsigned int\000"
 792      676E6564 
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccwi5RGX.s 			page 20


 792      20696E74 
 792      00
 793              	.LASF7:
 794 016c 6C6F6E67 		.ascii	"long long unsigned int\000"
 794      206C6F6E 
 794      6720756E 
 794      7369676E 
 794      65642069 
 795              	.LASF18:
 796 0183 6D6F6465 		.ascii	"mode\000"
 796      00
 797              	.LASF6:
 798 0188 6C6F6E67 		.ascii	"long long int\000"
 798      206C6F6E 
 798      6720696E 
 798      7400
 799              	.LASF13:
 800 0196 63686172 		.ascii	"char\000"
 800      00
 801              	.LASF2:
 802 019b 73686F72 		.ascii	"short int\000"
 802      7420696E 
 802      7400
 803              	.LASF9:
 804 01a5 75696E74 		.ascii	"uint8\000"
 804      3800
 805              	.LASF15:
 806 01ab 526F7773 		.ascii	"Rows_Write\000"
 806      5F577269 
 806      746500
 807              	.LASF26:
 808 01b6 433A5C55 		.ascii	"C:\\Users\\fabis\\Desktop\\CE210558_GPIO_Interrupt."
 808      73657273 
 808      5C666162 
 808      69735C44 
 808      65736B74 
 809 01e5 63796473 		.ascii	"cydsn\000"
 809      6E00
 810              	.LASF4:
 811 01eb 6C6F6E67 		.ascii	"long int\000"
 811      20696E74 
 811      00
 812              	.LASF0:
 813 01f4 7369676E 		.ascii	"signed char\000"
 813      65642063 
 813      68617200 
 814              	.LASF19:
 815 0200 526F7773 		.ascii	"Rows_Read\000"
 815      5F526561 
 815      6400
 816              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
