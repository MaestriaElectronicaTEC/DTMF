ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccmR1bZg.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"InterruptRoutine.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.GPIO_ISR,"ax",%progbits
  20              		.align	2
  21              		.global	GPIO_ISR
  22              		.code	16
  23              		.thumb_func
  24              		.type	GPIO_ISR, %function
  25              	GPIO_ISR:
  26              	.LFB34:
  27              		.file 1 "InterruptRoutine.c"
   1:InterruptRoutine.c **** /*****************************************************************************
   2:InterruptRoutine.c **** * File Name: InterruptRoutine.c
   3:InterruptRoutine.c **** *
   4:InterruptRoutine.c **** * Version: 1.0
   5:InterruptRoutine.c **** *
   6:InterruptRoutine.c **** * Description:
   7:InterruptRoutine.c **** * The file contains user ISR (as opposed to auto-generated ISRs) for the GPIO 
   8:InterruptRoutine.c **** * interrupt. In the ISR, Logic 0 is written at LED pin (port P0[2]) on the rising  
   9:InterruptRoutine.c **** * edge interrupt and Logic 1 is written on falling edge interrupt. For testing  
  10:InterruptRoutine.c **** * purposes, both the interrupt pins - P0[0] and P0[1] can be shorted externally  
  11:InterruptRoutine.c **** * and driven with the same signal.
  12:InterruptRoutine.c **** *
  13:InterruptRoutine.c **** * Related Document: Code example CE210558
  14:InterruptRoutine.c **** *
  15:InterruptRoutine.c **** * Hardware Dependency: See code example CE210558
  16:InterruptRoutine.c **** *
  17:InterruptRoutine.c **** ******************************************************************************
  18:InterruptRoutine.c **** * Copyright (2015), Cypress Semiconductor Corporation.
  19:InterruptRoutine.c **** ******************************************************************************
  20:InterruptRoutine.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  21:InterruptRoutine.c **** * protected by and subject to worldwide patent protection (United States and
  22:InterruptRoutine.c **** * foreign), United States copyright laws and international treaty provisions.
  23:InterruptRoutine.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  24:InterruptRoutine.c **** * license to copy, use, modify, create derivative works of, and compile the
  25:InterruptRoutine.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  26:InterruptRoutine.c **** * custom software in support of licensee product to be used only in conjunction
  27:InterruptRoutine.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  28:InterruptRoutine.c **** * Any reproduction, modification, translation, compilation, or representation of
  29:InterruptRoutine.c **** * this software except as specified above is prohibited without the express
  30:InterruptRoutine.c **** * written permission of Cypress.
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccmR1bZg.s 			page 2


  31:InterruptRoutine.c **** *
  32:InterruptRoutine.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  33:InterruptRoutine.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  34:InterruptRoutine.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  35:InterruptRoutine.c **** * Cypress reserves the right to make changes without further notice to the
  36:InterruptRoutine.c **** * materials described herein. Cypress does not assume any liability arising out
  37:InterruptRoutine.c **** * of the application or use of any product or circuit described herein. Cypress
  38:InterruptRoutine.c **** * does not authorize its products for use as critical components in life-support
  39:InterruptRoutine.c **** * systems where a malfunction or failure may reasonably be expected to result in
  40:InterruptRoutine.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  41:InterruptRoutine.c **** * support systems application implies that the manufacturer assumes all risk of
  42:InterruptRoutine.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  43:InterruptRoutine.c **** * limited by and subject to the applicable Cypress software license agreement.
  44:InterruptRoutine.c **** *****************************************************************************/
  45:InterruptRoutine.c **** 
  46:InterruptRoutine.c **** #include "InterruptRoutine.h"
  47:InterruptRoutine.c **** 
  48:InterruptRoutine.c **** CY_ISR(GPIO_ISR)
  49:InterruptRoutine.c **** {
  28              		.loc 1 49 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 90B5     		push	{r4, r7, lr}
  33              		.cfi_def_cfa_offset 12
  34              		.cfi_offset 4, -12
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 83B0     		sub	sp, sp, #12
  38              		.cfi_def_cfa_offset 24
  39 0004 00AF     		add	r7, sp, #0
  40              		.cfi_def_cfa_register 7
  50:InterruptRoutine.c **** 	/* Read the GPIO interrupt status and clear the interrupt */
  51:InterruptRoutine.c ****     
  52:InterruptRoutine.c ****     uint8 rowsOut = Rows_Read();
  41              		.loc 1 52 0
  42 0006 FC1D     		adds	r4, r7, #7
  43 0008 FFF7FEFF 		bl	Rows_Read
  44 000c 0300     		movs	r3, r0
  45 000e 2370     		strb	r3, [r4]
  53:InterruptRoutine.c ****     uint8 columnsOut = Columns_Read();
  46              		.loc 1 53 0
  47 0010 BC1D     		adds	r4, r7, #6
  48 0012 FFF7FEFF 		bl	Columns_Read
  49 0016 0300     		movs	r3, r0
  50 0018 2370     		strb	r3, [r4]
  54:InterruptRoutine.c ****     
  55:InterruptRoutine.c ****     if ( rowsOut > 0 && columnsOut > 0 )
  51              		.loc 1 55 0
  52 001a FB1D     		adds	r3, r7, #7
  53 001c 1B78     		ldrb	r3, [r3]
  54 001e 002B     		cmp	r3, #0
  55 0020 07D0     		beq	.L2
  56              		.loc 1 55 0 is_stmt 0 discriminator 1
  57 0022 BB1D     		adds	r3, r7, #6
  58 0024 1B78     		ldrb	r3, [r3]
  59 0026 002B     		cmp	r3, #0
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccmR1bZg.s 			page 3


  60 0028 03D0     		beq	.L2
  56:InterruptRoutine.c ****     {
  57:InterruptRoutine.c ****         Notification_Write(1);
  61              		.loc 1 57 0 is_stmt 1
  62 002a 0120     		movs	r0, #1
  63 002c FFF7FEFF 		bl	Notification_Write
  64 0030 02E0     		b	.L3
  65              	.L2:
  58:InterruptRoutine.c ****     }
  59:InterruptRoutine.c ****     else
  60:InterruptRoutine.c ****     {
  61:InterruptRoutine.c ****         Notification_Write(0);
  66              		.loc 1 61 0
  67 0032 0020     		movs	r0, #0
  68 0034 FFF7FEFF 		bl	Notification_Write
  69              	.L3:
  62:InterruptRoutine.c ****     }
  63:InterruptRoutine.c ****     
  64:InterruptRoutine.c **** 	//uint8 InterruptState = Pins_ClearInterrupt();
  65:InterruptRoutine.c **** 	
  66:InterruptRoutine.c **** 	/* If "ON" pin has triggered interrupt */
  67:InterruptRoutine.c **** 	/*if(InterruptState == ON_PIN)
  68:InterruptRoutine.c **** 	{
  69:InterruptRoutine.c **** 		Turn ON the LED
  70:InterruptRoutine.c **** 		Pin_LED_Write(LED_ON);
  71:InterruptRoutine.c **** 	}
  72:InterruptRoutine.c **** 	else
  73:InterruptRoutine.c **** 	If "OFF" pin has triggered interrupt
  74:InterruptRoutine.c **** 	if(InterruptState == OFF_PIN)
  75:InterruptRoutine.c **** 	{
  76:InterruptRoutine.c **** 		Turn OFF the LED
  77:InterruptRoutine.c **** 		Pin_LED_Write(LED_OFF);
  78:InterruptRoutine.c **** 	}*/
  79:InterruptRoutine.c **** }
  70              		.loc 1 79 0
  71 0038 C046     		nop
  72 003a BD46     		mov	sp, r7
  73 003c 03B0     		add	sp, sp, #12
  74              		@ sp needed
  75 003e 90BD     		pop	{r4, r7, pc}
  76              		.cfi_endproc
  77              	.LFE34:
  78              		.size	GPIO_ISR, .-GPIO_ISR
  79              		.text
  80              	.Letext0:
  81              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
  82              		.section	.debug_info,"",%progbits
  83              	.Ldebug_info0:
  84 0000 C5000000 		.4byte	0xc5
  85 0004 0400     		.2byte	0x4
  86 0006 00000000 		.4byte	.Ldebug_abbrev0
  87 000a 04       		.byte	0x4
  88 000b 01       		.uleb128 0x1
  89 000c 0C010000 		.4byte	.LASF16
  90 0010 0C       		.byte	0xc
  91 0011 C4000000 		.4byte	.LASF17
  92 0015 6F000000 		.4byte	.LASF18
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccmR1bZg.s 			page 4


  93 0019 00000000 		.4byte	.Ldebug_ranges0+0
  94 001d 00000000 		.4byte	0
  95 0021 00000000 		.4byte	.Ldebug_line0
  96 0025 02       		.uleb128 0x2
  97 0026 01       		.byte	0x1
  98 0027 06       		.byte	0x6
  99 0028 EA000000 		.4byte	.LASF0
 100 002c 02       		.uleb128 0x2
 101 002d 01       		.byte	0x1
 102 002e 08       		.byte	0x8
 103 002f 24000000 		.4byte	.LASF1
 104 0033 02       		.uleb128 0x2
 105 0034 02       		.byte	0x2
 106 0035 05       		.byte	0x5
 107 0036 02010000 		.4byte	.LASF2
 108 003a 02       		.uleb128 0x2
 109 003b 02       		.byte	0x2
 110 003c 07       		.byte	0x7
 111 003d D7000000 		.4byte	.LASF3
 112 0041 02       		.uleb128 0x2
 113 0042 04       		.byte	0x4
 114 0043 05       		.byte	0x5
 115 0044 B4000000 		.4byte	.LASF4
 116 0048 02       		.uleb128 0x2
 117 0049 04       		.byte	0x4
 118 004a 07       		.byte	0x7
 119 004b 40000000 		.4byte	.LASF5
 120 004f 02       		.uleb128 0x2
 121 0050 08       		.byte	0x8
 122 0051 05       		.byte	0x5
 123 0052 00000000 		.4byte	.LASF6
 124 0056 02       		.uleb128 0x2
 125 0057 08       		.byte	0x8
 126 0058 07       		.byte	0x7
 127 0059 52000000 		.4byte	.LASF7
 128 005d 03       		.uleb128 0x3
 129 005e 04       		.byte	0x4
 130 005f 05       		.byte	0x5
 131 0060 696E7400 		.ascii	"int\000"
 132 0064 02       		.uleb128 0x2
 133 0065 04       		.byte	0x4
 134 0066 07       		.byte	0x7
 135 0067 0E000000 		.4byte	.LASF8
 136 006b 04       		.uleb128 0x4
 137 006c 3A000000 		.4byte	.LASF19
 138 0070 02       		.byte	0x2
 139 0071 3801     		.2byte	0x138
 140 0073 2C000000 		.4byte	0x2c
 141 0077 02       		.uleb128 0x2
 142 0078 04       		.byte	0x4
 143 0079 04       		.byte	0x4
 144 007a 69000000 		.4byte	.LASF9
 145 007e 02       		.uleb128 0x2
 146 007f 08       		.byte	0x8
 147 0080 04       		.byte	0x4
 148 0081 BD000000 		.4byte	.LASF10
 149 0085 02       		.uleb128 0x2
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccmR1bZg.s 			page 5


 150 0086 01       		.byte	0x1
 151 0087 08       		.byte	0x8
 152 0088 AF000000 		.4byte	.LASF11
 153 008c 02       		.uleb128 0x2
 154 008d 04       		.byte	0x4
 155 008e 07       		.byte	0x7
 156 008f 9A010000 		.4byte	.LASF12
 157 0093 02       		.uleb128 0x2
 158 0094 08       		.byte	0x8
 159 0095 04       		.byte	0x4
 160 0096 F6000000 		.4byte	.LASF13
 161 009a 05       		.uleb128 0x5
 162 009b 1B000000 		.4byte	.LASF20
 163 009f 01       		.byte	0x1
 164 00a0 30       		.byte	0x30
 165 00a1 00000000 		.4byte	.LFB34
 166 00a5 40000000 		.4byte	.LFE34-.LFB34
 167 00a9 01       		.uleb128 0x1
 168 00aa 9C       		.byte	0x9c
 169 00ab 06       		.uleb128 0x6
 170 00ac 32000000 		.4byte	.LASF14
 171 00b0 01       		.byte	0x1
 172 00b1 34       		.byte	0x34
 173 00b2 6B000000 		.4byte	0x6b
 174 00b6 02       		.uleb128 0x2
 175 00b7 91       		.byte	0x91
 176 00b8 6F       		.sleb128 -17
 177 00b9 06       		.uleb128 0x6
 178 00ba A4000000 		.4byte	.LASF15
 179 00be 01       		.byte	0x1
 180 00bf 35       		.byte	0x35
 181 00c0 6B000000 		.4byte	0x6b
 182 00c4 02       		.uleb128 0x2
 183 00c5 91       		.byte	0x91
 184 00c6 6E       		.sleb128 -18
 185 00c7 00       		.byte	0
 186 00c8 00       		.byte	0
 187              		.section	.debug_abbrev,"",%progbits
 188              	.Ldebug_abbrev0:
 189 0000 01       		.uleb128 0x1
 190 0001 11       		.uleb128 0x11
 191 0002 01       		.byte	0x1
 192 0003 25       		.uleb128 0x25
 193 0004 0E       		.uleb128 0xe
 194 0005 13       		.uleb128 0x13
 195 0006 0B       		.uleb128 0xb
 196 0007 03       		.uleb128 0x3
 197 0008 0E       		.uleb128 0xe
 198 0009 1B       		.uleb128 0x1b
 199 000a 0E       		.uleb128 0xe
 200 000b 55       		.uleb128 0x55
 201 000c 17       		.uleb128 0x17
 202 000d 11       		.uleb128 0x11
 203 000e 01       		.uleb128 0x1
 204 000f 10       		.uleb128 0x10
 205 0010 17       		.uleb128 0x17
 206 0011 00       		.byte	0
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccmR1bZg.s 			page 6


 207 0012 00       		.byte	0
 208 0013 02       		.uleb128 0x2
 209 0014 24       		.uleb128 0x24
 210 0015 00       		.byte	0
 211 0016 0B       		.uleb128 0xb
 212 0017 0B       		.uleb128 0xb
 213 0018 3E       		.uleb128 0x3e
 214 0019 0B       		.uleb128 0xb
 215 001a 03       		.uleb128 0x3
 216 001b 0E       		.uleb128 0xe
 217 001c 00       		.byte	0
 218 001d 00       		.byte	0
 219 001e 03       		.uleb128 0x3
 220 001f 24       		.uleb128 0x24
 221 0020 00       		.byte	0
 222 0021 0B       		.uleb128 0xb
 223 0022 0B       		.uleb128 0xb
 224 0023 3E       		.uleb128 0x3e
 225 0024 0B       		.uleb128 0xb
 226 0025 03       		.uleb128 0x3
 227 0026 08       		.uleb128 0x8
 228 0027 00       		.byte	0
 229 0028 00       		.byte	0
 230 0029 04       		.uleb128 0x4
 231 002a 16       		.uleb128 0x16
 232 002b 00       		.byte	0
 233 002c 03       		.uleb128 0x3
 234 002d 0E       		.uleb128 0xe
 235 002e 3A       		.uleb128 0x3a
 236 002f 0B       		.uleb128 0xb
 237 0030 3B       		.uleb128 0x3b
 238 0031 05       		.uleb128 0x5
 239 0032 49       		.uleb128 0x49
 240 0033 13       		.uleb128 0x13
 241 0034 00       		.byte	0
 242 0035 00       		.byte	0
 243 0036 05       		.uleb128 0x5
 244 0037 2E       		.uleb128 0x2e
 245 0038 01       		.byte	0x1
 246 0039 3F       		.uleb128 0x3f
 247 003a 19       		.uleb128 0x19
 248 003b 03       		.uleb128 0x3
 249 003c 0E       		.uleb128 0xe
 250 003d 3A       		.uleb128 0x3a
 251 003e 0B       		.uleb128 0xb
 252 003f 3B       		.uleb128 0x3b
 253 0040 0B       		.uleb128 0xb
 254 0041 27       		.uleb128 0x27
 255 0042 19       		.uleb128 0x19
 256 0043 11       		.uleb128 0x11
 257 0044 01       		.uleb128 0x1
 258 0045 12       		.uleb128 0x12
 259 0046 06       		.uleb128 0x6
 260 0047 40       		.uleb128 0x40
 261 0048 18       		.uleb128 0x18
 262 0049 9642     		.uleb128 0x2116
 263 004b 19       		.uleb128 0x19
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccmR1bZg.s 			page 7


 264 004c 00       		.byte	0
 265 004d 00       		.byte	0
 266 004e 06       		.uleb128 0x6
 267 004f 34       		.uleb128 0x34
 268 0050 00       		.byte	0
 269 0051 03       		.uleb128 0x3
 270 0052 0E       		.uleb128 0xe
 271 0053 3A       		.uleb128 0x3a
 272 0054 0B       		.uleb128 0xb
 273 0055 3B       		.uleb128 0x3b
 274 0056 0B       		.uleb128 0xb
 275 0057 49       		.uleb128 0x49
 276 0058 13       		.uleb128 0x13
 277 0059 02       		.uleb128 0x2
 278 005a 18       		.uleb128 0x18
 279 005b 00       		.byte	0
 280 005c 00       		.byte	0
 281 005d 00       		.byte	0
 282              		.section	.debug_aranges,"",%progbits
 283 0000 1C000000 		.4byte	0x1c
 284 0004 0200     		.2byte	0x2
 285 0006 00000000 		.4byte	.Ldebug_info0
 286 000a 04       		.byte	0x4
 287 000b 00       		.byte	0
 288 000c 0000     		.2byte	0
 289 000e 0000     		.2byte	0
 290 0010 00000000 		.4byte	.LFB34
 291 0014 40000000 		.4byte	.LFE34-.LFB34
 292 0018 00000000 		.4byte	0
 293 001c 00000000 		.4byte	0
 294              		.section	.debug_ranges,"",%progbits
 295              	.Ldebug_ranges0:
 296 0000 00000000 		.4byte	.LFB34
 297 0004 40000000 		.4byte	.LFE34
 298 0008 00000000 		.4byte	0
 299 000c 00000000 		.4byte	0
 300              		.section	.debug_line,"",%progbits
 301              	.Ldebug_line0:
 302 0000 71000000 		.section	.debug_str,"MS",%progbits,1
 302      02004D00 
 302      00000201 
 302      FB0E0D00 
 302      01010101 
 303              	.LASF6:
 304 0000 6C6F6E67 		.ascii	"long long int\000"
 304      206C6F6E 
 304      6720696E 
 304      7400
 305              	.LASF8:
 306 000e 756E7369 		.ascii	"unsigned int\000"
 306      676E6564 
 306      20696E74 
 306      00
 307              	.LASF20:
 308 001b 4750494F 		.ascii	"GPIO_ISR\000"
 308      5F495352 
 308      00
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccmR1bZg.s 			page 8


 309              	.LASF1:
 310 0024 756E7369 		.ascii	"unsigned char\000"
 310      676E6564 
 310      20636861 
 310      7200
 311              	.LASF14:
 312 0032 726F7773 		.ascii	"rowsOut\000"
 312      4F757400 
 313              	.LASF19:
 314 003a 75696E74 		.ascii	"uint8\000"
 314      3800
 315              	.LASF5:
 316 0040 6C6F6E67 		.ascii	"long unsigned int\000"
 316      20756E73 
 316      69676E65 
 316      6420696E 
 316      7400
 317              	.LASF7:
 318 0052 6C6F6E67 		.ascii	"long long unsigned int\000"
 318      206C6F6E 
 318      6720756E 
 318      7369676E 
 318      65642069 
 319              	.LASF9:
 320 0069 666C6F61 		.ascii	"float\000"
 320      7400
 321              	.LASF18:
 322 006f 433A5C55 		.ascii	"C:\\Users\\fabis\\Desktop\\CE210558_GPIO_Interrupt."
 322      73657273 
 322      5C666162 
 322      69735C44 
 322      65736B74 
 323 009e 63796473 		.ascii	"cydsn\000"
 323      6E00
 324              	.LASF15:
 325 00a4 636F6C75 		.ascii	"columnsOut\000"
 325      6D6E734F 
 325      757400
 326              	.LASF11:
 327 00af 63686172 		.ascii	"char\000"
 327      00
 328              	.LASF4:
 329 00b4 6C6F6E67 		.ascii	"long int\000"
 329      20696E74 
 329      00
 330              	.LASF10:
 331 00bd 646F7562 		.ascii	"double\000"
 331      6C6500
 332              	.LASF17:
 333 00c4 496E7465 		.ascii	"InterruptRoutine.c\000"
 333      72727570 
 333      74526F75 
 333      74696E65 
 333      2E6300
 334              	.LASF3:
 335 00d7 73686F72 		.ascii	"short unsigned int\000"
 335      7420756E 
ARM GAS  C:\Users\fabis\AppData\Local\Temp\ccmR1bZg.s 			page 9


 335      7369676E 
 335      65642069 
 335      6E7400
 336              	.LASF0:
 337 00ea 7369676E 		.ascii	"signed char\000"
 337      65642063 
 337      68617200 
 338              	.LASF13:
 339 00f6 6C6F6E67 		.ascii	"long double\000"
 339      20646F75 
 339      626C6500 
 340              	.LASF2:
 341 0102 73686F72 		.ascii	"short int\000"
 341      7420696E 
 341      7400
 342              	.LASF16:
 343 010c 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 343      43313120 
 343      352E342E 
 343      31203230 
 343      31363036 
 344 013f 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 344      20726576 
 344      6973696F 
 344      6E203233 
 344      37373135 
 345 0172 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 345      66756E63 
 345      74696F6E 
 345      2D736563 
 345      74696F6E 
 346              	.LASF12:
 347 019a 73697A65 		.ascii	"sizetype\000"
 347      74797065 
 347      00
 348              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
